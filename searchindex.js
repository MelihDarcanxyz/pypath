Search.setIndex({"docnames": ["api/pypath", "api/pypath.core", "api/pypath.core.attrs", "api/pypath.core.attrs.AttributeHandler", "api/pypath.core.common", "api/pypath.core.common.filter_network_df", "api/pypath.data", "api/pypath.disclaimer", "api/pypath.info", "api/pypath.inputs", "api/pypath.inputs.cell", "api/pypath.inputs.cell.cell_supplementary", "api/pypath.inputs.common", "api/pypath.inputs.common.csv_sep_change", "api/pypath.inputs.common.glom_fields", "api/pypath.inputs.common.json_extract", "api/pypath.inputs.common.json_read", "api/pypath.inputs.common.read_table", "api/pypath.inputs.common.read_xls", "api/pypath.inputs.credentials", "api/pypath.inputs.credentials.credentials", "api/pypath.inputs.ebi", "api/pypath.inputs.ebi.ebi_rest", "api/pypath.inputs.embopress", "api/pypath.inputs.embopress.embopress_supplementary", "api/pypath.inputs.get_method", "api/pypath.inputs.main", "api/pypath.inputs.mitab", "api/pypath.inputs.mitab.mitab_field_list", "api/pypath.inputs.mitab.mitab_field_uniprot", "api/pypath.inputs.rdata", "api/pypath.inputs.science", "api/pypath.inputs.science.science_download", "api/pypath.internals", "api/pypath.internals.input_formats", "api/pypath.internals.input_formats.ArrayMapping", "api/pypath.internals.input_formats.BiomartMapping", "api/pypath.internals.input_formats.FileMapping", "api/pypath.internals.input_formats.MappingInput", "api/pypath.internals.input_formats.NetworkInput", "api/pypath.internals.input_formats.PickleMapping", "api/pypath.internals.input_formats.ProMapping", "api/pypath.internals.input_formats.ReadList", "api/pypath.internals.input_formats.UnichemMapping", "api/pypath.internals.input_formats.UniprotListMapping", "api/pypath.internals.input_formats.UniprotMapping", "api/pypath.internals.license", "api/pypath.internals.license.License", "api/pypath.internals.license.LicenseAttrib", "api/pypath.internals.license.LicenseFeature", "api/pypath.internals.license.LicensePurpose", "api/pypath.internals.license.LicenseSharing", "api/pypath.internals.maps", "api/pypath.internals.resource", "api/pypath.internals.resource.AbstractResource", "api/pypath.internals.resource.EnzymeSubstrateResource", "api/pypath.internals.resource.EnzymeSubstrateResourceKey", "api/pypath.internals.resource.NetworkResource", "api/pypath.internals.resource.NetworkResourceKey", "api/pypath.internals.resource.ResourceAttributes", "api/pypath.legacy", "api/pypath.legacy.db_categories", "api/pypath.legacy.db_categories.get_categories", "api/pypath.legacy.db_categories.get_category", "api/pypath.log", "api/pypath.resources", "api/pypath.resources.controller", "api/pypath.resources.controller.ResourceController", "api/pypath.resources.data", "api/pypath.resources.get_controller", "api/pypath.resources.licenses", "api/pypath.resources.licenses.Licenses", "api/pypath.share", "api/pypath.share.cache", "api/pypath.share.cache.cache_item", "api/pypath.share.cache.get_cachedir", "api/pypath.share.common", "api/pypath.share.common.add_to_list", "api/pypath.share.common.add_to_set", "api/pypath.share.common.at_least_in", "api/pypath.share.common.clean_dict", "api/pypath.share.common.combine_attrs", "api/pypath.share.common.console", "api/pypath.share.common.decode", "api/pypath.share.common.del_empty", "api/pypath.share.common.df_memory_usage", "api/pypath.share.common.dict_collapse_keys", "api/pypath.share.common.dict_counts", "api/pypath.share.common.dict_diff", "api/pypath.share.common.dict_expand_keys", "api/pypath.share.common.dict_percent", "api/pypath.share.common.dict_set_path", "api/pypath.share.common.dict_set_percent", "api/pypath.share.common.dict_str", "api/pypath.share.common.dict_subtotals", "api/pypath.share.common.dict_sym_diff", "api/pypath.share.common.dict_union", "api/pypath.share.common.eq", "api/pypath.share.common.filtr", "api/pypath.share.common.first", "api/pypath.share.common.flat_list", "api/pypath.share.common.float_or_nan", "api/pypath.share.common.gen_session_id", "api/pypath.share.common.get", "api/pypath.share.common.get_args", "api/pypath.share.common.is_float", "api/pypath.share.common.is_int", "api/pypath.share.common.is_str", "api/pypath.share.common.jaccard_index", "api/pypath.share.common.join_dicts", "api/pypath.share.common.latex_table", "api/pypath.share.common.match", "api/pypath.share.common.maybe_in_dict", "api/pypath.share.common.md5", "api/pypath.share.common.merge_dicts", "api/pypath.share.common.n_shared_elements", "api/pypath.share.common.n_shared_foreach", "api/pypath.share.common.n_shared_total", "api/pypath.share.common.n_shared_unique_foreach", "api/pypath.share.common.n_unique_elements", "api/pypath.share.common.n_unique_foreach", "api/pypath.share.common.n_unique_total", "api/pypath.share.common.negate", "api/pypath.share.common.none_or_len", "api/pypath.share.common.paginate", "api/pypath.share.common.prefix", "api/pypath.share.common.print_table", "api/pypath.share.common.re_safe_groups", "api/pypath.share.common.remove_prefix", "api/pypath.share.common.rotate", "api/pypath.share.common.sets_to_sorted_lists", "api/pypath.share.common.sfirst", "api/pypath.share.common.shared_elements", "api/pypath.share.common.shared_foreach", "api/pypath.share.common.shared_total", "api/pypath.share.common.shared_unique", "api/pypath.share.common.shared_unique_foreach", "api/pypath.share.common.shared_unique_total", "api/pypath.share.common.silent", "api/pypath.share.common.simpson_index", "api/pypath.share.common.simpson_index_counts", "api/pypath.share.common.something", "api/pypath.share.common.sorensen_index", "api/pypath.share.common.suffix", "api/pypath.share.common.sum_dicts", "api/pypath.share.common.swap_dict", "api/pypath.share.common.swap_dict_simple", "api/pypath.share.common.swap_suffix", "api/pypath.share.common.table_add_row_numbers", "api/pypath.share.common.table_format", "api/pypath.share.common.table_textwrap", "api/pypath.share.common.to_list", "api/pypath.share.common.to_set", "api/pypath.share.common.try_bool", "api/pypath.share.common.try_float", "api/pypath.share.common.tsv_table", "api/pypath.share.common.uniq_list", "api/pypath.share.common.uniq_list1", "api/pypath.share.common.uniq_list2", "api/pypath.share.common.uniq_ord_list", "api/pypath.share.common.unique_elements", "api/pypath.share.common.unique_foreach", "api/pypath.share.common.unique_list", "api/pypath.share.common.unique_total", "api/pypath.share.common.upper0", "api/pypath.share.common.values", "api/pypath.share.common.wcl", "api/pypath.share.common.wrap_truncate", "api/pypath.share.constants", "api/pypath.share.curl", "api/pypath.share.curl.Curl", "api/pypath.share.curl.FileOpener", "api/pypath.share.curl.RemoteFile", "api/pypath.share.curl.cache_delete_off", "api/pypath.share.curl.cache_delete_on", "api/pypath.share.curl.cache_off", "api/pypath.share.curl.cache_on", "api/pypath.share.curl.cache_print_off", "api/pypath.share.curl.cache_print_on", "api/pypath.share.curl.debug_off", "api/pypath.share.curl.debug_on", "api/pypath.share.curl.dryrun_off", "api/pypath.share.curl.dryrun_on", "api/pypath.share.curl.is_url", "api/pypath.share.curl.preserve_off", "api/pypath.share.curl.preserve_on", "api/pypath.share.log", "api/pypath.share.log.Logger", "api/pypath.share.log.new_logger", "api/pypath.share.progress", "api/pypath.share.progress.Progress", "api/pypath.share.session", "api/pypath.share.session.Logger", "api/pypath.share.session.Session", "api/pypath.share.session.get_log", "api/pypath.share.session.get_session", "api/pypath.share.session.new_session", "api/pypath.share.settings", "api/pypath.share.settings.Settings", "api/pypath.share.settings.context", "api/pypath.share.settings.get", "api/pypath.share.settings.setup", "api/pypath.utils", "api/pypath.utils.proteomicsdb", "api/pypath.utils.proteomicsdb.ProteomicsDB", "api/pypath.utils.residues", "api/pypath.utils.residues.ResidueMapper", "api/pypath.visual", "api/pypath.visual.drawing", "api/pypath.visual.drawing.InterSet", "api/pypath.visual.drawing.Plot", "api/pypath.visual.igraph_drawing", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer", "api/pypath.visual.igraph_drawing.TextDrawer", "api/pypath.visual.igraph_drawing.edge", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "api/pypath.visual.igraph_drawing.vertex", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "contents", "index", "notebooks/manual", "reference", "releasehistory", "webservice"], "filenames": ["api/pypath.rst", "api/pypath.core.rst", "api/pypath.core.attrs.rst", "api/pypath.core.attrs.AttributeHandler.rst", "api/pypath.core.common.rst", "api/pypath.core.common.filter_network_df.rst", "api/pypath.data.rst", "api/pypath.disclaimer.rst", "api/pypath.info.rst", "api/pypath.inputs.rst", "api/pypath.inputs.cell.rst", "api/pypath.inputs.cell.cell_supplementary.rst", "api/pypath.inputs.common.rst", "api/pypath.inputs.common.csv_sep_change.rst", "api/pypath.inputs.common.glom_fields.rst", "api/pypath.inputs.common.json_extract.rst", "api/pypath.inputs.common.json_read.rst", "api/pypath.inputs.common.read_table.rst", "api/pypath.inputs.common.read_xls.rst", "api/pypath.inputs.credentials.rst", "api/pypath.inputs.credentials.credentials.rst", "api/pypath.inputs.ebi.rst", "api/pypath.inputs.ebi.ebi_rest.rst", "api/pypath.inputs.embopress.rst", "api/pypath.inputs.embopress.embopress_supplementary.rst", "api/pypath.inputs.get_method.rst", "api/pypath.inputs.main.rst", "api/pypath.inputs.mitab.rst", "api/pypath.inputs.mitab.mitab_field_list.rst", "api/pypath.inputs.mitab.mitab_field_uniprot.rst", "api/pypath.inputs.rdata.rst", "api/pypath.inputs.science.rst", "api/pypath.inputs.science.science_download.rst", "api/pypath.internals.rst", "api/pypath.internals.input_formats.rst", "api/pypath.internals.input_formats.ArrayMapping.rst", "api/pypath.internals.input_formats.BiomartMapping.rst", "api/pypath.internals.input_formats.FileMapping.rst", "api/pypath.internals.input_formats.MappingInput.rst", "api/pypath.internals.input_formats.NetworkInput.rst", "api/pypath.internals.input_formats.PickleMapping.rst", "api/pypath.internals.input_formats.ProMapping.rst", "api/pypath.internals.input_formats.ReadList.rst", "api/pypath.internals.input_formats.UnichemMapping.rst", "api/pypath.internals.input_formats.UniprotListMapping.rst", "api/pypath.internals.input_formats.UniprotMapping.rst", "api/pypath.internals.license.rst", "api/pypath.internals.license.License.rst", "api/pypath.internals.license.LicenseAttrib.rst", "api/pypath.internals.license.LicenseFeature.rst", "api/pypath.internals.license.LicensePurpose.rst", "api/pypath.internals.license.LicenseSharing.rst", "api/pypath.internals.maps.rst", "api/pypath.internals.resource.rst", "api/pypath.internals.resource.AbstractResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResource.rst", "api/pypath.internals.resource.EnzymeSubstrateResourceKey.rst", "api/pypath.internals.resource.NetworkResource.rst", "api/pypath.internals.resource.NetworkResourceKey.rst", "api/pypath.internals.resource.ResourceAttributes.rst", "api/pypath.legacy.rst", "api/pypath.legacy.db_categories.rst", "api/pypath.legacy.db_categories.get_categories.rst", "api/pypath.legacy.db_categories.get_category.rst", "api/pypath.log.rst", "api/pypath.resources.rst", "api/pypath.resources.controller.rst", "api/pypath.resources.controller.ResourceController.rst", "api/pypath.resources.data.rst", "api/pypath.resources.get_controller.rst", "api/pypath.resources.licenses.rst", "api/pypath.resources.licenses.Licenses.rst", "api/pypath.share.rst", "api/pypath.share.cache.rst", "api/pypath.share.cache.cache_item.rst", "api/pypath.share.cache.get_cachedir.rst", "api/pypath.share.common.rst", "api/pypath.share.common.add_to_list.rst", "api/pypath.share.common.add_to_set.rst", "api/pypath.share.common.at_least_in.rst", "api/pypath.share.common.clean_dict.rst", "api/pypath.share.common.combine_attrs.rst", "api/pypath.share.common.console.rst", "api/pypath.share.common.decode.rst", "api/pypath.share.common.del_empty.rst", "api/pypath.share.common.df_memory_usage.rst", "api/pypath.share.common.dict_collapse_keys.rst", "api/pypath.share.common.dict_counts.rst", "api/pypath.share.common.dict_diff.rst", "api/pypath.share.common.dict_expand_keys.rst", "api/pypath.share.common.dict_percent.rst", "api/pypath.share.common.dict_set_path.rst", "api/pypath.share.common.dict_set_percent.rst", "api/pypath.share.common.dict_str.rst", "api/pypath.share.common.dict_subtotals.rst", "api/pypath.share.common.dict_sym_diff.rst", "api/pypath.share.common.dict_union.rst", "api/pypath.share.common.eq.rst", "api/pypath.share.common.filtr.rst", "api/pypath.share.common.first.rst", "api/pypath.share.common.flat_list.rst", "api/pypath.share.common.float_or_nan.rst", "api/pypath.share.common.gen_session_id.rst", "api/pypath.share.common.get.rst", "api/pypath.share.common.get_args.rst", "api/pypath.share.common.is_float.rst", "api/pypath.share.common.is_int.rst", "api/pypath.share.common.is_str.rst", "api/pypath.share.common.jaccard_index.rst", "api/pypath.share.common.join_dicts.rst", "api/pypath.share.common.latex_table.rst", "api/pypath.share.common.match.rst", "api/pypath.share.common.maybe_in_dict.rst", "api/pypath.share.common.md5.rst", "api/pypath.share.common.merge_dicts.rst", "api/pypath.share.common.n_shared_elements.rst", "api/pypath.share.common.n_shared_foreach.rst", "api/pypath.share.common.n_shared_total.rst", "api/pypath.share.common.n_shared_unique_foreach.rst", "api/pypath.share.common.n_unique_elements.rst", "api/pypath.share.common.n_unique_foreach.rst", "api/pypath.share.common.n_unique_total.rst", "api/pypath.share.common.negate.rst", "api/pypath.share.common.none_or_len.rst", "api/pypath.share.common.paginate.rst", "api/pypath.share.common.prefix.rst", "api/pypath.share.common.print_table.rst", "api/pypath.share.common.re_safe_groups.rst", "api/pypath.share.common.remove_prefix.rst", "api/pypath.share.common.rotate.rst", "api/pypath.share.common.sets_to_sorted_lists.rst", "api/pypath.share.common.sfirst.rst", "api/pypath.share.common.shared_elements.rst", "api/pypath.share.common.shared_foreach.rst", "api/pypath.share.common.shared_total.rst", "api/pypath.share.common.shared_unique.rst", "api/pypath.share.common.shared_unique_foreach.rst", "api/pypath.share.common.shared_unique_total.rst", "api/pypath.share.common.silent.rst", "api/pypath.share.common.simpson_index.rst", "api/pypath.share.common.simpson_index_counts.rst", "api/pypath.share.common.something.rst", "api/pypath.share.common.sorensen_index.rst", "api/pypath.share.common.suffix.rst", "api/pypath.share.common.sum_dicts.rst", "api/pypath.share.common.swap_dict.rst", "api/pypath.share.common.swap_dict_simple.rst", "api/pypath.share.common.swap_suffix.rst", "api/pypath.share.common.table_add_row_numbers.rst", "api/pypath.share.common.table_format.rst", "api/pypath.share.common.table_textwrap.rst", "api/pypath.share.common.to_list.rst", "api/pypath.share.common.to_set.rst", "api/pypath.share.common.try_bool.rst", "api/pypath.share.common.try_float.rst", "api/pypath.share.common.tsv_table.rst", "api/pypath.share.common.uniq_list.rst", "api/pypath.share.common.uniq_list1.rst", "api/pypath.share.common.uniq_list2.rst", "api/pypath.share.common.uniq_ord_list.rst", "api/pypath.share.common.unique_elements.rst", "api/pypath.share.common.unique_foreach.rst", "api/pypath.share.common.unique_list.rst", "api/pypath.share.common.unique_total.rst", "api/pypath.share.common.upper0.rst", "api/pypath.share.common.values.rst", "api/pypath.share.common.wcl.rst", "api/pypath.share.common.wrap_truncate.rst", "api/pypath.share.constants.rst", "api/pypath.share.curl.rst", "api/pypath.share.curl.Curl.rst", "api/pypath.share.curl.FileOpener.rst", "api/pypath.share.curl.RemoteFile.rst", "api/pypath.share.curl.cache_delete_off.rst", "api/pypath.share.curl.cache_delete_on.rst", "api/pypath.share.curl.cache_off.rst", "api/pypath.share.curl.cache_on.rst", "api/pypath.share.curl.cache_print_off.rst", "api/pypath.share.curl.cache_print_on.rst", "api/pypath.share.curl.debug_off.rst", "api/pypath.share.curl.debug_on.rst", "api/pypath.share.curl.dryrun_off.rst", "api/pypath.share.curl.dryrun_on.rst", "api/pypath.share.curl.is_url.rst", "api/pypath.share.curl.preserve_off.rst", "api/pypath.share.curl.preserve_on.rst", "api/pypath.share.log.rst", "api/pypath.share.log.Logger.rst", "api/pypath.share.log.new_logger.rst", "api/pypath.share.progress.rst", "api/pypath.share.progress.Progress.rst", "api/pypath.share.session.rst", "api/pypath.share.session.Logger.rst", "api/pypath.share.session.Session.rst", "api/pypath.share.session.get_log.rst", "api/pypath.share.session.get_session.rst", "api/pypath.share.session.new_session.rst", "api/pypath.share.settings.rst", "api/pypath.share.settings.Settings.rst", "api/pypath.share.settings.context.rst", "api/pypath.share.settings.get.rst", "api/pypath.share.settings.setup.rst", "api/pypath.utils.rst", "api/pypath.utils.proteomicsdb.rst", "api/pypath.utils.proteomicsdb.ProteomicsDB.rst", "api/pypath.utils.residues.rst", "api/pypath.utils.residues.ResidueMapper.rst", "api/pypath.visual.rst", "api/pypath.visual.drawing.rst", "api/pypath.visual.drawing.InterSet.rst", "api/pypath.visual.drawing.Plot.rst", "api/pypath.visual.igraph_drawing.rst", "api/pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.rst", "api/pypath.visual.igraph_drawing.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.rst", "api/pypath.visual.igraph_drawing.DefaultVertexDrawer.rst", "api/pypath.visual.igraph_drawing.TextDrawer.rst", "api/pypath.visual.igraph_drawing.edge.rst", "api/pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.rst", "api/pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.rst", "contents.rst", "index.rst", "notebooks/manual.ipynb", "reference.rst", "releasehistory.rst", "webservice.rst"], "titles": ["pypath", "pypath.core", "pypath.core.attrs", "pypath.core.attrs.AttributeHandler", "pypath.core.common", "pypath.core.common.filter_network_df", "pypath.data", "pypath.disclaimer", "pypath.info", "pypath.inputs", "pypath.inputs.cell", "pypath.inputs.cell.cell_supplementary", "pypath.inputs.common", "pypath.inputs.common.csv_sep_change", "pypath.inputs.common.glom_fields", "pypath.inputs.common.json_extract", "pypath.inputs.common.json_read", "pypath.inputs.common.read_table", "pypath.inputs.common.read_xls", "pypath.inputs.credentials", "pypath.inputs.credentials.credentials", "pypath.inputs.ebi", "pypath.inputs.ebi.ebi_rest", "pypath.inputs.embopress", "pypath.inputs.embopress.embopress_supplementary", "pypath.inputs.get_method", "pypath.inputs.main", "pypath.inputs.mitab", "pypath.inputs.mitab.mitab_field_list", "pypath.inputs.mitab.mitab_field_uniprot", "pypath.inputs.rdata", "pypath.inputs.science", "pypath.inputs.science.science_download", "pypath.internals", "pypath.internals.input_formats", "pypath.internals.input_formats.ArrayMapping", "pypath.internals.input_formats.BiomartMapping", "pypath.internals.input_formats.FileMapping", "pypath.internals.input_formats.MappingInput", "pypath.internals.input_formats.NetworkInput", "pypath.internals.input_formats.PickleMapping", "pypath.internals.input_formats.ProMapping", "pypath.internals.input_formats.ReadList", "pypath.internals.input_formats.UnichemMapping", "pypath.internals.input_formats.UniprotListMapping", "pypath.internals.input_formats.UniprotMapping", "pypath.internals.license", "pypath.internals.license.License", "pypath.internals.license.LicenseAttrib", "pypath.internals.license.LicenseFeature", "pypath.internals.license.LicensePurpose", "pypath.internals.license.LicenseSharing", "pypath.internals.maps", "pypath.internals.resource", "pypath.internals.resource.AbstractResource", "pypath.internals.resource.EnzymeSubstrateResource", "pypath.internals.resource.EnzymeSubstrateResourceKey", "pypath.internals.resource.NetworkResource", "pypath.internals.resource.NetworkResourceKey", "pypath.internals.resource.ResourceAttributes", "pypath.legacy", "pypath.legacy.db_categories", "pypath.legacy.db_categories.get_categories", "pypath.legacy.db_categories.get_category", "pypath.log", "pypath.resources", "pypath.resources.controller", "pypath.resources.controller.ResourceController", "pypath.resources.data", "pypath.resources.get_controller", "pypath.resources.licenses", "pypath.resources.licenses.Licenses", "pypath.share", "pypath.share.cache", "pypath.share.cache.cache_item", "pypath.share.cache.get_cachedir", "pypath.share.common", "pypath.share.common.add_to_list", "pypath.share.common.add_to_set", "pypath.share.common.at_least_in", "pypath.share.common.clean_dict", "pypath.share.common.combine_attrs", "pypath.share.common.console", "pypath.share.common.decode", "pypath.share.common.del_empty", "pypath.share.common.df_memory_usage", "pypath.share.common.dict_collapse_keys", "pypath.share.common.dict_counts", "pypath.share.common.dict_diff", "pypath.share.common.dict_expand_keys", "pypath.share.common.dict_percent", "pypath.share.common.dict_set_path", "pypath.share.common.dict_set_percent", "pypath.share.common.dict_str", "pypath.share.common.dict_subtotals", "pypath.share.common.dict_sym_diff", "pypath.share.common.dict_union", "pypath.share.common.eq", "pypath.share.common.filtr", "pypath.share.common.first", "pypath.share.common.flat_list", "pypath.share.common.float_or_nan", "pypath.share.common.gen_session_id", "pypath.share.common.get", "pypath.share.common.get_args", "pypath.share.common.is_float", "pypath.share.common.is_int", "pypath.share.common.is_str", "pypath.share.common.jaccard_index", "pypath.share.common.join_dicts", "pypath.share.common.latex_table", "pypath.share.common.match", "pypath.share.common.maybe_in_dict", "pypath.share.common.md5", "pypath.share.common.merge_dicts", "pypath.share.common.n_shared_elements", "pypath.share.common.n_shared_foreach", "pypath.share.common.n_shared_total", "pypath.share.common.n_shared_unique_foreach", "pypath.share.common.n_unique_elements", "pypath.share.common.n_unique_foreach", "pypath.share.common.n_unique_total", "pypath.share.common.negate", "pypath.share.common.none_or_len", "pypath.share.common.paginate", "pypath.share.common.prefix", "pypath.share.common.print_table", "pypath.share.common.re_safe_groups", "pypath.share.common.remove_prefix", "pypath.share.common.rotate", "pypath.share.common.sets_to_sorted_lists", "pypath.share.common.sfirst", "pypath.share.common.shared_elements", "pypath.share.common.shared_foreach", "pypath.share.common.shared_total", "pypath.share.common.shared_unique", "pypath.share.common.shared_unique_foreach", "pypath.share.common.shared_unique_total", "pypath.share.common.silent", "pypath.share.common.simpson_index", "pypath.share.common.simpson_index_counts", "pypath.share.common.something", "pypath.share.common.sorensen_index", "pypath.share.common.suffix", "pypath.share.common.sum_dicts", "pypath.share.common.swap_dict", "pypath.share.common.swap_dict_simple", "pypath.share.common.swap_suffix", "pypath.share.common.table_add_row_numbers", "pypath.share.common.table_format", "pypath.share.common.table_textwrap", "pypath.share.common.to_list", "pypath.share.common.to_set", "pypath.share.common.try_bool", "pypath.share.common.try_float", "pypath.share.common.tsv_table", "pypath.share.common.uniq_list", "pypath.share.common.uniq_list1", "pypath.share.common.uniq_list2", "pypath.share.common.uniq_ord_list", "pypath.share.common.unique_elements", "pypath.share.common.unique_foreach", "pypath.share.common.unique_list", "pypath.share.common.unique_total", "pypath.share.common.upper0", "pypath.share.common.values", "pypath.share.common.wcl", "pypath.share.common.wrap_truncate", "pypath.share.constants", "pypath.share.curl", "pypath.share.curl.Curl", "pypath.share.curl.FileOpener", "pypath.share.curl.RemoteFile", "pypath.share.curl.cache_delete_off", "pypath.share.curl.cache_delete_on", "pypath.share.curl.cache_off", "pypath.share.curl.cache_on", "pypath.share.curl.cache_print_off", "pypath.share.curl.cache_print_on", "pypath.share.curl.debug_off", "pypath.share.curl.debug_on", "pypath.share.curl.dryrun_off", "pypath.share.curl.dryrun_on", "pypath.share.curl.is_url", "pypath.share.curl.preserve_off", "pypath.share.curl.preserve_on", "pypath.share.log", "pypath.share.log.Logger", "pypath.share.log.new_logger", "pypath.share.progress", "pypath.share.progress.Progress", "pypath.share.session", "pypath.share.session.Logger", "pypath.share.session.Session", "pypath.share.session.get_log", "pypath.share.session.get_session", "pypath.share.session.new_session", "pypath.share.settings", "pypath.share.settings.Settings", "pypath.share.settings.context", "pypath.share.settings.get", "pypath.share.settings.setup", "pypath.utils", "pypath.utils.proteomicsdb", "pypath.utils.proteomicsdb.ProteomicsDB", "pypath.utils.residues", "pypath.utils.residues.ResidueMapper", "pypath.visual", "pypath.visual.drawing", "pypath.visual.drawing.InterSet", "pypath.visual.drawing.Plot", "pypath.visual.igraph_drawing", "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer", "pypath.visual.igraph_drawing.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport", "pypath.visual.igraph_drawing.DefaultVertexDrawer", "pypath.visual.igraph_drawing.TextDrawer", "pypath.visual.igraph_drawing.edge", "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer", "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer", "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer", "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer", "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer", "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer", "pypath.visual.igraph_drawing.vertex", "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer", "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer", "pypath.visual.igraph_drawing.vertex.AbstractDrawer", "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer", "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer", "Contents", "Welcome to pypath!", "The pypath book", "Reference", "Release history", "Webservice"], "terms": {"i": [0, 20, 35, 41, 44, 45, 48, 49, 50, 51, 56, 58, 67, 69, 77, 78, 79, 81, 83, 84, 86, 87, 88, 91, 97, 98, 99, 105, 106, 107, 110, 112, 128, 129, 131, 141, 147, 150, 151, 152, 156, 159, 162, 164, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 190, 197, 198, 200, 204, 214, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 234, 235], "modul": [0, 1, 4, 6, 9, 20, 25, 33, 35, 41, 44, 54, 60, 65, 69, 72, 127, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 193, 197, 198, 202, 204, 207, 211, 224, 230, 233, 234, 235], "primarili": [0, 232], "build": [0, 86, 89, 230, 231, 234], "molecular": [0, 230, 231, 232, 234], "interact": [0, 39, 230, 231, 234], "network": [0, 5, 211, 230, 231, 234], "also": [0, 7, 100, 104, 129, 187, 211, 231, 232, 235], "sever": [0, 231, 232], "submodul": [0, 25, 231, 232, 234], "access": [0, 4, 20, 45, 69, 185, 230, 231, 234], "preprocess": [0, 231], "serv": [0, 54, 193, 206, 235], "data": [0, 3, 5, 7, 15, 16, 17, 22, 44, 45, 54, 55, 58, 67, 74, 77, 78, 141, 170, 171, 174, 175, 197, 198, 204, 230, 231, 234, 235], "from": [0, 4, 11, 14, 15, 16, 20, 22, 25, 32, 39, 41, 44, 45, 54, 55, 58, 67, 77, 78, 80, 84, 85, 86, 89, 101, 103, 110, 112, 113, 114, 124, 125, 129, 143, 144, 154, 155, 157, 158, 159, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 197, 198, 204, 211, 218, 219, 220, 221, 222, 223, 228, 230, 231, 234, 235], "variou": [0, 198, 201, 217, 232], "resourc": [0, 5, 20, 39, 115, 119, 132, 135, 160, 170, 230, 231, 234, 235], "member": [0, 1, 2, 4, 6, 9, 10, 12, 19, 21, 23, 26, 27, 30, 31, 33, 34, 46, 52, 53, 60, 61, 65, 66, 68, 70, 72, 73, 76, 168, 169, 186, 189, 191, 197, 202, 203, 205, 207, 208, 211, 217, 218, 219, 220, 221, 222, 223, 224, 232], "function": [0, 3, 4, 9, 10, 12, 17, 18, 19, 21, 23, 27, 31, 61, 65, 73, 74, 76, 77, 78, 81, 87, 88, 98, 111, 127, 159, 169, 170, 186, 187, 191, 197, 204, 209, 214, 231, 232, 233, 234, 235], "class": [2, 3, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 66, 67, 70, 71, 76, 104, 138, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 197, 198, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235], "none": [3, 5, 14, 17, 20, 22, 24, 25, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 55, 57, 59, 67, 71, 75, 77, 80, 81, 99, 110, 126, 131, 141, 147, 149, 150, 151, 152, 155, 159, 167, 170, 171, 175, 176, 187, 188, 190, 192, 193, 196, 198, 199, 200, 201, 204, 209, 210, 232], "kwarg": [3, 5, 20, 47, 54, 55, 57, 58, 59, 83, 98, 104, 110, 126, 148, 149, 155, 188, 198, 199, 201, 210, 232], "sourc": [3, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 62, 63, 64, 67, 69, 71, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 206, 209, 210, 212, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 234, 235], "base": [3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 67, 71, 114, 138, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 190, 192, 193, 198, 204, 206, 209, 210, 212, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234], "object": [3, 4, 15, 17, 38, 39, 42, 47, 49, 59, 97, 98, 111, 128, 138, 152, 170, 172, 187, 190, 192, 193, 198, 204, 206, 209, 212, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233], "other": [3, 16, 35, 41, 44, 77, 80, 87, 97, 98, 100, 104, 113, 115, 119, 132, 135, 159, 160, 170, 187, 198, 204, 231, 235], "which": [3, 4, 67, 77, 78, 79, 81, 84, 91, 98, 113, 115, 119, 129, 132, 135, 159, 160, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 193, 204, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 234, 235], "carri": [3, 232], "custom": [3, 20, 35, 41, 44, 54, 188, 190, 196, 230, 231], "attribut": [3, 39, 45, 47, 48, 49, 50, 51, 55, 56, 57, 58, 81, 98, 170, 171, 198, 218, 219, 220, 221, 222, 223, 232, 235], "dedic": [3, 232], "dict": [3, 14, 15, 16, 17, 20, 22, 80, 86, 87, 88, 89, 90, 91, 94, 96, 98, 103, 104, 109, 112, 114, 115, 118, 119, 132, 135, 136, 144, 145, 146, 147, 160, 165, 198, 201, 204, 232, 234], "under": [3, 47, 232], "__init__": [3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 67, 71, 138, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 190, 192, 193, 198, 204, 206, 209, 210, 212, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232], "method": [3, 4, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 67, 71, 79, 81, 86, 115, 119, 127, 132, 135, 138, 160, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 190, 192, 193, 198, 204, 206, 209, 210, 212, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 234], "serial": 3, "gener": [3, 14, 17, 18, 54, 67, 102, 110, 155, 204, 232, 234, 235], "json": [3, 15, 16, 22, 67, 204, 232], "string": [3, 15, 16, 17, 20, 22, 80, 83, 85, 101, 102, 105, 106, 107, 110, 113, 125, 127, 128, 131, 143, 147, 154, 155, 164, 170, 187, 190, 204, 232], "full": [3, 187, 204, 221, 222, 230, 231, 234], "content": [3, 67, 110, 150, 155, 170, 198, 231, 233, 234], "without": [3, 4, 80, 84, 104, 159, 230, 235], "ani": [3, 16, 17, 20, 77, 78, 97, 100, 104, 108, 113, 115, 119, 132, 135, 139, 141, 142, 145, 156, 159, 160, 162, 214, 230, 231, 234, 235], "whitespac": 3, "line": [3, 17, 82, 218, 219, 220, 221, 222, 223, 232], "break": 3, "return": [3, 11, 17, 18, 20, 22, 25, 32, 45, 48, 49, 50, 51, 55, 56, 58, 69, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 122, 128, 129, 131, 132, 135, 136, 139, 140, 141, 142, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 160, 162, 165, 170, 171, 187, 188, 190, 193, 194, 195, 198, 200, 201, 204, 214, 218, 219, 220, 221, 222, 223, 231, 232, 235], "str": [3, 11, 14, 15, 16, 17, 20, 22, 24, 32, 35, 39, 41, 44, 45, 54, 58, 67, 74, 82, 83, 84, 98, 102, 103, 109, 113, 135, 165, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 196, 198, 200, 204], "The": [3, 11, 22, 32, 45, 58, 69, 77, 79, 82, 88, 91, 98, 103, 108, 111, 122, 124, 129, 139, 142, 145, 146, 150, 159, 165, 170, 187, 190, 198, 200, 214, 218, 219, 220, 221, 222, 223, 229, 230, 231, 234, 235], "update_attr": 3, "updat": [3, 67, 190, 198, 232, 234, 235], "store": [3, 67, 69, 188, 204, 206, 231, 232, 234], "here": [3, 22, 98, 111, 190, 204, 214, 231, 232, 235], "ident": [3, 67, 232], "kei": [3, 17, 20, 22, 48, 49, 50, 51, 67, 74, 86, 88, 89, 91, 94, 98, 103, 104, 109, 110, 112, 114, 115, 119, 132, 135, 144, 145, 146, 150, 155, 156, 160, 162, 165, 170, 198, 200, 201, 232, 235], "ar": [3, 17, 35, 41, 44, 74, 84, 86, 88, 89, 97, 98, 145, 146, 159, 170, 197, 198, 201, 204, 218, 219, 220, 221, 222, 223, 228, 230, 231, 233, 234, 235], "merg": [3, 81, 91, 109, 114, 232], "us": [3, 4, 35, 41, 44, 45, 47, 67, 74, 77, 111, 115, 119, 132, 135, 160, 170, 176, 180, 185, 187, 198, 200, 206, 211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 231, 232, 235], "share": [3, 47, 232, 234], "common": [3, 230], "combine_attr": 3, "new": [3, 13, 67, 91, 188, 195, 196, 232, 234, 235], "can": [3, 45, 98, 100, 104, 105, 106, 115, 119, 122, 129, 132, 135, 156, 160, 162, 170, 188, 198, 211, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229, 231, 232, 233, 234, 235], "provid": [3, 20, 35, 41, 44, 54, 67, 69, 110, 155, 197, 198, 201, 224, 231, 232, 234, 235], "three": [3, 214], "wai": [3, 20, 35, 41, 44, 81, 103, 198, 201, 232], "an": [3, 22, 45, 48, 49, 50, 51, 58, 79, 86, 98, 103, 106, 110, 111, 131, 150, 155, 165, 204, 211, 214, 218, 219, 220, 221, 222, 223, 230, 231, 235], "call": [3, 47, 54, 81, 88, 104, 170, 171, 231, 232], "dictionari": [3, 17, 20, 80, 81, 88, 91, 104, 109, 114, 145, 146, 156, 162, 230, 231], "keyword": [3, 79, 98, 104, 214, 232], "argument": [3, 35, 41, 44, 79, 83, 98, 104, 141, 156, 162, 198, 201, 214, 232], "work": [4, 22, 67, 81, 87, 232, 235], "might": [4, 124, 232, 235], "import": [4, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 231, 232], "main": [4, 81, 198, 209, 231, 232, 235], "df": [5, 85, 232], "entity_typ": [5, 37, 42, 232], "data_model": [5, 39, 57, 58], "interaction_typ": [5, 39, 57, 58], "only_direct": 5, "only_undirect": 5, "only_sign": 5, "only_protein": 5, "effect": [5, 232], "entiti": [5, 115, 119, 132, 135, 160, 232, 234, 235], "source_ent": 5, "target_ent": 5, "swap_undirect": 5, "true": [5, 22, 39, 62, 85, 86, 89, 97, 98, 110, 122, 126, 141, 149, 153, 170, 171, 172, 174, 176, 178, 180, 182, 185, 187, 190, 204, 232], "remove_loop": 5, "entities_or": 5, "fals": [5, 18, 22, 36, 39, 42, 55, 62, 67, 69, 86, 110, 122, 136, 141, 145, 153, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 190, 204, 232], "filter": [5, 98, 232], "frame": [5, 230, 231, 234], "includ": [6, 35, 41, 44, 91, 198, 232, 234, 235], "licens": [6, 7, 230, 234], "collect": [6, 22, 232, 235], "web": [6, 22, 45, 231, 232, 234], "page": [6, 11, 22, 67, 231, 232, 233, 235], "compon": [6, 232, 235], "biomart": [6, 232], "goos": 6, "queri": [6, 22, 45, 204, 230, 234], "templat": [6, 232], "configur": [6, 232], "file": [6, 11, 15, 16, 17, 18, 20, 32, 67, 74, 110, 155, 159, 170, 171, 173, 174, 187, 188, 197, 198, 204, 230, 231, 234], "print": [7, 8, 82, 175, 176, 177, 178, 179, 180, 187, 232], "about": [7, 8, 22, 177, 178, 190, 204, 230, 231, 235], "copyright": 7, "databas": [7, 62, 63, 170, 230, 234, 235], "point": [7, 67, 105, 129, 231, 232], "further": [7, 20, 204, 206, 230, 232, 235], "inform": [7, 8, 67, 179, 180, 190, 230, 235], "loglevel": [8, 187], "9": [8, 230, 231, 232], "basic": [8, 230], "current": [8, 22, 48, 49, 50, 51, 64, 187, 190, 198, 200, 211, 231, 232, 235], "session": [8, 67, 230, 231], "supp_url": 11, "article_url": 11, "download": [11, 22, 32, 44, 54, 170, 174, 175, 181, 182, 204, 206, 230, 231, 234], "supplementari": [11, 32], "materi": [11, 32], "journal": [11, 32, 204], "webpag": [11, 32, 204, 232, 235], "arg": [11, 15, 20, 22, 32, 58, 74, 83, 98, 103, 111, 122, 144, 145, 165, 198, 200, 201], "url": [11, 22, 24, 32, 47, 170, 183, 232, 235], "articl": [11, 232], "path": [11, 20, 32, 67, 74, 75, 91, 110, 155, 187, 188, 231, 232], "csv": [13, 18, 232], "old": [13, 67, 190, 231, 232], "field": [14, 15, 17, 20, 22, 28, 29, 56, 58, 98, 103, 165, 170, 232, 235], "option": [14, 20, 22, 24, 81, 102, 104, 109, 122, 129, 159, 198, 201, 204, 232, 235], "union": [14, 15, 16, 22, 24, 77, 78, 79, 81, 94, 96], "list": [14, 15, 16, 17, 18, 22, 24, 44, 45, 77, 78, 81, 84, 91, 97, 98, 100, 103, 104, 110, 124, 129, 145, 150, 151, 152, 155, 156, 159, 162, 165, 170, 204, 231, 232, 234, 235], "tupl": [14, 20, 22, 56, 86, 89, 91, 97, 98, 103, 129, 165, 170, 187, 204, 214, 218, 219, 220, 221, 222, 223, 226, 229, 232], "callabl": [14, 22, 54, 98, 111], "glom": [14, 15, 22], "spec": [14, 15, 22], "protect": 14, "each": [14, 17, 87, 94, 98, 145, 159, 198, 204, 231, 232, 234, 235], "coalesc": 14, "io": [15, 16, 22], "extract": [15, 22, 103, 125, 143, 170, 171, 204, 232], "arbitrari": [15, 79, 232, 235], "depth": [15, 86, 89], "like": [15, 17, 45, 231, 232], "specif": [15, 22, 187, 231, 232, 235], "read": [16, 17, 18, 22, 67, 171, 174, 181, 182, 204, 230, 231, 234], "pass": [16, 45, 83, 98, 111, 196, 204, 232], "through": [16, 231, 232], "valu": [16, 17, 20, 45, 48, 49, 50, 51, 56, 58, 80, 81, 86, 87, 88, 91, 94, 96, 98, 99, 103, 109, 111, 113, 114, 122, 123, 131, 145, 146, 153, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 190, 198, 200, 201, 204, 219, 221, 222, 232, 235], "col": [17, 209, 232], "fileobject": 17, "sep": [17, 125, 128, 143, 147, 172], "t": [17, 91, 119, 122, 160, 172, 173, 176, 177, 188, 231, 232, 233, 235], "sep2": 17, "rem": 17, "hdr": 17, "encod": [17, 83, 113, 170, 171, 232, 235], "ascii": [17, 113], "tabl": [17, 35, 41, 44, 45, 110, 150, 155, 230, 231, 233, 234], "open": [17, 170, 171, 187, 204, 231, 232], "stringio": 17, "buffer": 17, "column": [17, 110, 150, 155, 231, 232, 235], "identifi": [17, 159, 193, 230, 231], "result": [17, 22, 113, 114, 174, 180, 181, 182, 185, 204, 232], "number": [17, 22, 45, 56, 58, 79, 81, 87, 105, 115, 118, 119, 144, 187, 190, 206, 231, 232, 235], "separ": [17, 37, 39, 42, 58, 125, 128, 143, 155, 232, 234], "subfield": 17, "prefix": [17, 128, 190, 232], "e": [17, 25, 82, 84, 86, 98, 100, 104, 105, 106, 204, 214, 224, 226, 229, 231, 232, 234, 235], "g": [17, 25, 82, 84, 98, 104, 159, 231, 232, 234, 235], "2": [17, 56, 58, 77, 78, 79, 81, 86, 88, 89, 100, 145, 156, 159, 162, 204, 214, 226, 229, 230], "3": [17, 58, 78, 88, 98, 145, 209, 230, 231, 232], "int": [17, 22, 24, 45, 86, 89, 102, 103, 106, 165, 187, 188, 190, 196, 204], "header": [17, 37, 39, 42, 170, 172, 232], "If": [17, 20, 45, 77, 79, 81, 86, 89, 97, 110, 114, 122, 145, 151, 152, 155, 156, 159, 162, 198, 200, 204, 231, 232, 235], "assum": [17, 20, 84, 146], "remov": [17, 67, 80, 84, 104, 128, 159, 206, 232, 234], "For": [17, 45, 47, 74, 87, 90, 94, 96, 115, 118, 119, 132, 135, 136, 144, 160, 204, 231, 232, 235], "element": [17, 77, 78, 79, 84, 86, 88, 91, 97, 98, 99, 100, 103, 104, 115, 118, 119, 131, 132, 135, 136, 145, 151, 152, 156, 159, 160, 162, 232], "replac": [17, 170, 232], "xls_file": 18, "sheet": [18, 24], "0": [18, 37, 39, 42, 56, 58, 77, 78, 86, 89, 100, 129, 156, 159, 162, 187, 188, 190, 193, 196, 204, 210, 230, 231, 232], "use_openpyxl": 18, "m": [18, 187, 232], "excel": [18, 232], "xl": 18, "convert": [18, 77, 78, 97, 101, 105, 106, 108, 113, 139, 142, 152, 153, 154, 187, 204, 206, 211, 231, 232], "one": [18, 20, 22, 35, 41, 44, 45, 77, 81, 86, 97, 98, 145, 195, 196, 198, 204, 214, 221, 222, 231, 235], "from_fil": 20, "requir": [20, 79, 231, 232], "restrict": [20, 232], "two": [20, 83, 88, 108, 129, 139, 142, 214, 218, 219, 220, 221, 222, 223, 231, 232], "user": [20, 172, 197, 204, 231, 232], "name": [20, 22, 25, 35, 39, 41, 42, 44, 47, 54, 55, 56, 57, 58, 59, 62, 74, 98, 103, 147, 159, 165, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 190, 192, 196, 198, 200, 201, 210, 230, 233, 235], "password": [20, 204], "onli": [20, 22, 35, 41, 44, 69, 77, 81, 88, 98, 125, 143, 145, 170, 171, 179, 184, 187, 204, 230, 231, 234, 235], "more": [20, 22, 81, 98, 204, 218, 219, 220, 221, 222, 223, 231, 232, 234, 235], "apart": [20, 231, 232], "first": [20, 44, 56, 58, 69, 82, 86, 88, 91, 98, 125, 131, 159, 164, 204, 231, 232, 234], "rest": [20, 22, 232, 235], "ignor": [20, 58, 165], "_credenti": 20, "exist": [20, 74, 75, 91, 103, 114, 170, 171, 175, 187, 196, 232], "set": [20, 35, 39, 41, 44, 45, 48, 49, 50, 51, 54, 55, 78, 79, 81, 87, 88, 91, 94, 96, 97, 98, 104, 108, 111, 115, 118, 119, 132, 135, 136, 139, 142, 145, 152, 160, 165, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 190, 232, 234, 235], "its": [20, 25, 74, 75, 131, 156, 159, 162, 177, 178, 226, 228, 229, 232, 234], "locat": [20, 231, 232, 234, 235], "": [20, 45, 58, 77, 78, 87, 96, 115, 118, 119, 131, 132, 135, 136, 139, 160, 180, 187, 231, 232, 234], "default": [20, 67, 69, 81, 99, 102, 104, 109, 129, 131, 147, 159, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 198, 200, 204, 214, 218, 219, 220, 221, 222, 223, 224, 229, 231, 232, 235], "secret": [20, 170, 232, 235], "directori": [20, 75, 187, 198, 231, 232, 234], "pair": [20, 109, 129, 170, 198, 232, 235], "unchang": [20, 83, 86, 89, 153, 154], "thi": [20, 25, 35, 39, 41, 44, 48, 49, 50, 51, 55, 77, 78, 81, 86, 87, 89, 115, 119, 132, 135, 160, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 193, 197, 198, 200, 204, 206, 209, 211, 214, 218, 219, 220, 221, 222, 223, 224, 231, 232, 234, 235], "explicit": 20, "A": [20, 22, 58, 74, 83, 86, 89, 111, 147, 187, 196, 198, 201, 204, 232, 234, 235], "rais": [20, 56, 58, 146], "runtimeerror": 20, "avail": [20, 45, 81, 187, 198, 204, 231, 232, 235], "q": 22, "pagin": [22, 232], "bool": [22, 44, 45, 67, 86, 89, 98, 111, 122, 141, 145, 204], "page_length": 22, "500": [22, 232], "size_param": 22, "size": [22, 124, 171, 204, 210, 232], "page_param": 22, "offset": [22, 187, 232], "by_pag": 22, "page_field": 22, "total_field": 22, "totalpag": 22, "record_nam": 22, "servic": [22, 45, 231, 232, 234], "paramet": [22, 35, 39, 41, 44, 45, 67, 77, 78, 80, 81, 82, 84, 86, 88, 89, 91, 100, 102, 104, 108, 109, 113, 114, 129, 135, 139, 140, 141, 142, 146, 156, 159, 162, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 190, 196, 198, 200, 201, 204, 214, 230, 231, 232], "append": [22, 77, 78], "retriev": [22, 25, 45, 112, 198, 204, 232], "all": [22, 79, 80, 98, 115, 118, 119, 132, 135, 136, 144, 145, 160, 165, 170, 182, 187, 193, 204, 218, 228, 231, 234, 235], "until": [22, 86, 232, 233], "end": [22, 89, 232], "record": [22, 235], "per": [22, 82, 204], "request": [22, 170, 171, 200, 232, 235], "item": [22, 74, 98, 145, 190, 232], "contain": [22, 58, 77, 78, 91, 97, 104, 128, 129, 164, 187, 204, 211, 218, 219, 220, 221, 222, 223, 231, 232, 235], "total": [22, 90, 190, 221, 222], "detail": [22, 98, 231, 232], "http": [22, 124, 157, 158, 170, 204, 211, 231, 235], "readthedoc": 22, "en": 22, "latest": [22, 232], "tutori": [22, 231, 232], "html": [22, 204, 232, 235], "init_url": [24, 170], "module_nam": 25, "method_nam": 25, "uniprot": [25, 39, 42, 44, 45, 55, 206, 230, 231, 234, 235], "all_uniprot": [25, 232], "id_type_a": [35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 232], "id_type_b": [35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 232], "ncbi_tax_id": [35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 54, 232, 235], "9606": [35, 36, 39, 44, 45, 54, 232], "mappinginput": [35, 36, 37, 40, 41, 43, 44, 45], "microarrai": [35, 232], "probe": [35, 232], "map": [35, 41, 44, 45, 147, 206, 218, 219, 220, 221, 222, 223, 226, 228, 229, 231, 232, 234], "id": [35, 41, 44, 45, 230, 235], "type": [35, 41, 44, 45, 77, 78, 97, 108, 113, 139, 141, 142, 145, 156, 159, 162, 170, 171, 188, 230, 231, 232], "pro_id_type_a": [35, 41], "symbol": [35, 41, 44, 231, 232, 235], "pro": [35, 41], "label": [35, 41, 45, 48, 49, 50, 51, 58, 74, 187, 193, 196, 214, 218, 219, 220, 221, 222, 223, 232], "These": [35, 41, 44, 45, 74, 232, 235], "automat": [35, 41, 44, 231, 232, 234], "give": [35, 41, 44, 190, 204, 232], "overrid": [35, 41, 44, 45, 198, 200], "pro_id_type_b": [35, 41], "same": [35, 39, 41, 44, 55, 79, 232], "abov": [35, 41, 44, 188, 231, 232, 235], "just": [35, 41, 44, 230], "transcript": [36, 231, 235], "biomart_id_type_a": 36, "biomart_id_type_b": 36, "input_": 37, "col_a": 37, "col_b": 37, "protein": [37, 39, 41, 42, 204, 230, 231, 234, 235], "type_": 38, "resource_id_type_a": [38, 232], "resource_id_type_b": [38, 232], "unknown": [39, 42, 232], "id_col_a": [39, 232], "id_col_b": [39, 232], "1": [39, 41, 43, 56, 58, 77, 78, 79, 86, 88, 89, 91, 100, 145, 156, 159, 162, 190, 204, 210, 230, 232, 235], "entity_type_a": 39, "entity_type_b": 39, "is_direct": [39, 232], "sign": 39, "input": [39, 42, 45, 54, 78, 153, 154, 230, 231, 234], "refer": [39, 184, 185, 187, 230, 231, 235], "extra_edge_attr": 39, "extra_node_attrs_a": 39, "extra_node_attrs_b": 39, "taxon_a": 39, "taxon_b": 39, "post_transl": [39, 232], "positive_filt": 39, "negative_filt": 39, "mark_sourc": 39, "mark_target": 39, "input_arg": [39, 54], "curl_arg": 39, "must_have_refer": 39, "huge": [39, 204, 232, 233], "unique_field": 39, "expand_complex": 39, "allow_loop": 39, "only_default_organ": 39, "creat": [39, 90, 91, 151, 152, 187, 190, 193, 195, 196], "boolean": [39, 232], "vertex": [39, 214, 218, 219, 220, 221, 222, 223, 232], "direct": [39, 81, 218, 219, 220, 221, 222, 223], "particular": [39, 47, 115, 119, 132, 135, 160, 232], "target": [39, 218, 219, 220, 221, 222, 223, 232, 234, 235], "vertic": [39, 214, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 232], "fname": [40, 187, 232], "ontologi": [41, 230, 231, 234], "consortium": [41, 232], "id_col": 42, "id_typ": [42, 45, 232], "extra_attr": [42, 55], "uniprot_id_type_a": 44, "uniprot_id_type_b": 44, "swissprot": [44, 45, 231, 232], "upload": 44, "webservic": [44, 230], "ye": 45, "defin": [45, 98, 111, 198, 218, 219, 220, 221, 222, 223, 226, 228, 229, 230, 231, 235], "convers": [45, 230, 234], "you": [45, 170, 171, 174, 180, 185, 204, 214, 230, 233, 235], "would": [45, 232, 233], "translat": [45, 230, 234, 235], "target_id_typ": [45, 232], "tax": 45, "ncbi": [45, 230, 231, 235], "taxonomi": [45, 230, 231], "organ": [45, 55, 230, 231, 234, 235], "interest": [45, 231, 232, 233], "look": [45, 54, 91, 204], "trembl": [45, 231, 232], "directli": [45, 58, 211, 230, 231, 235], "review": [45, 232], "To": [45, 204, 232, 235], "fetch": [45, 211, 232], "togeth": [45, 232], "get": [45, 170, 198, 204, 230, 232, 235], "programmat": [45, 232], "interfac": [45, 231, 232], "org": [45, 204, 211, 232, 235], "batch": 45, "have": [45, 86, 145, 174, 180, 185, 204, 231, 232, 234, 235], "slightli": 45, "differ": [45, 77, 78, 231, 232, 234, 235], "api": [45, 204, 231, 234, 235], "capabl": [45, 77, 78], "some": [45, 180, 185, 204, 231, 232, 235], "obtain": 45, "former": [45, 232, 234], "latter": [45, 111, 232], "static": [45, 193], "resource_id_typ": 45, "built": [45, 67, 81, 127, 230, 231], "known": [45, 232, 235], "full_nam": [47, 232], "purpos": [47, 232], "attrib": 47, "enabl": [47, 204], "check": [47, 48, 49, 50, 51, 98, 107, 141, 231, 232, 235], "accord": [47, 91, 129, 159, 187, 204, 214, 232], "exampl": [47, 77, 78, 84, 88, 91, 100, 141, 145, 156, 159, 162, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 230, 231, 232], "academ": [47, 232], "redistribut": [47, 232, 234], "compat": [47, 234], "alik": 47, "level": [48, 49, 50, 51, 82, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 196, 198, 206, 231, 232, 235], "licensefeatur": [48, 50, 51], "classmethod": [48, 49, 50, 51, 170, 187], "check_level": [48, 49, 50, 51], "valid": [48, 49, 50, 51, 200], "int_to_level": [48, 49, 50, 51], "correspond": [48, 49, 50, 51, 198, 201, 206, 232], "nearest": [48, 49, 50, 51], "integ": [48, 49, 50, 51, 106, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232], "ordin": [48, 49, 50, 51], "scale": [48, 49, 50, 51, 226, 228, 229, 232], "level_to_int": [48, 49, 50, 51], "to_int": [48, 49, 50, 51], "featur": [48, 49, 50, 51, 230, 232], "input_method": [54, 55, 232], "dump": [54, 74, 232], "data_attr_nam": 54, "logger": [54, 67, 71, 171, 188, 193, 194, 196, 210], "process": [54, 74, 156, 162, 170, 204, 231, 234], "load_data": 54, "load": [54, 74, 230, 231, 234], "_process_method": 54, "set_method": 54, "up": [54, 86, 89, 91, 200, 206, 232], "necessari": [54, 231, 232], "evidence_typ": [55, 57, 59], "via": [55, 56, 57, 58], "id_type_enzym": [55, 232], "id_type_substr": 55, "organisms_support": 55, "resource_attr": 55, "resourceattribut": [55, 57], "get_via": 55, "copi": [55, 80, 84, 91, 104, 159, 231, 232], "origin": [55, 77, 78, 87, 128, 145, 146, 198, 230, 231, 234], "mean": [55, 74, 204, 232], "come": [55, 231, 232, 235], "data_typ": [56, 58, 59], "count": [56, 58, 90, 115, 118, 119, 136], "occurr": [56, 58], "alia": [56, 58, 213, 215, 216], "index": [56, 58, 98, 103, 108, 139, 142, 165, 232], "start": [56, 58, 86, 204, 231, 232, 234], "stop": [56, 58, 173, 177, 232], "9223372036854775807": [56, 58], "valueerror": [56, 58], "present": [56, 58, 79, 187, 231, 232], "ppi": [57, 231, 232], "networkresourcekeybas": 58, "properti": [58, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232], "secondari": [58, 231, 232], "primari": [58, 231, 232], "underscor": 58, "last": [58, 91, 124, 143, 232], "where": [58, 114, 170, 218, 219, 220, 221, 222, 223, 232, 235], "came": 58, "4": [58, 77, 78, 209, 214, 226, 229, 230, 232, 235], "top": [62, 232], "brows": [64, 187, 230], "logfil": [64, 187, 232], "resource_info_path": 67, "home": [67, 232], "runner": 67, "use_package_path": 67, "aim": [67, 231, 232], "central": [67, 232], "part": [67, 125, 143, 197, 232, 234, 235], "commun": [67, 230, 231, 234], "14": [67, 230, 232], "01": [67, 187, 232], "2020": 67, "initi": [67, 190, 232, 234], "step": [67, 182, 190, 232], "develop": [67, 231], "info": [67, 85, 230, 235], "server": [67, 231, 232, 234, 235], "02": [67, 232], "enzym": [67, 230, 231, 234], "substrat": [67, 230, 231, 234], "definit": [67, 230, 231, 234], "inherit": [67, 232], "forc": [67, 190, 232], "remove_old": 67, "nonetyp": [67, 198], "By": [67, 179, 184, 204, 232, 235], "py": [67, 232], "attr": [67, 81], "again": [67, 174, 218, 219, 220, 221, 222, 223, 231, 232], "even": [67, 145, 175, 232, 234, 235], "ha": [67, 129, 170, 204, 231, 232, 234, 235], "been": [67, 174, 231, 232, 234, 235], "alreadi": [67, 164, 195, 196, 232], "befor": [67, 190, 232], "potenti": [67, 232], "overwrit": [67, 146], "reload": [69, 232], "control": [69, 214, 232, 234], "instanti": [69, 232], "onc": [69, 170, 204, 231, 232], "attempt": [69, 81, 153, 206, 231, 232], "instanc": [69, 159, 185, 188, 190, 194, 214, 231, 232, 235], "demand": [69, 232], "license_dir": 71, "It": [74, 84, 170, 171, 197, 198, 211, 231, 232, 235], "doe": [74, 77, 103, 135, 156, 162, 174, 179, 184, 187, 231, 232], "actual": [74, 214, 232, 233], "typic": [74, 231, 232], "quicker": 74, "next": [74, 232], "cachedir": 75, "ensur": [75, 164, 231, 232], "lst": [77, 84, 100, 124, 232], "toadd": [77, 78], "add": [77, 78, 187, 231, 232, 234, 235], "sinc": [77, 232], "handl": [77, 78, 170, 231, 232], "similarli": [77, 232], "ad": [77, 78, 86, 98, 232], "ommit": 77, "uniqu": [77, 81, 88, 118, 119, 135, 136, 145, 146, 156, 159, 160, 162, 165, 232, 235], "necessarili": 77, "preserv": [77, 156, 157, 158, 159, 162, 184, 185, 232], "order": [77, 156, 157, 158, 159, 162, 164, 232, 235], "sequenc": [77, 156, 159, 162, 230], "note": [77, 88, 156, 162, 232, 235], "make": [77, 151, 152, 178, 184, 185, 232, 235], "uniq_list": [77, 162], "ab": 77, "cd": 77, "ef": 77, "st": 78, "5": [78, 102, 159, 193, 209, 230, 231, 232], "n": [79, 232], "similar": [79, 97, 139, 231, 232, 235], "intersect": [79, 209], "oper": [79, 118, 135, 136, 232], "least": [79, 232], "instead": [79, 174, 198, 200, 232, 233, 235], "them": [79, 81, 97, 98, 145, 204, 231, 232, 235], "equival": [79, 187, 232], "accept": [79, 83, 98, 214, 226, 229, 232, 235], "non": [79, 232], "dct": [80, 86, 89, 93, 94, 112], "clean": [80, 206, 232], "cast": [80, 98, 122], "entri": [80, 84, 159, 232], "format": [80, 82, 187, 190, 211, 234, 235], "num_method": 81, "max": 81, "combin": [81, 231, 232, 235], "multipl": [81, 198, 231, 232, 235], "find": [81, 132, 135, 160, 204, 231, 232], "out": [81, 110, 151, 152, 155, 204, 231, 232], "best": 81, "concaten": [81, 86], "greater": 81, "given": [81, 88, 91, 104, 113, 129, 139, 159, 204, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232], "merge_dict": 81, "special": [81, 232, 234], "than": [81, 124, 231, 232, 235], "recurs": [81, 87, 88, 114], "numer": [81, 232], "messag": [82, 174, 177, 178, 187, 188, 230, 235], "termin": [82, 190, 232], "standard": [82, 232], "output": [82, 232], "80": [82, 232], "charact": [82, 170, 193, 232], "plu": [82, 104], "indent": 82, "byte": [83, 170, 204], "otherwis": [83, 86, 89, 98, 101, 110, 111, 112, 128, 146, 151, 152, 154, 155, 232], "either": [83, 118, 135, 136, 170, 187, 204, 232, 235], "error": [83, 146, 231, 235], "empti": [84, 99, 131, 141, 151, 152, 231, 232], "elemenst": 84, "iter": [84, 98, 99, 100, 103, 108, 131, 139, 142, 145, 156, 159, 162, 165, 190, 232], "whose": [84, 88], "length": [84, 87, 102, 124, 193, 232], "wa": [84, 231, 232], "zero": [84, 221, 222], "b": [84, 88, 91, 100, 108, 139, 140, 142, 145, 147, 156, 159, 162, 187, 232], "c": [84, 88, 100, 140, 145, 159, 187, 218, 219, 220, 221, 222, 223, 232], "deep": [85, 232], "memori": [85, 206, 231, 232, 234], "usag": 85, "panda": [85, 204, 230, 231, 234, 235], "datafram": [85, 230, 231], "modifi": [85, 177], "front": [86, 89, 187], "expand_tuple_kei": 86, "collaps": 86, "so": [86, 89, 173, 179, 181, 184, 231, 232], "outermost": 86, "go": [86, 180, 231, 232, 234], "toward": [86, 232], "innermost": 86, "allow": [86, 232], "ones": [86, 206, 232], "inner": [86, 91, 94], "outer": [86, 94], "dict_of_set": [87, 92, 96], "__len__": 87, "d1": [88, 95, 109, 114, 232], "d2": [88, 95, 109, 114], "compar": 88, "case": [88, 111, 171, 196, 204, 231, 232, 235], "comparison": 88, "perform": [88, 170, 181, 182, 232], "see": [88, 98, 145, 159, 180, 187, 211, 214, 226, 228, 229, 231, 232, 235], "below": [88, 98, 145, 159, 187, 231, 232], "second": [88, 98, 187, 232], "when": [88, 187, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229, 231, 232], "expand": 89, "chop": 89, "dict_of_count": 90, "percentag": 90, "d": [91, 100, 145, 146, 159, 187, 232], "subdict": 91, "those": [91, 98, 232], "do": [91, 179, 182, 184, 230, 235], "yet": [91, 232, 235], "leaf": 91, "simpl": [91, 98, 111, 231, 232, 235], "heurist": 91, "Or": [91, 108, 113, 129, 139, 142, 159, 232, 235], "being": [91, 226, 228, 229], "doesn": [91, 231, 232], "subsequ": [91, 231, 232], "specifi": [91, 102, 104, 129, 219, 226, 228, 229], "equal": [97, 98], "between": [97, 108, 139, 142, 214, 219, 221, 222, 231, 232, 234, 235], "both": [97, 114, 170, 231, 232, 235], "thei": [97, 98, 231, 232, 234], "obj": [98, 103, 107, 111, 130, 165], "and_or": 98, "AND": [98, 204, 232, 235], "condit": [98, 111, 232], "whether": [98, 122, 232], "should": [98, 145, 198, 218, 219, 220, 221, 222, 223, 231, 232, 235], "met": 98, "select": [98, 171, 230, 235], "OR": [98, 232], "yield": [98, 124, 232], "meet": 98, "eq": [98, 111], "altern": [98, 198, 201, 231, 232, 235], "negat": 98, "foobar": 98, "keep": [98, 159, 204, 231, 232], "coerc": 100, "singl": [100, 151, 152, 230], "lsit": 100, "flatten": 100, "Its": [100, 226, 228, 229, 232], "abc": 100, "def": [100, 159, 232], "f": [100, 159, 166], "num": [101, 105, 106, 154], "float": [101, 105, 108, 129, 139, 140, 142, 154], "repres": [101, 105, 106, 110, 154, 155, 232], "numpi": 101, "nan": [101, 232], "random": [102, 193, 232], "alphanumer": [102, 193], "uniform": 103, "pypath_no_valu": 103, "loc_dict": 104, "local": [104, 187, 231, 232, 234, 235], "variabl": [104, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232], "self": [104, 141, 204, 232], "scope": [104, 232, 235], "tell": [105, 106, 232, 235], "comput": [108, 113, 139, 142, 232], "jaccard": 108, "_from": 109, "join": 109, "tbl": [110, 126, 148, 149, 150, 155], "colformat": 110, "maxlen": [110, 126, 149, 150, 155, 167], "lineno": [110, 126, 149], "doc_templ": 110, "booktab": 110, "latex_compil": 110, "latex_execut": 110, "xelatex": 110, "latex_engin": 110, "ordereddict": [110, 150, 155, 232], "titl": [110, 150, 155], "latex": 110, "tabular": [110, 232, 235], "write": [110, 155, 187, 204, 230, 231], "compil": [110, 232, 233], "document": [110, 187, 231, 232, 233], "test": [111, 170, 234], "against": [111, 232, 235], "In": [111, 170, 196, 204, 231, 232], "outcom": 111, "itself": [112, 184, 185, 232], "sum": [113, 144], "hash": [113, 232], "must": [113, 214, 232, 235], "follow": [113, 124, 170, 231, 232], "by_group": [115, 116, 117, 118, 119, 120, 121, 132, 133, 134, 135, 136, 137, 160, 161, 163], "group": [115, 119, 132, 135, 160, 204, 210, 231, 232, 234], "belong": [115, 119, 132, 135, 160, 194, 232], "occur": [115, 119, 132, 135, 160], "among": [115, 119, 132, 135, 160, 232, 235], "thing": [115, 119, 132, 135, 160], "across": [115, 118, 119, 132, 135, 136, 160, 232], "op": [118, 135, 136, 137, 231, 232], "depend": [118, 135, 136, 232, 234], "don": [119, 160, 231, 232, 233, 235], "neg": [122, 232], "anyth": [122, 141, 173, 176, 214, 226, 229, 232], "won": [122, 173, 176, 177, 188, 232], "10": [124, 204, 210, 230, 232, 235], "section": [124, 204, 232], "shorter": 124, "stackoverflow": [124, 170], "com": [124, 157, 158, 170, 204, 231, 232], "3744502": 124, "854988": [124, 170], "split": [125, 143, 159, 234], "take": [125, 143, 156, 162, 204, 214, 231, 232], "width": [126, 149, 150, 167, 209], "tablefmt": [126, 149], "fancy_grid": [126, 149], "wrap": [126, 149, 150, 187], "pattern": [127, 232], "search": [127, 204], "miss": [127, 232], "conveni": [127, 232], "re": 127, "angl": 129, "center": 129, "respect": [129, 232], "around": [129, 170, 190, 230, 231], "degre": 129, "dimension": 129, "space": [129, 232], "counter": 129, "clockwis": 129, "coordin": [129, 226, 228, 229, 232], "determin": [129, 159], "rel": 129, "assign": [132, 135, 160, 232, 235], "simpson": 139, "explanatori": 141, "anyht": 141, "123": [141, 232], "hello": 141, "world": 141, "sorensen": 142, "dice": 142, "coeffici": 142, "force_set": 145, "swap": [145, 146, 147], "interchang": [145, 146], "hashabl": 146, "duplic": 146, "_": [147, 170], "suffix": 147, "chang": [147, 164, 173, 176, 190, 231, 232], "truncat": [150, 231, 232], "text": [150, 167, 187, 232], "cell": [150, 232, 235], "var": [151, 152], "sure": [151, 152], "val": 153, "upon": [153, 174, 232], "failur": [153, 230], "tab": 155, "tsv": 155, "seq": [156, 157, 158, 159, 162, 232], "reduc": [156, 159, 162], "aba": [156, 162], "Not": [157, 158, 204, 232], "www": [157, 158, 204, 211, 232], "peterb": [157, 158], "plog": [157, 158], "uniqifi": [157, 158], "benchmark": [157, 158], "idfun": 159, "repeat": [159, 232], "kept": [159, 232], "behavior": 159, "x": [159, 218, 219, 220, 221, 222, 223, 226, 228, 229], "abracadabra": 159, "r": [159, 170, 171, 231, 232, 235], "els": 159, "32": [159, 230, 232], "42": [159, 232], "15": [159, 232], "12": [159, 187, 230, 232], "extens": [159, 204], "png": [159, 232], "txt": 159, "pdf": [159, 209, 210], "letter": [164, 232], "uppercas": 164, "except": [164, 235], "word": 164, "avoid": [164, 179, 184, 218, 219, 220, 221, 222, 223, 231, 232], "mirna": [164, 231, 234, 235], "possibl": [165, 204, 230, 232], "unhash": 165, "silent": [170, 204], "post": 170, "req_head": [170, 232], "cach": [170, 173, 174, 175, 176, 177, 178, 181, 182, 206, 230, 231], "debug": [170, 179, 180, 185], "outf": [170, 209], "compr": [170, 171], "files_need": [170, 171], "connect_timeout": 170, "timeout": 170, "ignore_content_length": 170, "init_fun": 170, "get_jsessionid": 170, "init_use_cach": 170, "larg": [170, 171, 204, 231, 232, 234, 235], "default_mod": [170, 171], "override_post": 170, "init_head": 170, "return_head": 170, "compress": [170, 171], "binary_data": 170, "write_cach": 170, "force_quot": 170, "sftp_user": 170, "sftp_passwd": 170, "sftp_passwd_fil": 170, "sftp_port": 170, "22": [170, 172, 232, 235], "sftp_host": 170, "sftp_ask": 170, "setup": [170, 182, 198, 232], "retri": 170, "cache_dir": 170, "bypass_url_encod": 170, "empty_attempt_again": 170, "keep_fail": 170, "alpn": 170, "slow": [170, 232], "http2": 170, "fileopen": 170, "wrapper": [170, 190, 200, 204, 232], "pycurl": [170, 232], "vast": [170, 232], "amount": [170, 232], "addit": [170, 232, 235], "ftp": [170, 232], "cooki": 170, "param": [170, 198, 200, 204, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229], "multipart": 170, "form": 170, "quot": 170, "redirect": 170, "pointer": [170, 171], "archiv": [170, 171], "gzip": [170, 171], "tar": [170, 171], "gz": [170, 171], "zip": [170, 171], "abl": [170, 231, 232], "show": [170, 232, 235], "progress": 170, "statu": [170, 190, 232], "indic": [170, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232], "consol": [170, 174, 187, 230], "close": [170, 187, 204, 232], "construct_binary_data": 170, "binari": 170, "construct": [170, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229], "is_quot": 170, "question": [170, 231], "1637762": 170, "php": [170, 232], "open_tgz": [170, 171], "replace_forbidden": 170, "repl": 170, "forbidden": 170, "certain": [170, 171, 198, 204, 230], "system": [170, 231, 232], "slash": 170, "unix": 170, "while": [170, 190, 231, 232], "mani": [170, 231, 232, 234, 235], "window": 170, "environ": [170, 232], "set_binary_data": 170, "transmit": 170, "attach": [170, 218, 219, 220, 221, 222, 223], "filenam": [170, 172, 210, 232], "url_fix": 170, "charset": 170, "utf": [170, 171], "8": [170, 171, 230, 231, 232], "121017": 170, "file_param": 171, "_open": 171, "set_fileobj": 171, "bz2": 171, "need": [171, 204, 230, 232, 235], "multifil": 171, "examin": 171, "host": [172, 232, 234], "passwd": 172, "port": 172, "rownam": 172, "_global_context_off": [173, 175, 177, 179, 181, 184], "context": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 198, 214, 218, 219, 220, 221, 222, 223, 226, 229, 232], "handler": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185], "delet": [173, 174, 196, 231, 232, 234], "behaviour": [173, 176, 177, 181, 232], "behind": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232], "scene": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232], "cachedel": [173, 174], "data_format": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232, 234], "pa": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232], "load_resourc": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232], "signor": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 232, 235], "pathwai": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 231, 232, 235], "_global_context_on": [174, 176, 178, 180, 182, 185], "Then": [174, 232], "noth": 174, "dryrun": [174, 181, 182], "turn": [174, 175, 176], "let": [174, 232], "know": [174, 232], "off": [175, 190], "cache_on": 175, "As": [176, 177, 232, 235], "most": [176, 231, 232], "probabl": [176, 232], "verbos": [177, 178, 187, 188, 196, 232, 234], "cacheprint": [177, 178], "restor": [179, 181, 184, 198], "cache_debug_off": 179, "issu": [180, 185, 231], "want": [180, 185, 230, 231, 235], "what": [180, 232, 235], "cache_debug_on": 180, "appli": 181, "cache_dryrun_off": 181, "cache_dryrun_on": 182, "lastcurl": [184, 185, 232], "cache_preserve_off": 184, "cache_preserve_on": 185, "console_level": [187, 232], "logdir": [187, 188], "max_width": 187, "200": 187, "written": [187, 188, 204, 232], "drop": [187, 232], "close_logfil": 187, "msg": [187, 190, 232], "flush": 187, "get_logdir": 187, "dirnam": 187, "label_messag": 187, "decid": [187, 232], "open_logfil": 187, "strftime": 187, "time": [187, 231, 232], "librari": [187, 232], "manual": [187, 232], "code": [187, 226, 228, 229, 232, 234], "localtim": 187, "commonli": 187, "y": [187, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232], "year": 187, "centuri": 187, "decim": 187, "month": 187, "dai": [187, 204, 232], "31": [187, 230, 232], "h": [187, 232], "hour": [187, 232], "24": [187, 209, 232], "clock": 187, "00": [187, 232], "23": [187, 232], "minut": [187, 231, 232], "59": [187, 232], "61": [187, 232], "z": 187, "zone": 187, "utc": 187, "abbrevi": 187, "weekdai": 187, "appropri": [187, 231, 232], "date": [187, 232], "represent": [187, 232], "p": [187, 232], "am": 187, "pm": 187, "mai": [187, 232], "your": [187, 204, 232, 235], "platform": [187, 231], "timestamp": 187, "timestamp_messag": 187, "directoti": 188, "lowest": 188, "interv": 190, "percent": 190, "done": 190, "init": 190, "unit": 190, "had": 190, "my": [190, 231], "progressbar": 190, "now": [190, 204, 232], "great": [190, 232], "tqdm": 190, "implement": [190, 204, 214, 218, 219, 220, 221, 222, 223, 224, 228, 229, 234, 235], "move": [190, 234], "oldprogress": 190, "get_desc": 190, "descript": [190, 232, 234], "consist": [190, 231, 232], "suppos": 190, "someth": [190, 231, 232], "constant": [190, 218, 219, 220, 221, 222, 223], "within": [190, 198, 214, 226, 229, 231, 232, 235], "life": 190, "stage": [190, 232], "task": 190, "init_tqdm": 190, "set_don": 190, "posit": [190, 218, 219, 220, 221, 222, 223, 232], "bar": 190, "set_statu": 190, "set_tot": 190, "busi": 190, "desir": [190, 218, 219, 220, 221, 222, 223], "finish": [190, 232], "destroi": 190, "log_verbos": [193, 196], "gen_session_id": 193, "start_logg": 193, "log": [194, 230, 231, 234], "python": [197, 204, 231, 232, 234, 235], "remaind": 197, "gather": 197, "yaml": [197, 198], "_dict": [198, 199, 201], "temporarili": 198, "alter": [198, 232], "At": [198, 232], "exit": 198, "nest": 198, "get_default": 198, "reset": 198, "reset_al": 198, "structur": [198, 226, 228, 229, 230, 231, 234], "usernam": 204, "output_format": 204, "feel": [204, 231, 232], "free": [204, 206, 231, 232, 234], "wilhelm": 204, "et": [204, 232], "al": [204, 232], "2014": 204, "natur": 204, "v509": 204, "n7502": 204, "nature13319": 204, "comprehens": [204, 231, 232, 234, 235], "descritpion": 204, "visit": 204, "regist": 204, "mail": 204, "address": [204, 232], "coupl": 204, "admin": [204, 232], "xml": 204, "get_express": 204, "normal": [204, 231], "tissue_averag": 204, "unnorm": 204, "express": [204, 231, 232, 235], "previous": 204, "disk": [204, 232], "averag": [204, 232], "tissu": [204, 232, 235], "sampl": 204, "get_piec": 204, "20480": 204, "delimit": 204, "hundr": [204, 232], "mb": [204, 231, 232], "segment": [204, 232], "curli": 204, "brace": 204, "individu": [204, 232], "largest": 204, "get_protein": 204, "tissue_id": 204, "calculation_method": 204, "swissprot_onli": 204, "no_isoform": 204, "get_tissu": 204, "annot": [204, 230, 231, 234], "pandas_matrix": 204, "matrix": [204, 235], "shold": 204, "curl": [204, 235], "raw": [204, 226, 228, 229, 231, 232], "tissues_x_protein": 204, "hold": 204, "pdb": [206, 232, 235], "xsize": 209, "cairotest": 209, "1024": 209, "height": 209, "bgcol": 209, "embl_gray125": 209, "interscol": 209, "ysize": 209, "ycol": 209, "skip": 209, "margin": [209, 210, 232], "mincircl": 209, "cellpad": 209, "graph": [210, 211, 214, 217, 224, 226, 228, 229, 232, 234], "graphix_dir": 210, "graphix_format": 210, "title_text": 210, "title_font_famili": 210, "title_font_s": 210, "title_color": 210, "646567": 210, "layout": [210, 214, 226, 228, 229], "fruchterman_reingold": 210, "layout_param": 210, "vertex_label": 210, "vertex_s": [210, 232], "vertex_label_s": [210, 232], "degree_label_s": 210, "edge_width": [210, 232], "vertex_color": [210, 232], "6ea945": 210, "vertex_label_color": [210, 232], "007b7f": 210, "vertex_alpha": 210, "aa": [210, 232], "vertex_frame_color": 210, "ffffff00": 210, "vertex_frame_width": [210, 232], "edge_label": 210, "edge_label_s": 210, "edge_label_color": 210, "edge_curv": 210, "edge_color": [210, 232], "818284": 210, "edge_alpha": 210, "autocurv": 210, "vertex_label_font": 210, "san": 210, "serif": 210, "edge_label_font": 210, "edge_arrow_s": 210, "edge_arrow_width": 210, "palett": [210, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229], "bbox": [210, 214, 226, 229], "small": [210, 218, 219, 220, 221, 222, 223, 231, 234], "dimens": 210, "1280": 210, "draw": [211, 214, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229], "routin": [211, 224], "cairo": [211, 214, 218, 219, 220, 221, 222, 223, 226, 229, 232], "surfac": [211, 232], "l": [211, 214, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232], "defaultgraphdraw": [211, 226, 228, 229], "ubigraph": 211, "displai": [211, 232], "ubigraphdraw": 211, "u": [211, 231, 232], "ubietylab": 211, "net": [211, 232], "send": 211, "igraph": [211, 214, 226, 228, 229, 230, 231, 234], "cytoscap": [211, 231, 232], "cytoscaperpc": 211, "plugin": 211, "gforg": 211, "nbic": 211, "nl": 211, "project": 211, "cytoscapegraphdraw": 211, "abstractcairographdraw": [213, 214, 215, 216], "vertex_drawer_factori": 214, "edge_drawer_factori": 214, "label_drawer_factori": 214, "visualis": 214, "node": 214, "2d": 214, "plane": 214, "straight": [214, 218, 219, 220, 221, 222, 223, 232], "curv": 214, "edg": [214, 230], "connect": [214, 231, 234, 235], "invok": 214, "plot": [214, 217, 230, 234], "__plot__": 214, "understood": 214, "drawer": [214, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229], "associ": [214, 226, 228, 229, 232], "boundingbox": [214, 226, 229], "we": [214, 226, 229, 231, 232, 233, 235], "bound": [214, 226, 228, 229, 232], "box": [214, 226, 228, 229], "constructor": [214, 226, 229], "factori": 214, "abstractcairovertexdraw": [214, 229], "area": 214, "color": [214, 218, 219, 220, 221, 222, 223, 226, 228, 229], "defaultvertexdraw": 214, "abstractedgedraw": [214, 219, 220, 223], "style": [214, 217, 234, 235], "drawn": [214, 218, 219, 220, 221, 222, 223, 226, 228, 229], "arrowedgedraw": 214, "textdraw": 214, "abstract": [218, 226, 228], "concret": [218, 228], "deriv": [218, 228, 232, 235], "draw_directed_edg": [218, 219, 220, 221, 222, 223], "src_vertex": [218, 219, 220, 221, 222, 223], "dest_vertex": [218, 219, 220, 221, 222, 223], "draw_loop_edg": [218, 219, 220, 221, 222, 223], "loop": [218, 219, 220, 221, 222, 223], "circl": [218, 219, 220, 221, 222, 223], "draw_undirected_edg": [218, 219, 220, 221, 222, 223], "undirect": [218, 219, 220, 221, 222, 223, 232], "get_label_posit": [218, 219, 220, 221, 222, 223], "midpoint": [218, 219, 220, 221, 222, 223], "align": [218, 219, 220, 221, 222, 223], "tri": [218, 219, 220, 221, 222, 223], "overlap": [218, 219, 220, 221, 222, 223, 232], "horizont": [218, 219, 220, 221, 222, 223], "taken": [218, 219, 220, 221, 222, 223], "textalign": [218, 219, 220, 221, 222, 223], "alpha_at_src": 219, "alpha_at_dest": 219, "vari": 219, "alpha": [219, 221, 222, 232], "destin": [219, 221, 222, 223], "arrow": 220, "alphavaryingedgedraw": [221, 222], "opac": [221, 222], "transpar": [221, 222], "interpol": [221, 222], "taper": 223, "wider": 223, "narrow": 223, "abstractvertexdraw": 226, "abstractcairodraw": 226, "canva": 226, "visual_vertex": [226, 228, 229], "coord": [226, 228, 229], "visualvertexbuild": [226, 228, 229], "algorithm": [226, 228, 229], "abstractdraw": 228, "welcom": [230, 232], "pypath": [230, 234, 235], "omnipath": [230, 234, 235], "instal": 230, "doc": [230, 234], "help": 230, "integr": [230, 232, 234], "manag": 230, "homologi": [230, 235], "faq": 230, "contact": 230, "impressum": 230, "histori": 230, "releas": [230, 232], "dataset": [230, 231], "mous": [230, 231, 232], "rat": 230, "complex": [230, 231, 234], "role": [230, 231], "inter": [230, 231], "cellular": [230, 231], "explor": 230, "6": [230, 232], "7": [230, 231, 232, 235], "74": 230, "93": 230, "110": [230, 232], "11": [230, 232], "13": [230, 232], "upcom": 230, "how": [230, 231], "navig": 230, "book": [230, 231], "introduct": 230, "save": [230, 231], "app": [230, 231], "relationship": [230, 231], "pre": 230, "scientif": 230, "util": [230, 231, 234], "sanit": 230, "signal": [230, 235], "intercellular": [230, 234], "quantit": 230, "overview": 230, "intercel": [230, 231, 234, 235], "categori": [230, 234, 235], "gene": [230, 231, 234, 235], "pickl": [230, 231], "disabl": 230, "bel": [230, 231, 234], "export": [230, 231, 234], "cellphonedb": 230, "legaci": 230, "quickli": 230, "plai": 230, "our": [230, 231], "causal": [230, 235], "literatur": [230, 235], "packag": [231, 232], "omnipathr": [231, 232], "popular": 231, "versatil": [231, 232, 234], "150": [231, 232], "yourself": 231, "try": [231, 232], "client": [231, 232], "builder": 231, "peopl": [231, 232], "distribut": 231, "satisfi": 231, "realli": [231, 232], "veri": [231, 232, 235], "fresh": [231, 232], "version": [231, 232, 234], "etc": [231, 232, 234, 235], "pypi": [231, 232], "pip": 231, "git": 231, "github": [231, 232], "saezlab": 231, "guid": [231, 232], "experienc": 231, "pleas": [231, 232], "biologi": [231, 232], "well": [231, 232], "biolog": [231, 232], "languag": [231, 232], "100": [231, 232], "major": [231, 234, 235], "distinguish": 231, "overal": [231, 232], "higher": [231, 232], "core": [231, 232, 234], "downlad": 231, "applic": [231, 232], "stand": 231, "alon": 231, "processor": 231, "biopax": [231, 234], "begin": 231, "fundament": [231, 232], "design": [231, 232], "principl": 231, "todai": 231, "expos": 231, "rich": [231, 232], "respons": [231, 232], "five": 231, "enz_sub": [231, 232, 235], "variant": [231, 232], "howev": [231, 232], "often": [231, 232], "get_db": [231, 232], "But": [231, 232], "With": 231, "easi": [231, 232], "db": [231, 232], "gb": [231, 232], "long": [231, 232], "prone": 231, "due": [231, 232], "interrupt": 231, "problemat": 231, "reason": [231, 232], "possibli": [231, 232], "anoth": [231, 232, 235], "sometim": [231, 232, 234, 235], "offlin": 231, "encount": 231, "fix": [231, 232, 234], "much": [231, 232, 234, 235], "faster": [231, 232], "still": [231, 232], "standalon": [231, 232], "script": [231, 232], "few": [231, 232, 234], "varieti": [231, 232, 235], "molecul": [231, 235], "ac": [231, 232], "predefin": [231, 232], "input_format": [231, 232], "map_nam": [231, 232], "p00533": [231, 232, 235], "genesymbol": [231, 232, 235], "egfr": [231, 232, 235], "ortholog": [231, 232], "homologen": [231, 232, 234, 235], "ensembl": [231, 232], "10090": [231, 232, 235], "human": [231, 232, 235], "q01279": [231, 232], "support": [231, 232, 234], "complet": [231, 232, 234], "run": [231, 232, 235], "oldest": 231, "pyproject": 231, "toml": 231, "besid": [231, 232], "prefer": [231, 232], "privat": 231, "sensit": 231, "matter": [231, 232], "omnipathdb": [231, 232, 235], "gmail": 231, "saez": 231, "lab": [231, 232], "d\u00e9ne": 231, "t\u00fcrei": 231, "sebastian": 231, "lobentanz": 231, "ahmet": 231, "rifaioglu": 231, "melih": 231, "darcan": 231, "erva": 231, "ulusoi": 231, "tennur": 231, "k\u0131l\u0131\u00e7": 231, "\u00f6mer": 231, "kaan": 231, "vural": 231, "volkan": 231, "atalai": 231, "olga": 231, "ivanova": 231, "nicol\u00e0": 231, "palacio": 231, "contribut": 231, "past": 231, "maintain": [231, 232], "francesco": 231, "ceccarelli": 231, "attila": 231, "g\u00e1bor": 231, "alberto": 231, "valdeoliva": 231, "michael": 231, "klein": 231, "fabian": 231, "bird": 231, "ey": 231, "view": 231, "recent": [231, 232], "16": 232, "17": 232, "18": 232, "19": 232, "20": 232, "21": 232, "ptm": [232, 234, 235], "bioconductor": 232, "furthermor": 232, "enjoi": 232, "almost": [232, 234], "unlimit": 232, "flexibl": 232, "tour": 232, "chanc": 232, "cover": 232, "hesit": 232, "ask": 232, "__version__": 232, "execut": 232, "0m": 232, "06": 232, "2022": 232, "03": 232, "39": 232, "high": 232, "easiest": 232, "henc": [232, 234, 235], "quick": 232, "lower": 232, "34": 232, "27": 232, "lt": 232, "databasemanag": 232, "0x602fb851cd90": 232, "gt": 232, "tf_target": [232, 235], "small_molecul": 232, "tf_mirna": 232, "mirna_mrna": 232, "lncrna_mrna": 232, "offer": [232, 234], "strict": 232, "cu": 232, "83": 232, "7980": 232, "35551": 232, "1m": 232, "55": 232, "18558": 232, "94358": 232, "confid": [232, 235], "tft": 232, "2m": 232, "72": 232, "54": 232, "18986": 232, "326708": 232, "mi": 232, "28": 232, "1264": 232, "3288": 232, "tmi": 232, "41": 232, "1032": 232, "4960": 232, "lnc": 232, "33": 232, "243": 232, "217": 232, "inhibit": 232, "alloster": 232, "metabolit": [232, 234], "experiment": 232, "extend": 232, "futur": [232, 235], "smol": 232, "94": 232, "57": 232, "1980": 232, "3147": 232, "26": 232, "41426": 232, "co": 232, "28173": 232, "quit": 232, "43": 232, "60": 232, "36": 232, "5490653": 232, "50872": 232, "68": 232, "heavi": 232, "ic": 232, "37": 232, "301527": 232, "48570": 232, "biomed": 232, "troublesom": 232, "broken": 232, "daili": 232, "report": 232, "after": [232, 235], "lowercas": 232, "depod": 232, "cytosig": 232, "kind": [232, 235], "signor_interact": 232, "_interact": 232, "_enz_sub": 232, "_complex": 232, "_annot": 232, "intend": 232, "fulli": 232, "postfix": 232, "_raw": 232, "_map": 232, "relev": 232, "bring": 232, "state": 232, "suitabl": 232, "though": [232, 235], "observ": 232, "arbitrarili": 232, "straightforward": 232, "outsid": 232, "becaus": [232, 235], "signor_complex": 232, "intern": [232, 234], "intera": 232, "readi": 232, "complexaggreg": 232, "p23511_p25208_q13952": 232, "nfy": 232, "p68104_p85299_q6r327_q8tb45_q9bvc4": 232, "mtorc2": 232, "p42345_q8n122_q8tb45_q96b36_q9bvc4": 232, "mtorc1": 232, "p63208_q13616_q9y297": 232, "scf": 232, "betatrcp": 232, "q09472_q92793": 232, "cbp": 232, "p300": 232, "q09472_q92793_q92831": 232, "pcaf": 232, "q13485_q15796": 232, "smad2": [232, 235], "smad4": 232, "p84022_q13485": 232, "smad3": 232, "p05412_q13485": 232, "jun": 232, "q15796_q9hau4": 232, "smurf2": 232, "o15105_q01094_q13547": 232, "smad7": 232, "hdac1": 232, "e2f": 232, "p19838_q04206": 232, "nfkb": 232, "p65": 232, "p50": 232, "o14920_o15111": 232, "ik": 232, "1000": 232, "17699": 232, "readabl": 232, "52": 232, "signorinteract": 232, "o15530": 232, "source_isoform": 232, "target_isoform": 232, "source_typ": 232, "target_typ": 232, "mechan": 232, "phosphoryl": 232, "pubm": 232, "10455013": 232, "ptm_type": 232, "ptm_residu": 232, "ser396": 232, "ptm_motif": 232, "sssssshslsasdtg": 232, "q9nq66": 232, "chebi": 232, "18035": 232, "smallmolecul": 232, "quantiti": 232, "23880553": 232, "catalysi": 232, "p62136": 232, "o15169": 232, "down": 232, "dephosphoryl": 232, "17318175": 232, "ser77": 232, "yepegsasptppylk": 232, "sou": 232, "3285": 232, "signor_enzyme_substr": 232, "intermedi": 232, "easier": 232, "enzymesubstrateaggreg": 232, "58": 232, "typ": 232, "resnum": 232, "396": 232, "389": 232, "403": 232, "kinas": [232, 235], "resaa": 232, "motif": 232, "enzyme_isoform": 232, "substrate_isoform": 232, "77": 232, "70": 232, "84": 232, "final": 232, "signor_pathway_annot": 232, "practic": 232, "o14733": 232, "48": 232, "signorpathwai": 232, "tnf": 232, "toll": 232, "haven": 232, "mention": 232, "four": 232, "limit": 232, "signor_protein_famili": 232, "famili": 232, "too": 232, "own": [232, 234], "pf2": 232, "53": 232, "q9hbw0": 232, "q92633": 232, "q9uby5": 232, "90": 232, "min": 232, "awar": 232, "dozen": [232, 235], "sooner": 232, "later": 232, "happen": 232, "accid": 232, "especi": [232, 234], "alwai": 232, "recommend": 232, "remain": 232, "cache_delete_on": 232, "depod_enzyme_substr": 232, "07": 232, "cache_off": 232, "cache_print_on": 232, "found": 232, "dry_run_on": 232, "wrong": 232, "debug_on": 232, "curl_connect_timeout": 232, "establish": 232, "curl_extended_timeout": 232, "exception": 232, "curl_retri": 232, "enough": 232, "curl_timeout": 232, "360": 232, "stack": 232, "investig": 232, "difficult": 232, "preserve_on": 232, "depod_curl": 232, "0x6947386dc8b0": 232, "fileobj": 232, "bioss": 232, "uni": 232, "freiburg": 232, "de": 232, "depod_201405_human_phosphatas": 232, "mitab": 232, "_io": 232, "textiowrapp": 232, "dene": 232, "6a711369ecf9dcff8c5ed88996685b54": 232, "mode": 232, "iso": 232, "8859": 232, "okai": 232, "wether": 232, "successfulli": 232, "night": 232, "transient": 232, "disappear": 232, "perman": 232, "mayb": 232, "third": 232, "parti": 232, "lot": [232, 234], "09": 232, "notebook": 232, "pypath_log": 232, "s3e92": 232, "30": 232, "speci": [232, 234], "535b06d53a59e75bb693369bc5fdc556": 232, "plain": 232, "112963": 232, "verifi": 232, "certif": 232, "invalid": 232, "expir": 232, "why": 232, "softwar": 232, "encrypt": 232, "trust": 232, "And": [232, 235], "reach": [232, 233], "root": [232, 234], "global": 232, "everi": [232, 234], "browser": [232, 235], "program": 232, "correctli": 232, "duti": 232, "procedur": 232, "97": 232, "experi": 232, "scan": 232, "chain": 232, "cipher": 232, "libcurl": 232, "anaconda": 232, "java": 232, "mozilla": 232, "firefox": 232, "seriou": 232, "relat": [232, 235], "side": 232, "strong": 232, "think": 232, "easili": [232, 235], "rc": 232, "get_control": 232, "45": 232, "resourcecontrol": 232, "0x6cc25e25dcf0": 232, "cc": 232, "BY": 232, "sa": 232, "commerci": 232, "profit": 232, "47": 232, "matrixdb": 232, "49": 232, "yearusedreleas": 232, "2015": 232, "2009": 232, "2011": 232, "bioinformat": 232, "oxfordjourn": 232, "25": [232, 235], "690": 232, "nar": 232, "d321": 232, "suppl_1": 232, "d235": 232, "univ": 232, "lyon1": 232, "fr": 232, "omictool": 232, "tool": 232, "19147664": 232, "20852260": 232, "25378329": 232, "taxon": 232, "mammalia": 232, "extracellular": [232, 235], "were": 232, "uniprotkb": 232, "swiss": 232, "prot": 232, "bairoch": 232, "2005": 232, "partner": [232, 235], "repor": 232, "4479": 232, "197": 232, "collect_enzyme_substr": 232, "08": 232, "29": 232, "enzymesubstrateresourc": 232, "phosphoelm": 232, "dbptm": 232, "hprd": 232, "li2012": 232, "phosphosit": [232, 234, 235], "phosphonetwork": [232, 235], "mimp": 232, "protmapp": 232, "kea": 232, "202": 232, "51": 232, "phosphoelm_enzyme_substr": 232, "care": 232, "larger": 232, "netr": 232, "fit": 232, "concept": 232, "stimul": 232, "trip": 232, "networkresourc": 232, "activity_flow": 232, "spike": [232, 235], "signalink3": [232, 235], "guide2pharma": 232, "ca1": 232, "arn": 232, "nrf2": 232, "nrf2ome": 232, "macrophag": 232, "death": 232, "deathdomain": 232, "pdz": 232, "pdzbase": 232, "adhesom": 232, "icellnet": 232, "celltalkdb": 232, "1864": 232, "Such": 232, "6833": 232, "25607": 232, "enzyme_substr": 232, "04": 232, "05": 232, "38": 232, "7979": 232, "35550": 232, "simpli": 232, "44": 232, "8002": 232, "35748": 232, "older": 232, "mentin": 232, "focu": 232, "synonym": 232, "pathway_noref": 232, "pathway_al": 232, "ptm_noref": 232, "ptm_all": 232, "throughput": 232, "intact": 232, "biogrid": 232, "interaction_misc": 232, "constraint": 232, "unbias": 232, "interactom": 232, "screen": 232, "vidal": 232, "transcription_onebyon": 232, "tf": [232, 234, 235], "mirna_target": 232, "lncrna_protein": 232, "ligand_receptor": [232, 234], "pathwaycommon": [232, 234], "reaction": [232, 235], "guarante": 232, "moment": 232, "reaction_misc": 232, "small_molecule_protein": 232, "dict_kei": 232, "cellchatdb": 232, "connectomedb": 232, "talklr": 232, "cellink": 232, "scconnect": 232, "hpmr": 232, "ramilowski2015": 232, "lrdb": 232, "baccin2019": 232, "connectomedb2020": 232, "networkinput": 232, "analysi": [232, 234], "popul": 232, "warn": 232, "v": 232, "trpc1": 232, "kcnma1": 232, "evid": [232, 234], "ppp3ca": 232, "calm2": 232, "calm3": 232, "calm1": 232, "casp1": 232, "casp4": 232, "cacna1c": 232, "cav1": 232, "ev": 232, "118492": 232, "sync": 232, "facilit": 232, "p48995": 232, "q12791": 232, "q08209": 232, "p0dp24": 232, "p0dp25": 232, "p0dp23": 232, "p29466": 232, "p49662": 232, "q13936": 232, "q03135": 232, "p56539": 232, "cav3": 232, "q14247": 232, "cttn": 232, "p14416": 232, "drd2": 232, "p11532": 232, "dmd": 232, "p11362": 232, "fgfr1": 232, "q02790": 232, "fkbp4": 232, "q86ym7": 232, "homer1": 232, "q9nsc5": 232, "homer3": 232, "q99750": 232, "mdfi": 232, "q14571": 232, "itpr2": 232, "q14573": 232, "itpr3": 232, "p29966": 232, "marck": 232, "q13255": 232, "grm1": 232, "p20591": 232, "mx1": 232, "p62166": 232, "ncs1": 232, "q96d31": 232, "orai1": 232, "q96sn7": 232, "orai2": 232, "q9brq5": 232, "orai3": 232, "p11171": 232, "epb41": 232, "p61586": 232, "rhoa": 232, "q9y225": 232, "rnf24": 232, "p21817": 232, "ryr1": 232, "p16615": 232, "atp2a2": 232, "q93084": 232, "atp2a3": 232, "p60880": 232, "snap25": 232, "q13586": 232, "sti": 232, "30573": 232, "egf": 232, "fantom5": 232, "cellsign": 232, "whole": 232, "ia": 232, "get_resource_nam": 232, "get_refer": 232, "50": 232, "10085134": 232, "10209155": 232, "10788520": 232, "12093292": 232, "12297050": 232, "12620237": 232, "12648462": 232, "15620700": 232, "16274239": 232, "17145710": 232, "19531499": 232, "20458382": 232, "21071413": 232, "23331499": 232, "3494473": 232, "6289330": 232, "8639530": 232, "get_direct": 232, "opposit": 232, "classifi": [232, 235], "exactli": [232, 235], "35": 232, "get_sign": 232, "get_": 232, "get_interaction_typ": 232, "_by_": 232, "references_by_resourc": 232, "40": 232, "get_interactions_posit": 232, "make_df": 232, "id_a": 232, "id_b": 232, "type_a": 232, "type_b": 232, "dmodel": 232, "44033": 232, "q14289": 232, "q9ulz3": 232, "iptmnet": 232, "44034": 232, "p54646": 232, "q9y2i7": 232, "44035": 232, "q9bxm7": 232, "q9y2n7": 232, "44036": 232, "p49137": 232, "q9y385": 232, "44037": 232, "q9uhc7": 232, "p04637": 232, "44038": 232, "row": [232, 235], "account": 232, "ambigu": 232, "unambigu": 232, "map_name0": 232, "gabarapl3": 232, "q9by60": 232, "drug": [232, 234], "shortcut": 232, "id_from_label": 232, "o75385": 232, "ulk1": [232, 235], "id_from_label0": 232, "certainli": 232, "q15796": 232, "latin": 232, "effici": 232, "q62432": 232, "8408": 232, "entrez": 232, "46": 232, "chain_map": 232, "get_mapp": 232, "by_id_typ": 232, "place": 232, "autumn": 232, "uniprotmap": 232, "uploadlist": 232, "outdat": 232, "inputs_format": 232, "uniprotlistmap": 232, "biomartmap": 232, "arraymap": 232, "promap": 232, "unichem": [232, 234], "unichemmap": 232, "filemap": 232, "mirbas": 232, "site": [232, 234], "fly": 232, "mapread": 232, "mappingt": 232, "mapper": 232, "dispatch": 232, "mapping_t": 232, "mappingtabledefinit": 232, "embl": 232, "input_class": 232, "syn": 232, "geneid": 232, "hgnc": 232, "refseqp": 232, "input_cl": 232, "22169": 232, "short": [232, 235], "clear": 232, "eas": 232, "ac_queri": 232, "ac_map": 232, "biomart_map": 232, "pro_map": 232, "array_map": 232, "idtyp": 232, "medchemexpress": 232, "actor": 232, "affi": 232, "affymetrix": 232, "agil": 232, "alzforum": 232, "alzforum_mut": 232, "araport": 232, "atla": [232, 235], "bindingdb": 232, "brenda": 232, "carotenoiddb": 232, "cgnc": 232, "chembl": [232, 234], "chemicalbook": 232, "clinicaltri": 232, "codelink": 232, "comptox": 232, "dailym": 232, "dailymed_old": 232, "6649": 232, "ensembl_hc": 232, "ensembl_typ": 232, "one2on": 232, "human_mouse_genesymbol": 232, "get_dict": 232, "get_df": 232, "micos13": 232, "fat4": 232, "rars2": 232, "zfp36l2": 232, "lamc1": 232, "24843": 232, "krtap4": 232, "gm40460": 232, "24844": 232, "gm45618": 232, "24845": 232, "gm4559": 232, "24846": 232, "igkv1or2": 232, "108": 232, "igkv20": 232, "101": 232, "24847": 232, "fpgt": 232, "tnni3k": 232, "22266": 232, "everywher": 232, "deal": 232, "english": 232, "hsapien": 232, "ensmebl": 232, "genu": 232, "hsa": 232, "kegg": 232, "ensure_ncbi_tax_id": 232, "sapien": 232, "homo": 232, "ensure_latin_nam": 232, "cow": 232, "bo": 232, "tauru": 232, "ensure_common_nam": 232, "erithacu": 232, "rubecula": 232, "european": 232, "robin": 232, "uniprot_taxid": 232, "unfortun": 232, "p53104": 232, "saccharomyc": 232, "cerevisia": 232, "divers": 232, "essenti": 232, "proteom": 232, "harbor": 232, "littl": 232, "unload": 232, "fast": 232, "consid": 232, "119": 232, "iuniprot": 232, "len": 232, "all_swissprot": 232, "all_trembl": 232, "3m": 232, "99": 232, "86440": 232, "17131": 232, "69300": 232, "124": 232, "valid_uniprot": 232, "a0a8d0h0c2": 232, "inde": 232, "125": 232, "is_uniprot": 232, "122": 232, "is_swissprot": 232, "match": [232, 235], "tag": 232, "126": 232, "protein_datasheet": 232, "egfr_human": 232, "1210": 232, "o00688": 232, "o00732": 232, "p06268": 232, "q14225": 232, "q68gs5": 232, "q92795": 232, "q9bzs2": 232, "q9gzx1": 232, "q9h2c9": 232, "q9h3c9": 232, "q9umd7": 232, "q9umd8": 232, "q9umg5": 232, "dt": 232, "jul": 232, "1986": 232, "nov": 232, "1997": 232, "oct": 232, "283": 232, "recnam": 232, "epiderm": 232, "growth": 232, "factor": [232, 235], "eco": 232, "0000305": 232, "ec": 232, "altnam": 232, "proto": 232, "oncogen": 232, "erbb": 232, "tyrosin": 232, "flag": 232, "precursor": 232, "gn": 232, "0000312": 232, "3236": 232, "erbb1": 232, "her1": 232, "o": 232, "oc": 232, "eukaryota": 232, "metazoa": 232, "chordata": 232, "craniata": 232, "vertebrata": 232, "euteleostomi": 232, "eutheria": 232, "euarchontoglir": 232, "primat": 232, "haplorrhini": 232, "catarrhini": 232, "hominida": 232, "ox": 232, "ncbi_taxid": 232, "rn": 232, "rp": 232, "nucleotid": 232, "isoform": [232, 235], "58080": 232, "131": 232, "egfr_histori": 232, "uniprot_histori": 232, "uniprotrecordhistori": 232, "entry_vers": 232, "sequence_vers": 232, "entry_nam": 232, "2022_04": 232, "replaced_bi": 232, "282": 232, "2022_03": 232, "281": 232, "2022_02": 232, "280": 232, "2022_01": 232, "279": 232, "2021_04": 232, "2021": 232, "278": 232, "50933": 232, "132": 232, "uniprot_recent_vers": 232, "133": 232, "uniprot_history_recent_datasheet": 232, "deploi": 232, "uniprot_data": 232, "parenthes": 232, "situat": 232, "uniprot_preprocess": 232, "clutter": 232, "135": 232, "transmembran": [232, 235], "p63120": 232, "peptidas": 232, "a2": 232, "herv": 232, "ii": 232, "k": 232, "hml": 232, "subfamili": 232, "q96ec8": 232, "yip1": 232, "q6zms4": 232, "krueppel": 232, "c2h2": 232, "zinc": 232, "finger": 232, "q8n8l2": 232, "q3mis6": 232, "q86uk7": 232, "znf598": 232, "q6p280": 232, "q969w1": 232, "dhhc": 232, "palmitoyltransferas": 232, "o14978": 232, "q15937": 232, "q9p2j8": 232, "q8iuh4": 232, "akr": 232, "zdhhc17": 232, "q9y2d9": 232, "q14588": 232, "q6xr72": 232, "cation": 232, "diffus": 232, "cdf": 232, "transport": 232, "tc": 232, "slc30a": 232, "p58557": 232, "endoribonucleas": 232, "ybei": 232, "q9y5a9": 232, "ythdf": 232, "ythdf2": 232, "q8n9l1": 232, "501768": 232, "cleaner": 232, "better": [232, 234, 235], "usabl": 232, "imperfect": 232, "job": 232, "badli": 232, "residu": 232, "fragment": 232, "strip": 232, "136": 232, "uniprot_taxonomi": 232, "p00521": 232, "abelson": 232, "murin": 232, "leukemia": 232, "viru": 232, "p03333": 232, "h8zm73": 232, "abi": 232, "balsamea": 232, "balsam": 232, "fir": 232, "pinu": 232, "h8zm71": 232, "q9mv51": 232, "firma": 232, "momi": 232, "o81086": 232, "grandi": 232, "grand": 232, "o24474": 232, "o24475": 232, "o64404": 232, "o64405": 232, "q948z0": 232, "q9m7d1": 232, "q9m7d0": 232, "o22340": 232, "q9m7c9": 232, "q5k3v1": 232, "homolepi": 232, "nikko": 232, "p21715": 232, "abrothrix": 232, "jelskii": 232, "akodon": 232, "jelski": 232, "altiplano": 232, "p11140": 232, "abru": 232, "56985": 232, "139": 232, "uniprot_ncbi_taxids_2": 232, "648330": 232, "ncbi_id": 232, "aed": 232, "albopictu": 232, "densoviru": 232, "isol": 232, "boublik": 232, "1994": 232, "aaldnv": 232, "latin_synonym": 232, "10804": 232, "adeno": 232, "aav": 232, "648242": 232, "srivastava": 232, "1982": 232, "118452": 232, "abacion": 232, "magnum": 232, "milliped": 232, "72259": 232, "abaei": 232, "nicipp": 232, "sleepi": 232, "orang": 232, "butterfli": 232, "eurema": 232, "102642": 232, "abax": 232, "parallelepipedu": 232, "ground": 232, "beetl": 232, "392897": 232, "abalist": 232, "stellari": 232, "starri": 232, "triggerfish": 232, "balist": 232, "75332": 232, "abbottina": 232, "rivulari": 232, "chines": 232, "gudgeon": 232, "gobio": 232, "515833": 232, "abdopu": 232, "aculeatu": 232, "engl": 232, "118050": 232, "140": 232, "uniprot_loc": 232, "uniprotloc": 232, "golgi": 232, "apparatu": 232, "membran": [232, 235], "multi": [232, 234], "nucleu": 232, "q15916": 232, "endoplasm": 232, "reticulum": 232, "q66k41": 232, "q8nd82": 232, "q9np64": 232, "nucleolu": 232, "143466": 232, "141": 232, "uniprot_keyword": 232, "uniprotkeyword": 232, "aspartyl": 232, "proteas": 232, "autocatalyt": 232, "cleavag": 232, "erv": 232, "hydrolas": 232, "ribosom": 232, "frameshift": 232, "transpos": 232, "acetyl": [232, 235], "splice": 232, "phosphoprotein": 232, "helix": 232, "metal": 232, "bind": 232, "unipro": 232, "445111": 232, "142": 232, "uniprot_famili": 232, "uniprotfamili": 232, "77892": 232, "143": 232, "uniprot_tissu": 232, "uniprottissu": 232, "brain": 232, "wide": 232, "undefin": 232, "colon": 232, "heart": 232, "kidnei": 232, "leukocyt": 232, "liver": 232, "lung": 232, "ovari": 232, "pancrea": 232, "placenta": 232, "prostat": 232, "skelet": 232, "muscl": [232, 235], "intestin": 232, "spleen": 232, "testi": 232, "318790": 232, "144": 232, "uniprot_topologi": 232, "uniprottopologi": 232, "topologi": [232, 235], "cytoplasm": 232, "137": 232, "146": 232, "206": 232, "212": 232, "lumen": 232, "106": 232, "115": 232, "168": 232, "184": 232, "234": 232, "236": 232, "85": 232, "105": 232, "116": 232, "147": 232, "167": 232, "185": 232, "205": 232, "213": 232, "233": 232, "138": 232, "198": 232, "288": 232, "377": 232, "220": 232, "544230": 232, "bulk": 232, "153": 232, "q14457": 232, "becn1": 232, "154": 232, "156": 232, "weight": 232, "subcellular_loc": 232, "112631": 232, "1050": 232, "cytosol": 232, "preautophagosom": 232, "starvat": 232, "puncat": 232, "sequest": 232, "portion": 232, "autophagosom": 232, "mepgrggtetvgkfefsrkdlighgafavvfkgrhrekhdlevavkcinkknlaksqtllgkeikilkelkhenivalydfqemansvylvmeycnggdladylhamrtlsedtirlflqqiagamrllhskgiihrdlkpqnillsnpagrranpnsirvkiadfgfarylqsnmmaatlcgspmymapevimsqhydgkadlwsigtivyqcltgkapfqasspqdlrlfyeknktlvptipretsaplrqlllallqrnhkdrmdfdeffhhpfldaspsvrksppvpvpsypssgsgssssssstshlasppslgemqqlqktlaspadtagflhssrdsggskdsscdtddfvmvpaqfpgdlvaeapsakpppdslmcsgsslvasagleshgrtpspsppcssspspsgragpfsssrcgasvpipvptqvqnyqriernlqsptqfqtprssairrsgstsplgfaraspsppahaehggvlarkmslgggrpytpspqvgtiperpgwsgtpspqgaemrggrsprpgssapehsprtsglgcrlhsapnlsdlhvvrpklpkpptdplgavfsppqasppqpshglqscrnlrgspklpdflqrnplppilgsptkavpsfdfpktpssqnllallarqgvvmtpprnrtlpdlsevgpfhgqplgpglrpgedpkgpfgrsfstsrltdlllkaafgtqapdpgsteslqek": 232, "1329": 232, "ineffici": 232, "hand": 232, "158": 232, "134277": 232, "51896": 232, "450": 232, "159": 232, "print_featur": 232, "No": 232, "There": 232, "character": 232, "160": 232, "function_o": 232, "subcellula": 232, "r_genecard": 232, "r_locat": 232, "3d": 232, "alternativ": 232, "20254": 232, "unless": 232, "uniprot_cleanup": 232, "exploit": 232, "162": 232, "q9uq28": 232, "8m": 232, "81": 232, "acquir": 232, "mtor": [232, 235], "akt1": 232, "s473": 232, "sparser": 232, "t450": 232, "t308": 232, "closer": 232, "domainmotif": 232, "shown": 232, "e_ptm": 232, "domain": [232, 235], "p31749": 232, "473": 232, "14761976": 232, "15047712": 232, "15364915": 232, "15718470": 232, "15899889": 232, "16221682": 232, "17013611": 232, "19844585": 232, "20333297": 232, "20489726": 232, "21157483": 232, "21592956": 232, "23006971": 232, "8978681": 232, "9736715": 232, "dabas": 232, "enzyme_genesymbol": 232, "substrate_genesymbol": 232, "residue_typ": 232, "residue_offset": 232, "modif": 232, "curation_effort": 232, "p63104": 232, "ywhaz": 232, "hprd_mimp": 232, "11956222": 232, "12861023": 232, "phosphosite_mimp": 232, "phosp": 232, "15071501": 232, "p45983": 232, "mapk8": 232, "phosph": 232, "15696159": 232, "p06493": 232, "cdk1": 232, "712": 232, "rea": 232, "15525677": 232, "18220": 232, "2171679": 232, "41421": 232, "p29597": 232, "tyk2": 232, "p51692": 232, "stat5b": 232, "699": 232, "10830280": 232, "11751923": 232, "12411494": 232, "41422": 232, "q06418": 232, "tyro3": 232, "p19174": 232, "plcg1": 232, "771": 232, "12601080": 232, "15144186": 232, "15592455": 232, "41423": 232, "q9h4a3": 232, "wnk1": 232, "q8tax0": 232, "osr1": 232, "18270262": 232, "41424": 232, "q96j92": 232, "wnk4": 232, "335": 232, "15883153": 232, "41425": 232, "q9nyl2": 232, "map3k20": 232, "q92903": 232, "cds1": 232, "10973490": 232, "ve": 232, "never": 232, "nice": 232, "power": 232, "believ": 232, "ever": 232, "topic": 232, "186": 232, "seqc": 232, "sequencecontain": 232, "preload_seq": 232, "get_seq": 232, "get_region": 232, "tfiirclqwt": 232, "187": 232, "human_proteom": 232, "swissprot_seq": 232, "0x689900d45cc0": 232, "0x689908ea8f70": 232, "0x689908eaa4a0": 232, "0x6899223538b0": 232, "0x689922353c70": 232, "o60384": 232, "0x689922350730": 232, "0x689922353310": 232, "0x689922353760": 232, "0x689922353190": 232, "0x689922350d90": 232, "0x689922353220": 232, "p61129": 232, "0x689922353370": 232, "0x6899223534f0": 232, "0x689922350c70": 232, "0x689922351450": 232, "0x689922353910": 232, "0x6899223502b0": 232, "p98182": 232, "0x689922350280": 232, "0x68992235": 232, "53045": 232, "191": 232, "findal": 232, "ygct": 232, "seqlookup": 232, "625": 232, "annotationt": 232, "3788067": 232, "51636": 232, "78": 232, "cpad": 232, "2308": 232, "1358": 232, "annotationbas": 232, "get_nam": 232, "regulator_typ": 232, "effect_on_pathwai": 232, "effect_on_canc": 232, "effect_on_cancer_outcom": 232, "cancer": 232, "pathway_categori": 232, "get_valu": 232, "acut": 232, "lymphoblast": 232, "myeloid": 232, "aml": 232, "basal": 232, "carcinoma": 232, "bladder": 232, "breast": 232, "cervic": 232, "cholangiocarcinoma": 232, "choriocarcinoma": 232, "chronic": 232, "lymphocyt": 232, "cll": 232, "cml": 232, "colorect": 232, "endometri": 232, "esophag": 232, "ew": 232, "sarcoma": 232, "gallbladd": 232, "gastric": 232, "glioma": 232, "hepatocellular": 232, "hodgkin": 232, "lymphoma": 232, "infantil": 232, "hemangioma": 232, "laryng": 232, "malign": 232, "melanoma": 232, "pleural": 232, "mesothelioma": 232, "mantl": 232, "myeloma": 232, "nasopharyng": 232, "neuroblastoma": 232, "oral": 232, "osteosarcoma": 232, "ovarian": 232, "pancreat": 232, "pituitari": 232, "adenoma": 232, "renal": 232, "squamou": 232, "synovi": 232, "testicular": 232, "thyroid": 232, "a6ndv4": 232, "o14745": 232, "o14862": 232, "o15169_p25054": 232, "o94813": 232, "o94953": 232, "p06733": 232, "glucos": 232, "p11166": 232, "p25054": 232, "p40261": 232, "p49327": 232, "p54687": 232, "pten": 232, "phosphatas": 232, "p60484": 232, "q01973": 232, "q12888": 232, "q13620": 232, "q96cx2": 232, "q99558": 232, "mimat0000069": 232, "mimat0000089": 232, "mimat0000093": 232, "mimat0000262": 232, "mimat0000274": 232, "mimat0000422": 232, "mimat0000427": 232, "mimat0000437": 232, "mimat0000449": 232, "mimat0000455": 232, "mimat0000460": 232, "mimat0000461": 232, "mimat0000617": 232, "mimat0003266": 232, "mimat0003320": 232, "o75473": 232, "o75888": 232, "o76041": 232, "p06756": 232, "p13631": 232, "p22676": 232, "p25791": 232, "p546": 232, "1279": 232, "usual": 232, "215": 232, "celltypist": 232, "927": 232, "integrin": 232, "62": 232, "cellcellinteract": 232, "5544": 232, "panglaodb": 232, "8479": 232, "4813": 232, "lambert2018": 232, "3281": 232, "3277": 232, "cancersea": 232, "2515": 232, "1992": 232, "phobiu": 232, "35382": 232, "go_intercel": 232, "48799": 232, "18377": 232, "18127": 232, "15903": 232, "surfaceom": 232, "3558": 232, "matrisom": 232, "1514": 232, "hpa_secretom": 232, "3568": 232, "1748": 232, "1695": 232, "annotati": 232, "5842": 232, "exempl": 232, "mainclass": 232, "subclass": 232, "subsubclass": 232, "collagen": 232, "ecm": [232, 235], "glycoprotein": 232, "affili": 232, "proteoglycan": 232, "get_subset": 232, "56": 232, "a6nmz7": 232, "a8tx70": 232, "b4dz39": 232, "homotrim": 232, "p02452": 232, "ht_dm_cluster278": 232, "p02452_p02462_p08572_p29400_p53420_q01955_q02388_q14031_q17rw2_q8nfw1": 232, "trimer": 232, "p02452_p08123": 232, "p02458": 232, "xi": 232, "p02458_p12107_p13942": 232, "p02458_p20908_p25067": 232, "p02458_p20908_p25067_p29400": 232, "p02458_p25067_p29400": 232, "iii": 232, "p02461": 232, "p02462": 232, "iv": 232, "p02462_p08572": 232, "p05997_p12107": 232, "p05997_p12107_p20908": 232, "p05997_p20908": 232, "p05997_p20908_p25940": 232, "p08572": 232, "p12109_p12110": 232, "3072": 232, "membership": 232, "signalink": [232, 235], "netpath": 232, "protein_sourc": 232, "signalinkpathwai": 232, "keggpathwai": 232, "netpathpathwai": 232, "complex_sourc": 232, "28745": 232, "6762": 232, "arrai": 232, "all_annot": 232, "jak": 232, "stat": 232, "actin": 232, "cytoskeleton": 232, "oxytocin": 232, "phospholipas": 232, "inhibitor": 232, "resist": 232, "papillomaviru": 232, "infect": 232, "carbon": 232, "metabol": 232, "endocytosi": 232, "cholin": 232, "parathyroid": 232, "hormon": 232, "synthesi": 232, "2540": 232, "record_id": [232, 235], "q16181": 232, "sept7": 232, "upregul": 232, "migrat": 232, "14396": 232, "p30990": 232, "nt": 232, "2306": 232, "14397": 232, "2307": 232, "14398": 232, "erk": 232, "14399": 232, "14400": 232, "14401": 232, "convent": 232, "tidyvers": 232, "tidyr": [232, 235], "pivot_wid": 232, "unintuit": 232, "index_col": 232, "axi": 232, "set_index": 232, "unstack": 232, "droplevel": 232, "reset_index": 232, "mimat0000431": 232, "mir": 232, "suppress": 232, "tumor": 232, "invas": 232, "adam10": 232, "mediat": 232, "notch1": [232, 235], "notch": 232, "mimat0005886": 232, "1297": 232, "prolifer": 232, "aeg1": 232, "wnt": 232, "q9up65": 232, "pla2g4c": 232, "induc": 232, "chemotaxi": 232, "downregul": 232, "akt": 232, "pi3k": 232, "q92600": 232, "cnot9": 232, "2303": 232, "p16422": 232, "epcam": 232, "2304": 232, "q9y6y0": 232, "ivns1abp": 232, "2305": 232, "kctd12": 232, "beta": 232, "catenin": 232, "goe": 232, "customannot": 232, "anyon": 232, "intercellannot": 232, "310033": 232, "43617": 232, "intercell_annot": 232, "annot_combined_class": 232, "revis": 232, "exclud": 232, "understand": 232, "parent": 232, "composit": [232, 235], "tgf": 232, "aspect": [232, 235], "plasma": [232, 235], "paper": [232, 235], "annotdefkei": 232, "annotationgroup": 232, "5150": 232, "5760": 232, "7041": 232, "transmembrane_predict": 232, "6444": 232, "transmembrane_phobiu": 232, "almen2009": 232, "2072": 232, "transmembrane_sosui": 232, "1663": 232, "tran": 232, "143945": 232, "behav": 232, "gaba_receptor": 232, "gaba": 232, "a8mpy1": 232, "gabra1": 232, "gabrb2": 232, "gabrd": 232, "o14764_p14867_p47870": 232, "delta": 232, "o14764_p28472_p48169": 232, "o14764_p28472_q16445": 232, "o14764_p47870_p48169": 232, "o14764_p47870_q16445": 232, "gabbr1": 232, "gabbr2": 232, "o75899_q9ubs5": 232, "p14867": 232, "gamma": 232, "p14867_p18507_p28472": 232, "gabrg2": 232, "p14867_p18507_p47870": 232, "p18507_p28472_p31644": 232, "p18507_p28472_p34903": 232, "p18507_p28472_p47869": 232, "p18507_p28472_q16445": 232, "p18507_q8n1c3": 232, "1368": 232, "register_network": 232, "statist": 232, "counts_df": 232, "consensus_scor": 232, "transmitt": [232, 235], "receiv": [232, 235], "plasma_membrane_transmembran": 232, "plasma_membrane_peripher": 232, "n_uniprot": 232, "resource_specif": [232, 235], "1120": 232, "parin_adhesion_regul": 232, "intracellular_intercellular_rel": 232, "1121": 232, "plakophilin_adhesion_regul": 232, "1122": 232, "actin_regulation_adhesom": 232, "1123": 232, "adhesion_cytoskeleton_adaptor": 232, "118": 232, "1124": 232, "291": 232, "1125": 232, "q96jp9": 232, "cdhr1": 232, "q9p126": 232, "clec1b": 232, "q13585": 232, "gpr50": 232, "q8n9i0": 232, "syt2": 232, "o43614": 232, "hcrtr2": 232, "a6njy1": 232, "slc9b1p1": 232, "q5ri15": 232, "cox20": 232, "q13948": 232, "cux1": 232, "q8ngk4": 232, "or52k1": 232, "q8iys2": 232, "kiaa2013": 232, "neurotensin": 232, "recom": 232, "79": 232, "o95665": 232, "ntsr2": 232, "410": 232, "45385": 232, "neurotensi": 232, "tr": 232, "idecapepti": 232, "disulfid": 232, "7598": 232, "tree": [232, 234], "geneontologi": 232, "goannot": 232, "term": 232, "product": 232, "goa": 232, "0x689946b55570": 232, "82": 232, "0x68991cdc9b40": 232, "NOT": 232, "extern": 232, "region": 232, "channel": [232, 235], "p21333": 232, "p80108": 232, "p62258": 232, "q9nrx4": 232, "p54710": 232, "q8ner1": 232, "p01303": 232, "get_all_descend": 232, "0005576": 232, "0001507": 232, "0001527": 232, "0003351": 232, "0003355": 232, "0005201": 232, "0005577": 232, "0005582": 232, "0005583": 232, "0005584": 232, "0005585": 232, "0005586": 232, "0005587": 232, "0005588": 232, "0005590": 232, "0005591": 232, "0005592": 232, "0005595": 232, "0005596": 232, "0005599": 232, "0005601": 232, "0005602": 232, "0005604": 232, "0005606": 232, "0005607": 232, "0005608": 232, "0005609": 232, "0005610": 232, "0005611": 232, "0005612": 232, "0005614": 232, "0005615": 232, "0005616": 232, "0006858": 232, "0006859": 232, "0006860": 232, "0009519": 232, "0010367": 232, "0016914": 232, "0016942": 232, "0020003": 232, "0020004": 232, "0020005": 232, "0020006": 232, "0030020": 232, "0030021": 232, "0030023": 232, "0030197": 232, "0030345": 232, "0030934": 232, "0030935": 232, "0030938": 232, "0031012": 232, "0031395": 232, "0032311": 232, "0032579": 232, "0033165": 232, "0033166": 232, "0034358": 232, "0034359": 232, "0034360": 232, "0034361": 232, "0034362": 232, "0034363": 232, "0034364": 232, "0034365": 232, "00343": 232, "3104": 232, "redund": 232, "stoichiometri": 232, "homomultim": 232, "update_index": 232, "91": 232, "p42345": [232, 235], "o00141_o15530_o75879_p23443_p34931_p42345_q6r327_q8n122_q9bpz7_q9bvc4_q9h672": 232, "o00141_o15530_p07900_p23443_p31749_p31751_p42345_p78527_q05513_q05655_q6r327_q8n122_q9bpz7_q9bvc4": 232, "o00141_o15530_p0cg47_p0cg48_p23443_p42345_q15118_q6r327_q8n122_q96br1_q9bpz7_q9bvc4": 232, "o00141_o15530_p23443_p42345_q15118_q6r327_q8n122_q96br1_q96j02_q9bpz7_q9bvc4": 232, "o00141_o75879_p0cg48_p23443_p34931_p42345_p62753_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 232, "o00141_p0cg48_p23443_p36894_p42345_p62942_p68106_q15427_q6r327_q8n122_q9bpz7_q9bvc4": 232, "o00141_p0cg48_p23443_p42345_p46781_p62753_q6r327_q8n122_q96kq7_q9bpz7_q9bvc4_q9ny26": 232, "o00141_p0cg48_p23443_p42345_p62753_p62942_q6r327_q8n122_q9bpz7_q9bvc4_q9ny26": 232, "o00141_p0cg48_p23443_p42345_p62753_q15172_q6r327_q8iw41_q9bpz7_q9bvc4_q9h672": 232, "o00141_p0cg48_p23443_p42345_p62753_q6r327_q70z35_q8n122_q8tcu6_q9bpz7": 232, "5348": 232, "alphabet": 232, "sort": [232, 234], "despit": [232, 234], "fact": 232, "cplex": 232, "98": 232, "q92793": 232, "q09472": 232, "components_genesymbol": 232, "nfya_nfyb_nfyc": 232, "corum": [232, 235], "compleat": 232, "complexport": 232, "hu": 232, "15243141": 232, "14755292": 232, "9372932": 232, "c1": 232, "4478": 232, "hc1449": 232, "deptor_eef1a1_mlst8_prr5_rictor": 232, "c2": 232, "akt1s1_deptor_mlst8_mtor_rptor": 232, "c3": 232, "btrc_cul1_skp1": 232, "9990852": 232, "c5": 232, "227": 232, "hc757": 232, "crebbp_ep300": 232, "c6": 232, "28168": 232, "npnt": 232, "q5szk8_q6uxi9_q86xx4": 232, "fras1_frem2_npnt": 232, "28169": 232, "nrp1_nrp2": 232, "o14786_o60462_q9y4d7": 232, "nrp1_nrp2_plxnd1": 232, "28170": 232, "nrp2_plxna2": 232, "o60462_o75051": 232, "28171": 232, "nrp2_plxna4": 232, "o60462_q9hcm2": 232, "28172": 232, "ptch2_smo": 232, "q99835_q9y6c5": 232, "longer": 232, "half": 232, "good": 232, "reli": 232, "save_to_pickl": 232, "myannot": 232, "pickle_fil": 232, "complexdb": 232, "mycomplex": 232, "char": 232, "xxxxx": 232, "grow": 232, "ten": 232, "thousand": 232, "l0n17": 232, "disclaim": 232, "annoi": 232, "research": 232, "educ": 232, "credit": 232, "publish": 232, "gnu": 232, "less": 232, "104": 232, "prioriti": 232, "threshold": 232, "everyth": 232, "107": 232, "si": 232, "uniroma2": 232, "download_complex": 232, "d7b8673e83e43a01c533f9de5a2b04b9": 232, "1046": 232, "creation": 232, "builtin": 232, "shell": 232, "dev": 232, "null": 232, "devnul": 232, "notic": 232, "109": 232, "greet": 232, "childoflogg": 232, "child": 232, "say_someth": 232, "_log": 232, "anywher": 232, "111": 232, "_logger": 232, "mylogg": 232, "strai": 232, "flood": 232, "112": 232, "hasn": 232, "thoroughli": 232, "scai": 232, "fraunhof": 232, "captur": 232, "span": 232, "rang": 232, "init_network": 232, "ptmaggreg": 232, "belgraph": 232, "bel_graph": 232, "summar": 232, "export_relationship": 232, "omnipath_pathwai": 232, "fp": 232, "bel_str": 232, "333": 232, "infer": 232, "network_expand_complex": 232, "interaction_input": 232, "singnalink": 232, "interaction_datafram": 232, "peripher": [232, 235], "protein_datafram": 232, "2019": 232, "soon": 232, "along": 232, "load_omnipath": 232, "comment": 232, "1h": 232, "approx": 232, "entir": 232, "sai": 232, "advantag": 232, "worri": 232, "neither": 232, "network1": 232, "entreza": 232, "entrezb": 232, "1950": 232, "1956": 232, "5290": 232, "207": 232, "2932": 232, "network2": 232, "sif": [232, 234], "pik3ca": 232, "sos1": 232, "rac1": 232, "map3k1": 232, "hra": 232, "gsk3b": 232, "iinput_format": 232, "input1": 232, "readset": 232, "egf1": 232, "input2": 232, "egf2": 232, "ecount": 232, "vcount": 232, "dgraph": 232, "3241": 232, "dir": 232, "agre": 232, "p17252": 232, "q15139": 232, "stimulatori": 232, "revers": 232, "get_dir": 232, "inhibitori": 232, "is_inhibit": 232, "contradict": 232, "rid": 232, "consensu": 232, "consensus_edg": 232, "helper": 232, "esr1": 232, "plural": 232, "gss": 232, "atg16l2": 232, "mix": [232, 235], "could": 232, "affect": 232, "gs_stimulated_bi": 232, "_namedvertexseq": 232, "seri": 232, "bit": 232, "contraintuit": 232, "gs_stimul": 232, "affected_bi": 232, "similari": 232, "inhibited_bi": 232, "gs_": 232, "up_": 232, "neighbor": 232, "neighborhood": 232, "indirect": 232, "increas": 232, "rapidli": 232, "atg3": [232, 235], "get_edg": 232, "map1lc3b": [232, 235], "sqstm1": [232, 235], "pmid": 232, "refs_by_sourc": 232, "abil": 232, "egf_network": 232, "777777": 232, "97be73": 232, "ffffff": 232, "bug": 232, "ipython": 232, "visibl": 232, "inlin": 232, "120": 232, "imag": 232, "click": 233, "summari": 234, "changelog": 234, "improv": 234, "remot": 234, "partial": 234, "pyreact": 234, "biopaxread": 234, "rule": [234, 235], "figur": 234, "manuscript": 234, "workflow": 234, "mysql": 234, "mysql_connect": 234, "python3": 234, "orthologi": 234, "regulatori": 234, "mrna": [234, 235], "websrvtab": 234, "dorothea": [234, 235], "dataio": 234, "docstr": 234, "focus": 234, "rewritten": 234, "workaround": 234, "terribl": 234, "reflist": 234, "becam": 234, "over": 234, "paremet": 234, "mandatori": [234, 235], "reorgan": 234, "redesign": 234, "repositori": 234, "src": 234, "yml": 234, "pathogen": 234, "compound": 234, "rna": 234, "neo4j": 234, "backend": 234, "biocyph": 234, "dlmanag": 234, "protocol": 235, "wget": 235, "whatev": 235, "recogn": 235, "webserv": 235, "pathwayextra": 235, "optimum": 235, "coverag": 235, "qualiti": 235, "activ": 235, "flow": 235, "kinaseextra": 235, "ligrecextra": 235, "ligand": 235, "receptor": 235, "mirnatarget": 235, "curat": 235, "interacion": 235, "rodent": 235, "homolog": 235, "smaller": 235, "counterpart": 235, "omic": 235, "regul": 235, "highest": 235, "dorothea_level": 235, "regulon": 235, "10116": 235, "arget": 235, "source_target": 235, "atg7": 235, "atg4b": 235, "map1lc3a": 235, "map1lc3c": 235, "q9h0r8": 235, "gabarap": 235, "gabarapl2": 235, "appear": 235, "fyn": 235, "ubiquitin": 235, "ens_sub": 235, "phosphosite_noref": 235, "000": 235, "hearth": 235, "dplyr": 235, "signalink_pathwai": 235, "bmp7": 235, "hpa_tissu": 235, "funtion": 235, "ion": 235, "interleukin": 235, "deliv": 235, "exact": 235, "atg4a": 235, "bmp8b": 235, "intuit": 235, "repli": 235}, "objects": {"": [[0, 0, 0, "-", "pypath"]], "pypath": [[1, 0, 0, "-", "core"], [6, 0, 0, "-", "data"], [7, 3, 1, "", "disclaimer"], [8, 3, 1, "", "info"], [9, 0, 0, "-", "inputs"], [33, 0, 0, "-", "internals"], [60, 0, 0, "-", "legacy"], [64, 3, 1, "", "log"], [65, 0, 0, "-", "resources"], [72, 0, 0, "-", "share"], [202, 0, 0, "-", "utils"], [207, 0, 0, "-", "visual"]], "pypath.core": [[2, 0, 0, "-", "attrs"], [4, 0, 0, "-", "common"]], "pypath.core.attrs": [[3, 1, 1, "", "AttributeHandler"]], "pypath.core.attrs.AttributeHandler": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "serialize"], [3, 2, 1, "", "update_attrs"]], "pypath.core.common": [[5, 3, 1, "", "filter_network_df"]], "pypath.inputs": [[10, 0, 0, "-", "cell"], [12, 0, 0, "-", "common"], [19, 0, 0, "-", "credentials"], [21, 0, 0, "-", "ebi"], [23, 0, 0, "-", "embopress"], [25, 3, 1, "", "get_method"], [26, 0, 0, "-", "main"], [27, 0, 0, "-", "mitab"], [30, 0, 0, "-", "rdata"], [31, 0, 0, "-", "science"]], "pypath.inputs.cell": [[11, 3, 1, "", "cell_supplementary"]], "pypath.inputs.common": [[13, 3, 1, "", "csv_sep_change"], [14, 3, 1, "", "glom_fields"], [15, 3, 1, "", "json_extract"], [16, 3, 1, "", "json_read"], [17, 3, 1, "", "read_table"], [18, 3, 1, "", "read_xls"]], "pypath.inputs.credentials": [[20, 3, 1, "", "credentials"]], "pypath.inputs.ebi": [[22, 3, 1, "", "ebi_rest"]], "pypath.inputs.embopress": [[24, 3, 1, "", "embopress_supplementary"]], "pypath.inputs.mitab": [[28, 3, 1, "", "mitab_field_list"], [29, 3, 1, "", "mitab_field_uniprot"]], "pypath.inputs.science": [[32, 3, 1, "", "science_download"]], "pypath.internals": [[34, 0, 0, "-", "input_formats"], [46, 0, 0, "-", "license"], [52, 0, 0, "-", "maps"], [53, 0, 0, "-", "resource"]], "pypath.internals.input_formats": [[35, 1, 1, "", "ArrayMapping"], [36, 1, 1, "", "BiomartMapping"], [37, 1, 1, "", "FileMapping"], [38, 1, 1, "", "MappingInput"], [39, 1, 1, "", "NetworkInput"], [40, 1, 1, "", "PickleMapping"], [41, 1, 1, "", "ProMapping"], [42, 1, 1, "", "ReadList"], [43, 1, 1, "", "UnichemMapping"], [44, 1, 1, "", "UniprotListMapping"], [45, 1, 1, "", "UniprotMapping"]], "pypath.internals.input_formats.ArrayMapping": [[35, 2, 1, "", "__init__"]], "pypath.internals.input_formats.BiomartMapping": [[36, 2, 1, "", "__init__"]], "pypath.internals.input_formats.FileMapping": [[37, 2, 1, "", "__init__"]], "pypath.internals.input_formats.MappingInput": [[38, 2, 1, "", "__init__"]], "pypath.internals.input_formats.NetworkInput": [[39, 2, 1, "", "__init__"]], "pypath.internals.input_formats.PickleMapping": [[40, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ProMapping": [[41, 2, 1, "", "__init__"]], "pypath.internals.input_formats.ReadList": [[42, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UnichemMapping": [[43, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotListMapping": [[44, 2, 1, "", "__init__"]], "pypath.internals.input_formats.UniprotMapping": [[45, 2, 1, "", "__init__"], [45, 2, 1, "", "resource_id_type"]], "pypath.internals.license": [[47, 1, 1, "", "License"], [48, 1, 1, "", "LicenseAttrib"], [49, 1, 1, "", "LicenseFeature"], [50, 1, 1, "", "LicensePurpose"], [51, 1, 1, "", "LicenseSharing"]], "pypath.internals.license.License": [[47, 2, 1, "", "__init__"], [47, 2, 1, "", "enables"]], "pypath.internals.license.LicenseAttrib": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "check_level"], [48, 2, 1, "", "int_to_level"], [48, 2, 1, "", "level_to_int"], [48, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseFeature": [[49, 2, 1, "", "__init__"], [49, 2, 1, "", "check_level"], [49, 2, 1, "", "int_to_level"], [49, 2, 1, "", "level_to_int"], [49, 2, 1, "", "to_int"]], "pypath.internals.license.LicensePurpose": [[50, 2, 1, "", "__init__"], [50, 2, 1, "", "check_level"], [50, 2, 1, "", "int_to_level"], [50, 2, 1, "", "level_to_int"], [50, 2, 1, "", "to_int"]], "pypath.internals.license.LicenseSharing": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "check_level"], [51, 2, 1, "", "int_to_level"], [51, 2, 1, "", "level_to_int"], [51, 2, 1, "", "to_int"]], "pypath.internals.resource": [[54, 1, 1, "", "AbstractResource"], [55, 1, 1, "", "EnzymeSubstrateResource"], [56, 1, 1, "", "EnzymeSubstrateResourceKey"], [57, 1, 1, "", "NetworkResource"], [58, 1, 1, "", "NetworkResourceKey"], [59, 1, 1, "", "ResourceAttributes"]], "pypath.internals.resource.AbstractResource": [[54, 2, 1, "", "__init__"], [54, 2, 1, "", "load_data"], [54, 2, 1, "", "process"], [54, 2, 1, "", "set_method"]], "pypath.internals.resource.EnzymeSubstrateResource": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "get_via"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[56, 2, 1, "", "__init__"], [56, 2, 1, "", "count"], [56, 4, 1, "", "data_type"], [56, 2, 1, "", "index"], [56, 4, 1, "", "name"], [56, 4, 1, "", "via"]], "pypath.internals.resource.NetworkResource": [[57, 2, 1, "", "__init__"]], "pypath.internals.resource.NetworkResourceKey": [[58, 2, 1, "", "__init__"], [58, 2, 1, "", "count"], [58, 4, 1, "", "data_model"], [58, 4, 1, "", "data_type"], [58, 2, 1, "", "index"], [58, 4, 1, "", "interaction_type"], [58, 5, 1, "", "label"], [58, 5, 1, "", "last"], [58, 4, 1, "", "name"], [58, 4, 1, "", "via"]], "pypath.internals.resource.ResourceAttributes": [[59, 2, 1, "", "__init__"]], "pypath.legacy": [[61, 0, 0, "-", "db_categories"]], "pypath.legacy.db_categories": [[62, 3, 1, "", "get_categories"], [63, 3, 1, "", "get_category"]], "pypath.resources": [[66, 0, 0, "-", "controller"], [68, 0, 0, "-", "data"], [69, 3, 1, "", "get_controller"], [70, 0, 0, "-", "licenses"]], "pypath.resources.controller": [[67, 1, 1, "", "ResourceController"]], "pypath.resources.controller.ResourceController": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "update"]], "pypath.resources.licenses": [[71, 1, 1, "", "Licenses"]], "pypath.resources.licenses.Licenses": [[71, 2, 1, "", "__init__"]], "pypath.share": [[73, 0, 0, "-", "cache"], [76, 0, 0, "-", "common"], [168, 0, 0, "-", "constants"], [169, 0, 0, "-", "curl"], [186, 0, 0, "-", "log"], [189, 0, 0, "-", "progress"], [191, 0, 0, "-", "session"], [197, 0, 0, "-", "settings"]], "pypath.share.cache": [[74, 3, 1, "", "cache_item"], [75, 3, 1, "", "get_cachedir"]], "pypath.share.common": [[77, 3, 1, "", "add_to_list"], [78, 3, 1, "", "add_to_set"], [79, 3, 1, "", "at_least_in"], [80, 3, 1, "", "clean_dict"], [81, 3, 1, "", "combine_attrs"], [82, 3, 1, "", "console"], [83, 3, 1, "", "decode"], [84, 3, 1, "", "del_empty"], [85, 3, 1, "", "df_memory_usage"], [86, 3, 1, "", "dict_collapse_keys"], [87, 3, 1, "", "dict_counts"], [88, 3, 1, "", "dict_diff"], [89, 3, 1, "", "dict_expand_keys"], [90, 3, 1, "", "dict_percent"], [91, 3, 1, "", "dict_set_path"], [92, 3, 1, "", "dict_set_percent"], [93, 3, 1, "", "dict_str"], [94, 3, 1, "", "dict_subtotals"], [95, 3, 1, "", "dict_sym_diff"], [96, 3, 1, "", "dict_union"], [97, 3, 1, "", "eq"], [98, 3, 1, "", "filtr"], [99, 3, 1, "", "first"], [100, 3, 1, "", "flat_list"], [101, 3, 1, "", "float_or_nan"], [102, 3, 1, "", "gen_session_id"], [103, 3, 1, "", "get"], [104, 3, 1, "", "get_args"], [105, 3, 1, "", "is_float"], [106, 3, 1, "", "is_int"], [107, 3, 1, "", "is_str"], [108, 3, 1, "", "jaccard_index"], [109, 3, 1, "", "join_dicts"], [110, 3, 1, "", "latex_table"], [111, 3, 1, "", "match"], [112, 3, 1, "", "maybe_in_dict"], [113, 3, 1, "", "md5"], [114, 3, 1, "", "merge_dicts"], [115, 3, 1, "", "n_shared_elements"], [116, 3, 1, "", "n_shared_foreach"], [117, 3, 1, "", "n_shared_total"], [118, 3, 1, "", "n_shared_unique_foreach"], [119, 3, 1, "", "n_unique_elements"], [120, 3, 1, "", "n_unique_foreach"], [121, 3, 1, "", "n_unique_total"], [122, 3, 1, "", "negate"], [123, 3, 1, "", "none_or_len"], [124, 3, 1, "", "paginate"], [125, 3, 1, "", "prefix"], [126, 3, 1, "", "print_table"], [127, 3, 1, "", "re_safe_groups"], [128, 3, 1, "", "remove_prefix"], [129, 3, 1, "", "rotate"], [130, 3, 1, "", "sets_to_sorted_lists"], [131, 3, 1, "", "sfirst"], [132, 3, 1, "", "shared_elements"], [133, 3, 1, "", "shared_foreach"], [134, 3, 1, "", "shared_total"], [135, 3, 1, "", "shared_unique"], [136, 3, 1, "", "shared_unique_foreach"], [137, 3, 1, "", "shared_unique_total"], [138, 1, 1, "", "silent"], [139, 3, 1, "", "simpson_index"], [140, 3, 1, "", "simpson_index_counts"], [141, 3, 1, "", "something"], [142, 3, 1, "", "sorensen_index"], [143, 3, 1, "", "suffix"], [144, 3, 1, "", "sum_dicts"], [145, 3, 1, "", "swap_dict"], [146, 3, 1, "", "swap_dict_simple"], [147, 3, 1, "", "swap_suffix"], [148, 3, 1, "", "table_add_row_numbers"], [149, 3, 1, "", "table_format"], [150, 3, 1, "", "table_textwrap"], [151, 3, 1, "", "to_list"], [152, 3, 1, "", "to_set"], [153, 3, 1, "", "try_bool"], [154, 3, 1, "", "try_float"], [155, 3, 1, "", "tsv_table"], [156, 3, 1, "", "uniq_list"], [157, 3, 1, "", "uniq_list1"], [158, 3, 1, "", "uniq_list2"], [159, 3, 1, "", "uniq_ord_list"], [160, 3, 1, "", "unique_elements"], [161, 3, 1, "", "unique_foreach"], [162, 3, 1, "", "unique_list"], [163, 3, 1, "", "unique_total"], [164, 3, 1, "", "upper0"], [165, 3, 1, "", "values"], [166, 3, 1, "", "wcl"], [167, 3, 1, "", "wrap_truncate"]], "pypath.share.common.silent": [[138, 2, 1, "", "__init__"]], "pypath.share.curl": [[170, 1, 1, "", "Curl"], [171, 1, 1, "", "FileOpener"], [172, 1, 1, "", "RemoteFile"], [173, 1, 1, "", "cache_delete_off"], [174, 1, 1, "", "cache_delete_on"], [175, 1, 1, "", "cache_off"], [176, 1, 1, "", "cache_on"], [177, 1, 1, "", "cache_print_off"], [178, 1, 1, "", "cache_print_on"], [179, 1, 1, "", "debug_off"], [180, 1, 1, "", "debug_on"], [181, 1, 1, "", "dryrun_off"], [182, 1, 1, "", "dryrun_on"], [183, 3, 1, "", "is_url"], [184, 1, 1, "", "preserve_off"], [185, 1, 1, "", "preserve_on"]], "pypath.share.curl.Curl": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "close"], [170, 2, 1, "", "construct_binary_data"], [170, 2, 1, "", "extract"], [170, 2, 1, "", "is_quoted"], [170, 2, 1, "", "open"], [170, 2, 1, "", "open_tgz"], [170, 2, 1, "", "replace_forbidden"], [170, 2, 1, "", "set_binary_data"], [170, 2, 1, "", "url_fix"]], "pypath.share.curl.FileOpener": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "extract"], [171, 2, 1, "", "open"], [171, 2, 1, "", "open_tgz"]], "pypath.share.curl.RemoteFile": [[172, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_off": [[173, 2, 1, "", "__init__"]], "pypath.share.curl.cache_delete_on": [[174, 2, 1, "", "__init__"]], "pypath.share.curl.cache_off": [[175, 2, 1, "", "__init__"]], "pypath.share.curl.cache_on": [[176, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_off": [[177, 2, 1, "", "__init__"]], "pypath.share.curl.cache_print_on": [[178, 2, 1, "", "__init__"]], "pypath.share.curl.debug_off": [[179, 2, 1, "", "__init__"]], "pypath.share.curl.debug_on": [[180, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_off": [[181, 2, 1, "", "__init__"]], "pypath.share.curl.dryrun_on": [[182, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_off": [[184, 2, 1, "", "__init__"]], "pypath.share.curl.preserve_on": [[185, 2, 1, "", "__init__"]], "pypath.share.log": [[187, 1, 1, "", "Logger"], [188, 3, 1, "", "new_logger"]], "pypath.share.log.Logger": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "browse"], [187, 2, 1, "", "close_logfile"], [187, 2, 1, "", "console"], [187, 2, 1, "", "flush"], [187, 2, 1, "", "get_logdir"], [187, 2, 1, "", "label_message"], [187, 2, 1, "", "msg"], [187, 2, 1, "", "open_logfile"], [187, 2, 1, "", "strftime"], [187, 2, 1, "", "timestamp"], [187, 2, 1, "", "timestamp_message"]], "pypath.share.progress": [[190, 1, 1, "", "Progress"]], "pypath.share.progress.Progress": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "get_desc"], [190, 2, 1, "", "init_tqdm"], [190, 2, 1, "", "set_done"], [190, 2, 1, "", "set_status"], [190, 2, 1, "", "set_total"], [190, 2, 1, "", "step"], [190, 2, 1, "", "terminate"]], "pypath.share.session": [[192, 1, 1, "", "Logger"], [193, 1, 1, "", "Session"], [194, 3, 1, "", "get_log"], [195, 3, 1, "", "get_session"], [196, 3, 1, "", "new_session"]], "pypath.share.session.Logger": [[192, 2, 1, "", "__init__"]], "pypath.share.session.Session": [[193, 2, 1, "", "__init__"], [193, 2, 1, "", "gen_session_id"], [193, 2, 1, "", "start_logger"]], "pypath.share.settings": [[198, 1, 1, "", "Settings"], [199, 3, 1, "", "context"], [200, 3, 1, "", "get"], [201, 3, 1, "", "setup"]], "pypath.share.settings.Settings": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "context"], [198, 2, 1, "", "get"], [198, 2, 1, "", "get_default"], [198, 2, 1, "", "reset"], [198, 2, 1, "", "reset_all"], [198, 2, 1, "", "setup"]], "pypath.utils": [[203, 0, 0, "-", "proteomicsdb"], [205, 0, 0, "-", "residues"]], "pypath.utils.proteomicsdb": [[204, 1, 1, "", "ProteomicsDB"]], "pypath.utils.proteomicsdb.ProteomicsDB": [[204, 2, 1, "", "__init__"], [204, 2, 1, "", "get_expression"], [204, 2, 1, "", "get_pieces"], [204, 2, 1, "", "get_proteins"], [204, 2, 1, "", "get_tissues"], [204, 2, 1, "", "pandas_matrix"], [204, 2, 1, "", "query"], [204, 2, 1, "", "tissues_x_proteins"]], "pypath.utils.residues": [[206, 1, 1, "", "ResidueMapper"]], "pypath.utils.residues.ResidueMapper": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "clean"]], "pypath.visual": [[208, 0, 0, "-", "drawing"], [211, 0, 0, "-", "igraph_drawing"]], "pypath.visual.drawing": [[209, 1, 1, "", "InterSet"], [210, 1, 1, "", "Plot"]], "pypath.visual.drawing.InterSet": [[209, 2, 1, "", "__init__"], [209, 2, 1, "", "draw"]], "pypath.visual.drawing.Plot": [[210, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing": [[212, 1, 1, "", "AbstractCairoGraphDrawer"], [213, 4, 1, "", "ArrowEdgeDrawer"], [214, 1, 1, "", "DefaultGraphDrawerFFsupport"], [215, 4, 1, "", "DefaultVertexDrawer"], [216, 4, 1, "", "TextDrawer"], [217, 0, 0, "-", "edge"], [224, 0, 0, "-", "vertex"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[212, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[214, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.edge": [[218, 1, 1, "", "AbstractEdgeDrawer"], [219, 1, 1, "", "AlphaVaryingEdgeDrawer"], [220, 1, 1, "", "ArrowEdgeDrawer"], [221, 1, 1, "", "DarkToLightEdgeDrawer"], [222, 1, 1, "", "LightToDarkEdgeDrawer"], [223, 1, 1, "", "TaperedEdgeDrawer"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "draw_directed_edge"], [218, 2, 1, "", "draw_loop_edge"], [218, 2, 1, "", "draw_undirected_edge"], [218, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[219, 2, 1, "", "__init__"], [219, 2, 1, "", "draw_directed_edge"], [219, 2, 1, "", "draw_loop_edge"], [219, 2, 1, "", "draw_undirected_edge"], [219, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[220, 2, 1, "", "__init__"], [220, 2, 1, "", "draw_directed_edge"], [220, 2, 1, "", "draw_loop_edge"], [220, 2, 1, "", "draw_undirected_edge"], [220, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[221, 2, 1, "", "__init__"], [221, 2, 1, "", "draw_directed_edge"], [221, 2, 1, "", "draw_loop_edge"], [221, 2, 1, "", "draw_undirected_edge"], [221, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[222, 2, 1, "", "__init__"], [222, 2, 1, "", "draw_directed_edge"], [222, 2, 1, "", "draw_loop_edge"], [222, 2, 1, "", "draw_undirected_edge"], [222, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[223, 2, 1, "", "__init__"], [223, 2, 1, "", "draw_directed_edge"], [223, 2, 1, "", "draw_loop_edge"], [223, 2, 1, "", "draw_undirected_edge"], [223, 2, 1, "", "get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[225, 1, 1, "", "AbstractCairoDrawer"], [226, 1, 1, "", "AbstractCairoVertexDrawer"], [227, 1, 1, "", "AbstractDrawer"], [228, 1, 1, "", "AbstractVertexDrawer"], [229, 1, 1, "", "DefaultVertexDrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[225, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[226, 2, 1, "", "__init__"], [226, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[227, 2, 1, "", "__init__"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[228, 2, 1, "", "__init__"], [228, 2, 1, "", "draw"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[229, 2, 1, "", "__init__"], [229, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"pypath": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232], "core": [1, 2, 3, 4, 5], "attr": [2, 3], "attributehandl": 3, "common": [4, 5, 12, 13, 14, 15, 16, 17, 18, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 232], "filter_network_df": 5, "data": [6, 68, 232], "disclaim": 7, "info": [8, 232], "input": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 232], "cell": [10, 11], "cell_supplementari": 11, "csv_sep_chang": 13, "glom_field": 14, "json_extract": 15, "json_read": 16, "read_tabl": 17, "read_xl": 18, "credenti": [19, 20], "ebi": [21, 22], "ebi_rest": 22, "embopress": [23, 24], "embopress_supplementari": 24, "get_method": 25, "main": 26, "mitab": [27, 28, 29], "mitab_field_list": 28, "mitab_field_uniprot": 29, "rdata": 30, "scienc": [31, 32], "science_download": 32, "intern": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "input_format": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "arraymap": 35, "biomartmap": 36, "filemap": 37, "mappinginput": 38, "networkinput": 39, "picklemap": 40, "promap": 41, "readlist": 42, "unichemmap": 43, "uniprotlistmap": 44, "uniprotmap": 45, "licens": [46, 47, 48, 49, 50, 51, 70, 71, 232], "licenseattrib": 48, "licensefeatur": 49, "licensepurpos": 50, "licenseshar": 51, "map": 52, "resourc": [53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 71, 232], "abstractresourc": 54, "enzymesubstrateresourc": 55, "enzymesubstrateresourcekei": 56, "networkresourc": 57, "networkresourcekei": 58, "resourceattribut": 59, "legaci": [60, 61, 62, 63, 232], "db_categori": [61, 62, 63], "get_categori": [62, 63], "log": [64, 186, 187, 188, 232], "control": [66, 67], "resourcecontrol": 67, "get_control": 69, "share": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "cach": [73, 74, 75, 232], "cache_item": 74, "get_cachedir": 75, "add_to_list": 77, "add_to_set": 78, "at_least_in": 79, "clean_dict": 80, "combine_attr": 81, "consol": [82, 232], "decod": 83, "del_empti": 84, "df_memory_usag": 85, "dict_collapse_kei": 86, "dict_count": 87, "dict_diff": 88, "dict_expand_kei": 89, "dict_perc": 90, "dict_set_path": 91, "dict_set_perc": 92, "dict_str": 93, "dict_subtot": 94, "dict_sym_diff": 95, "dict_union": 96, "eq": 97, "filtr": 98, "first": 99, "flat_list": 100, "float_or_nan": 101, "gen_session_id": 102, "get": [103, 200, 231], "get_arg": 104, "is_float": 105, "is_int": 106, "is_str": 107, "jaccard_index": 108, "join_dict": 109, "latex_t": 110, "match": 111, "maybe_in_dict": 112, "md5": 113, "merge_dict": 114, "n_shared_el": 115, "n_shared_foreach": 116, "n_shared_tot": 117, "n_shared_unique_foreach": 118, "n_unique_el": 119, "n_unique_foreach": 120, "n_unique_tot": 121, "negat": 122, "none_or_len": 123, "pagin": 124, "prefix": 125, "print_tabl": 126, "re_safe_group": 127, "remove_prefix": 128, "rotat": 129, "sets_to_sorted_list": 130, "sfirst": 131, "shared_el": 132, "shared_foreach": 133, "shared_tot": 134, "shared_uniqu": 135, "shared_unique_foreach": 136, "shared_unique_tot": 137, "silent": 138, "simpson_index": 139, "simpson_index_count": 140, "someth": 141, "sorensen_index": 142, "suffix": 143, "sum_dict": 144, "swap_dict": 145, "swap_dict_simpl": 146, "swap_suffix": 147, "table_add_row_numb": 148, "table_format": 149, "table_textwrap": 150, "to_list": 151, "to_set": 152, "try_bool": 153, "try_float": 154, "tsv_tabl": 155, "uniq_list": 156, "uniq_list1": 157, "uniq_list2": 158, "uniq_ord_list": 159, "unique_el": 160, "unique_foreach": 161, "unique_list": 162, "unique_tot": 163, "upper0": 164, "valu": 165, "wcl": 166, "wrap_trunc": 167, "constant": 168, "curl": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 232], "fileopen": 171, "remotefil": 172, "cache_delete_off": 173, "cache_delete_on": 174, "cache_off": 175, "cache_on": 176, "cache_print_off": 177, "cache_print_on": 178, "debug_off": 179, "debug_on": 180, "dryrun_off": 181, "dryrun_on": 182, "is_url": 183, "preserve_off": 184, "preserve_on": 185, "logger": [187, 192, 232], "new_logg": 188, "progress": [189, 190], "session": [191, 192, 193, 194, 195, 196, 232], "get_log": 194, "get_sess": 195, "new_sess": 196, "set": [197, 198, 199, 200, 201], "context": 199, "setup": 201, "util": [202, 203, 204, 205, 206, 232], "proteomicsdb": [203, 204], "residu": [205, 206], "residuemapp": 206, "visual": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "draw": [208, 209, 210], "interset": 209, "plot": [210, 232], "igraph_draw": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "abstractcairographdraw": 212, "arrowedgedraw": [213, 220], "defaultgraphdrawerffsupport": 214, "defaultvertexdraw": [215, 229], "textdraw": 216, "edg": [217, 218, 219, 220, 221, 222, 223, 232], "abstractedgedraw": 218, "alphavaryingedgedraw": 219, "darktolightedgedraw": 221, "lighttodarkedgedraw": 222, "taperededgedraw": 223, "vertex": [224, 225, 226, 227, 228, 229], "abstractcairodraw": 225, "abstractcairovertexdraw": 226, "abstractdraw": 227, "abstractvertexdraw": 228, "content": [230, 232], "welcom": 231, "omnipath": [231, 232], "do": [231, 232], "you": [231, 232], "need": 231, "instal": 231, "doc": 231, "help": 231, "featur": 231, "integr": 231, "databas": [231, 232], "manag": [231, 232], "further": 231, "modul": [231, 232], "id": [231, 232], "convers": 231, "homologi": [231, 232], "translat": [231, 232], "faq": 231, "contact": 231, "impressum": 231, "histori": [231, 232, 234], "releas": [231, 234], "The": 232, "book": 232, "introduct": 232, "build": 232, "load": 232, "save": 232, "app": 232, "built": 232, "definit": 232, "network": [232, 235], "strictli": 232, "literatur": 232, "curat": 232, "extra": 232, "activ": 232, "flow": 232, "enzym": [232, 235], "substrat": [232, 235], "ligand": 232, "receptor": 232, "interact": [232, 235], "transcript": 232, "regul": 232, "from": 232, "dorothea": 232, "other": 232, "mirna": 232, "post": 232, "lncrna": 232, "mrna": 232, "small": 232, "molecul": 232, "protein": 232, "relationship": 232, "complex": [232, 235], "annot": [232, 235], "inter": [232, 235], "cellular": [232, 235], "commun": [232, 235], "role": [232, 235], "directli": 232, "origin": 232, "download": 232, "custom": 232, "failur": 232, "corrupt": 232, "issu": 232, "look": 232, "debug": 232, "timeout": 232, "access": 232, "inspect": 232, "object": 232, "i": 232, "fail": 232, "onli": 232, "read": 232, "tl": 232, "ssl": 232, "http": 232, "error": 232, "inform": 232, "certain": 232, "dataset": [232, 235], "which": 232, "ar": 232, "pre": 232, "defin": 232, "panda": 232, "datafram": 232, "identifi": 232, "tabl": 232, "dictionari": 232, "frame": 232, "taxonomi": 232, "ncbi": 232, "scientif": 232, "name": 232, "organ": 232, "uniprot": 232, "all": 232, "one": 232, "format": 232, "valid": 232, "singl": 232, "datasheet": 232, "record": 232, "api": 232, "process": 232, "sanit": 232, "sequenc": 232, "full": 232, "select": 232, "signal": 232, "an": 232, "intercellular": 232, "quantit": 232, "overview": 232, "intercel": 232, "brows": 232, "categori": 232, "gene": 232, "ontologi": 232, "pickl": 232, "messag": 232, "basic": 232, "about": 232, "file": 232, "disabl": 232, "write": 232, "send": 232, "connect": 232, "class": 232, "bel": 232, "export": 232, "cellphonedb": 232, "igraph": 232, "base": 232, "just": 232, "want": 232, "quickli": 232, "plai": 232, "around": 232, "how": [232, 233], "ani": 232, "creat": 232, "2": [232, 234], "test": 232, "structur": 232, "direct": 232, "sign": 232, "node": 232, "queri": [232, 235], "our": 232, "without": 232, "causal": 232, "refer": [232, 233], "navig": 233, "0": 234, "1": 234, "3": 234, "4": 234, "5": 234, "32": 234, "6": 234, "31": 234, "7": 234, "74": 234, "93": 234, "110": 234, "8": 234, "9": 234, "10": 234, "11": 234, "12": 234, "13": 234, "14": 234, "upcom": 234, "webservic": 235, "type": 235, "mous": 235, "rat": 235, "exampl": 235, "molecular": 235, "explor": 235, "possibl": 235, "paramet": 235}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx_last_updated_by_git": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "pypath.core.attrs.AttributeHandler": [[3, "pypath-core-attrs-attributehandler"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "pypath.core.common.filter_network_df": [[5, "pypath-core-common-filter-network-df"]], "pypath.data": [[6, "module-pypath.data"]], "pypath.disclaimer": [[7, "pypath-disclaimer"]], "pypath.info": [[8, "pypath-info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.cell": [[10, "module-pypath.inputs.cell"]], "pypath.inputs.cell.cell_supplementary": [[11, "pypath-inputs-cell-cell-supplementary"]], "pypath.inputs.common": [[12, "module-pypath.inputs.common"]], "pypath.inputs.common.csv_sep_change": [[13, "pypath-inputs-common-csv-sep-change"]], "pypath.inputs.common.glom_fields": [[14, "pypath-inputs-common-glom-fields"]], "pypath.inputs.common.json_extract": [[15, "pypath-inputs-common-json-extract"]], "pypath.inputs.common.json_read": [[16, "pypath-inputs-common-json-read"]], "pypath.inputs.common.read_table": [[17, "pypath-inputs-common-read-table"]], "pypath.inputs.common.read_xls": [[18, "pypath-inputs-common-read-xls"]], "pypath.inputs.credentials": [[19, "module-pypath.inputs.credentials"]], "pypath.inputs.credentials.credentials": [[20, "pypath-inputs-credentials-credentials"]], "pypath.inputs.ebi": [[21, "module-pypath.inputs.ebi"]], "pypath.inputs.ebi.ebi_rest": [[22, "pypath-inputs-ebi-ebi-rest"]], "pypath.inputs.embopress": [[23, "module-pypath.inputs.embopress"]], "pypath.inputs.embopress.embopress_supplementary": [[24, "pypath-inputs-embopress-embopress-supplementary"]], "pypath.inputs.get_method": [[25, "pypath-inputs-get-method"]], "pypath.inputs.main": [[26, "module-pypath.inputs.main"]], "pypath.inputs.mitab": [[27, "module-pypath.inputs.mitab"]], "pypath.inputs.mitab.mitab_field_list": [[28, "pypath-inputs-mitab-mitab-field-list"]], "pypath.inputs.mitab.mitab_field_uniprot": [[29, "pypath-inputs-mitab-mitab-field-uniprot"]], "pypath.inputs.rdata": [[30, "module-pypath.inputs.rdata"]], "pypath.inputs.science": [[31, "module-pypath.inputs.science"]], "pypath.inputs.science.science_download": [[32, "pypath-inputs-science-science-download"]], "pypath.internals": [[33, "module-pypath.internals"]], "pypath.internals.input_formats": [[34, "module-pypath.internals.input_formats"]], "pypath.internals.input_formats.ArrayMapping": [[35, "pypath-internals-input-formats-arraymapping"]], "pypath.internals.input_formats.BiomartMapping": [[36, "pypath-internals-input-formats-biomartmapping"]], "pypath.internals.input_formats.FileMapping": [[37, "pypath-internals-input-formats-filemapping"]], "pypath.internals.input_formats.MappingInput": [[38, "pypath-internals-input-formats-mappinginput"]], "pypath.internals.input_formats.NetworkInput": [[39, "pypath-internals-input-formats-networkinput"]], "pypath.internals.input_formats.PickleMapping": [[40, "pypath-internals-input-formats-picklemapping"]], "pypath.internals.input_formats.ProMapping": [[41, "pypath-internals-input-formats-promapping"]], "pypath.internals.input_formats.ReadList": [[42, "pypath-internals-input-formats-readlist"]], "pypath.internals.input_formats.UnichemMapping": [[43, "pypath-internals-input-formats-unichemmapping"]], "pypath.internals.input_formats.UniprotListMapping": [[44, "pypath-internals-input-formats-uniprotlistmapping"]], "pypath.internals.input_formats.UniprotMapping": [[45, "pypath-internals-input-formats-uniprotmapping"]], "pypath.internals.license": [[46, "module-pypath.internals.license"]], "pypath.internals.license.License": [[47, "pypath-internals-license-license"]], "pypath.internals.license.LicenseAttrib": [[48, "pypath-internals-license-licenseattrib"]], "pypath.internals.license.LicenseFeature": [[49, "pypath-internals-license-licensefeature"]], "pypath.internals.license.LicensePurpose": [[50, "pypath-internals-license-licensepurpose"]], "pypath.internals.license.LicenseSharing": [[51, "pypath-internals-license-licensesharing"]], "pypath.internals.maps": [[52, "module-pypath.internals.maps"]], "pypath.internals.resource": [[53, "module-pypath.internals.resource"]], "pypath.internals.resource.AbstractResource": [[54, "pypath-internals-resource-abstractresource"]], "pypath.internals.resource.EnzymeSubstrateResource": [[55, "pypath-internals-resource-enzymesubstrateresource"]], "pypath.internals.resource.EnzymeSubstrateResourceKey": [[56, "pypath-internals-resource-enzymesubstrateresourcekey"]], "pypath.internals.resource.NetworkResource": [[57, "pypath-internals-resource-networkresource"]], "pypath.internals.resource.NetworkResourceKey": [[58, "pypath-internals-resource-networkresourcekey"]], "pypath.internals.resource.ResourceAttributes": [[59, "pypath-internals-resource-resourceattributes"]], "pypath.legacy": [[60, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[61, "module-pypath.legacy.db_categories"]], "pypath.legacy.db_categories.get_categories": [[62, "pypath-legacy-db-categories-get-categories"]], "pypath.legacy.db_categories.get_category": [[63, "pypath-legacy-db-categories-get-category"]], "pypath.log": [[64, "pypath-log"]], "pypath.resources": [[65, "module-pypath.resources"]], "pypath.resources.controller": [[66, "module-pypath.resources.controller"]], "pypath.resources.controller.ResourceController": [[67, "pypath-resources-controller-resourcecontroller"]], "pypath.resources.data": [[68, "module-pypath.resources.data"]], "pypath.resources.get_controller": [[69, "pypath-resources-get-controller"]], "pypath.resources.licenses": [[70, "module-pypath.resources.licenses"]], "pypath.resources.licenses.Licenses": [[71, "pypath-resources-licenses-licenses"]], "pypath.share": [[72, "module-pypath.share"]], "pypath.share.cache": [[73, "module-pypath.share.cache"]], "pypath.share.cache.cache_item": [[74, "pypath-share-cache-cache-item"]], "pypath.share.cache.get_cachedir": [[75, "pypath-share-cache-get-cachedir"]], "pypath.share.common": [[76, "module-pypath.share.common"]], "pypath.share.common.add_to_list": [[77, "pypath-share-common-add-to-list"]], "pypath.share.common.add_to_set": [[78, "pypath-share-common-add-to-set"]], "pypath.share.common.at_least_in": [[79, "pypath-share-common-at-least-in"]], "pypath.share.common.clean_dict": [[80, "pypath-share-common-clean-dict"]], "pypath.share.common.combine_attrs": [[81, "pypath-share-common-combine-attrs"]], "pypath.share.common.console": [[82, "pypath-share-common-console"]], "pypath.share.common.decode": [[83, "pypath-share-common-decode"]], "pypath.share.common.del_empty": [[84, "pypath-share-common-del-empty"]], "pypath.share.common.df_memory_usage": [[85, "pypath-share-common-df-memory-usage"]], "pypath.share.common.dict_collapse_keys": [[86, "pypath-share-common-dict-collapse-keys"]], "pypath.share.common.dict_counts": [[87, "pypath-share-common-dict-counts"]], "pypath.share.common.dict_diff": [[88, "pypath-share-common-dict-diff"]], "pypath.share.common.dict_expand_keys": [[89, "pypath-share-common-dict-expand-keys"]], "pypath.share.common.dict_percent": [[90, "pypath-share-common-dict-percent"]], "pypath.share.common.dict_set_path": [[91, "pypath-share-common-dict-set-path"]], "pypath.share.common.dict_set_percent": [[92, "pypath-share-common-dict-set-percent"]], "pypath.share.common.dict_str": [[93, "pypath-share-common-dict-str"]], "pypath.share.common.dict_subtotals": [[94, "pypath-share-common-dict-subtotals"]], "pypath.share.common.dict_sym_diff": [[95, "pypath-share-common-dict-sym-diff"]], "pypath.share.common.dict_union": [[96, "pypath-share-common-dict-union"]], "pypath.share.common.eq": [[97, "pypath-share-common-eq"]], "pypath.share.common.filtr": [[98, "pypath-share-common-filtr"]], "pypath.share.common.first": [[99, "pypath-share-common-first"]], "pypath.share.common.flat_list": [[100, "pypath-share-common-flat-list"]], "pypath.share.common.float_or_nan": [[101, "pypath-share-common-float-or-nan"]], "pypath.share.common.gen_session_id": [[102, "pypath-share-common-gen-session-id"]], "pypath.share.common.get": [[103, "pypath-share-common-get"]], "pypath.share.common.get_args": [[104, "pypath-share-common-get-args"]], "pypath.share.common.is_float": [[105, "pypath-share-common-is-float"]], "pypath.share.common.is_int": [[106, "pypath-share-common-is-int"]], "pypath.share.common.is_str": [[107, "pypath-share-common-is-str"]], "pypath.share.common.jaccard_index": [[108, "pypath-share-common-jaccard-index"]], "pypath.share.common.join_dicts": [[109, "pypath-share-common-join-dicts"]], "pypath.share.common.latex_table": [[110, "pypath-share-common-latex-table"]], "pypath.share.common.match": [[111, "pypath-share-common-match"]], "pypath.share.common.maybe_in_dict": [[112, "pypath-share-common-maybe-in-dict"]], "pypath.share.common.md5": [[113, "pypath-share-common-md5"]], "pypath.share.common.merge_dicts": [[114, "pypath-share-common-merge-dicts"]], "pypath.share.common.n_shared_elements": [[115, "pypath-share-common-n-shared-elements"]], "pypath.share.common.n_shared_foreach": [[116, "pypath-share-common-n-shared-foreach"]], "pypath.share.common.n_shared_total": [[117, "pypath-share-common-n-shared-total"]], "pypath.share.common.n_shared_unique_foreach": [[118, "pypath-share-common-n-shared-unique-foreach"]], "pypath.share.common.n_unique_elements": [[119, "pypath-share-common-n-unique-elements"]], "pypath.share.common.n_unique_foreach": [[120, "pypath-share-common-n-unique-foreach"]], "pypath.share.common.n_unique_total": [[121, "pypath-share-common-n-unique-total"]], "pypath.share.common.negate": [[122, "pypath-share-common-negate"]], "pypath.share.common.none_or_len": [[123, "pypath-share-common-none-or-len"]], "pypath.share.common.paginate": [[124, "pypath-share-common-paginate"]], "pypath.share.common.prefix": [[125, "pypath-share-common-prefix"]], "pypath.share.common.print_table": [[126, "pypath-share-common-print-table"]], "pypath.share.common.re_safe_groups": [[127, "pypath-share-common-re-safe-groups"]], "pypath.share.common.remove_prefix": [[128, "pypath-share-common-remove-prefix"]], "pypath.share.common.rotate": [[129, "pypath-share-common-rotate"]], "pypath.share.common.sets_to_sorted_lists": [[130, "pypath-share-common-sets-to-sorted-lists"]], "pypath.share.common.sfirst": [[131, "pypath-share-common-sfirst"]], "pypath.share.common.shared_elements": [[132, "pypath-share-common-shared-elements"]], "pypath.share.common.shared_foreach": [[133, "pypath-share-common-shared-foreach"]], "pypath.share.common.shared_total": [[134, "pypath-share-common-shared-total"]], "pypath.share.common.shared_unique": [[135, "pypath-share-common-shared-unique"]], "pypath.share.common.shared_unique_foreach": [[136, "pypath-share-common-shared-unique-foreach"]], "pypath.share.common.shared_unique_total": [[137, "pypath-share-common-shared-unique-total"]], "pypath.share.common.silent": [[138, "pypath-share-common-silent"]], "pypath.share.common.simpson_index": [[139, "pypath-share-common-simpson-index"]], "pypath.share.common.simpson_index_counts": [[140, "pypath-share-common-simpson-index-counts"]], "pypath.share.common.something": [[141, "pypath-share-common-something"]], "pypath.share.common.sorensen_index": [[142, "pypath-share-common-sorensen-index"]], "pypath.share.common.suffix": [[143, "pypath-share-common-suffix"]], "pypath.share.common.sum_dicts": [[144, "pypath-share-common-sum-dicts"]], "pypath.share.common.swap_dict": [[145, "pypath-share-common-swap-dict"]], "pypath.share.common.swap_dict_simple": [[146, "pypath-share-common-swap-dict-simple"]], "pypath.share.common.swap_suffix": [[147, "pypath-share-common-swap-suffix"]], "pypath.share.common.table_add_row_numbers": [[148, "pypath-share-common-table-add-row-numbers"]], "pypath.share.common.table_format": [[149, "pypath-share-common-table-format"]], "pypath.share.common.table_textwrap": [[150, "pypath-share-common-table-textwrap"]], "pypath.share.common.to_list": [[151, "pypath-share-common-to-list"]], "pypath.share.common.to_set": [[152, "pypath-share-common-to-set"]], "pypath.share.common.try_bool": [[153, "pypath-share-common-try-bool"]], "pypath.share.common.try_float": [[154, "pypath-share-common-try-float"]], "pypath.share.common.tsv_table": [[155, "pypath-share-common-tsv-table"]], "pypath.share.common.uniq_list": [[156, "pypath-share-common-uniq-list"]], "pypath.share.common.uniq_list1": [[157, "pypath-share-common-uniq-list1"]], "pypath.share.common.uniq_list2": [[158, "pypath-share-common-uniq-list2"]], "pypath.share.common.uniq_ord_list": [[159, "pypath-share-common-uniq-ord-list"]], "pypath.share.common.unique_elements": [[160, "pypath-share-common-unique-elements"]], "pypath.share.common.unique_foreach": [[161, "pypath-share-common-unique-foreach"]], "pypath.share.common.unique_list": [[162, "pypath-share-common-unique-list"]], "pypath.share.common.unique_total": [[163, "pypath-share-common-unique-total"]], "pypath.share.common.upper0": [[164, "pypath-share-common-upper0"]], "pypath.share.common.values": [[165, "pypath-share-common-values"]], "pypath.share.common.wcl": [[166, "pypath-share-common-wcl"]], "pypath.share.common.wrap_truncate": [[167, "pypath-share-common-wrap-truncate"]], "pypath.share.constants": [[168, "module-pypath.share.constants"]], "pypath.share.curl": [[169, "module-pypath.share.curl"]], "pypath.share.curl.Curl": [[170, "pypath-share-curl-curl"]], "pypath.share.curl.FileOpener": [[171, "pypath-share-curl-fileopener"]], "pypath.share.curl.RemoteFile": [[172, "pypath-share-curl-remotefile"]], "pypath.share.curl.cache_delete_off": [[173, "pypath-share-curl-cache-delete-off"]], "pypath.share.curl.cache_delete_on": [[174, "pypath-share-curl-cache-delete-on"]], "pypath.share.curl.cache_off": [[175, "pypath-share-curl-cache-off"]], "pypath.share.curl.cache_on": [[176, "pypath-share-curl-cache-on"]], "pypath.share.curl.cache_print_off": [[177, "pypath-share-curl-cache-print-off"]], "pypath.share.curl.cache_print_on": [[178, "pypath-share-curl-cache-print-on"]], "pypath.share.curl.debug_off": [[179, "pypath-share-curl-debug-off"]], "pypath.share.curl.debug_on": [[180, "pypath-share-curl-debug-on"]], "pypath.share.curl.dryrun_off": [[181, "pypath-share-curl-dryrun-off"]], "pypath.share.curl.dryrun_on": [[182, "pypath-share-curl-dryrun-on"]], "pypath.share.curl.is_url": [[183, "pypath-share-curl-is-url"]], "pypath.share.curl.preserve_off": [[184, "pypath-share-curl-preserve-off"]], "pypath.share.curl.preserve_on": [[185, "pypath-share-curl-preserve-on"]], "pypath.share.log": [[186, "module-pypath.share.log"]], "pypath.share.log.Logger": [[187, "pypath-share-log-logger"]], "pypath.share.log.new_logger": [[188, "pypath-share-log-new-logger"]], "pypath.share.progress": [[189, "module-pypath.share.progress"]], "pypath.share.progress.Progress": [[190, "pypath-share-progress-progress"]], "pypath.share.session": [[191, "module-pypath.share.session"]], "pypath.share.session.Logger": [[192, "pypath-share-session-logger"]], "pypath.share.session.Session": [[193, "pypath-share-session-session"]], "pypath.share.session.get_log": [[194, "pypath-share-session-get-log"]], "pypath.share.session.get_session": [[195, "pypath-share-session-get-session"]], "pypath.share.session.new_session": [[196, "pypath-share-session-new-session"]], "pypath.share.settings": [[197, "module-pypath.share.settings"]], "pypath.share.settings.Settings": [[198, "pypath-share-settings-settings"]], "pypath.share.settings.context": [[199, "pypath-share-settings-context"]], "pypath.share.settings.get": [[200, "pypath-share-settings-get"]], "pypath.share.settings.setup": [[201, "pypath-share-settings-setup"]], "pypath.utils": [[202, "module-pypath.utils"]], "pypath.utils.proteomicsdb": [[203, "module-pypath.utils.proteomicsdb"]], "pypath.utils.proteomicsdb.ProteomicsDB": [[204, "pypath-utils-proteomicsdb-proteomicsdb"]], "pypath.utils.residues": [[205, "module-pypath.utils.residues"]], "pypath.utils.residues.ResidueMapper": [[206, "pypath-utils-residues-residuemapper"]], "pypath.visual": [[207, "module-pypath.visual"]], "pypath.visual.drawing": [[208, "module-pypath.visual.drawing"]], "pypath.visual.drawing.InterSet": [[209, "pypath-visual-drawing-interset"]], "pypath.visual.drawing.Plot": [[210, "pypath-visual-drawing-plot"]], "pypath.visual.igraph_drawing": [[211, "module-pypath.visual.igraph_drawing"]], "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer": [[212, "pypath-visual-igraph-drawing-abstractcairographdrawer"]], "pypath.visual.igraph_drawing.ArrowEdgeDrawer": [[213, "pypath-visual-igraph-drawing-arrowedgedrawer"]], "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport": [[214, "pypath-visual-igraph-drawing-defaultgraphdrawerffsupport"]], "pypath.visual.igraph_drawing.DefaultVertexDrawer": [[215, "pypath-visual-igraph-drawing-defaultvertexdrawer"]], "pypath.visual.igraph_drawing.TextDrawer": [[216, "pypath-visual-igraph-drawing-textdrawer"]], "pypath.visual.igraph_drawing.edge": [[217, "module-pypath.visual.igraph_drawing.edge"]], "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer": [[218, "pypath-visual-igraph-drawing-edge-abstractedgedrawer"]], "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer": [[219, "pypath-visual-igraph-drawing-edge-alphavaryingedgedrawer"]], "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer": [[220, "pypath-visual-igraph-drawing-edge-arrowedgedrawer"]], "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer": [[221, "pypath-visual-igraph-drawing-edge-darktolightedgedrawer"]], "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer": [[222, "pypath-visual-igraph-drawing-edge-lighttodarkedgedrawer"]], "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer": [[223, "pypath-visual-igraph-drawing-edge-taperededgedrawer"]], "pypath.visual.igraph_drawing.vertex": [[224, "module-pypath.visual.igraph_drawing.vertex"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer": [[225, "pypath-visual-igraph-drawing-vertex-abstractcairodrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer": [[226, "pypath-visual-igraph-drawing-vertex-abstractcairovertexdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractDrawer": [[227, "pypath-visual-igraph-drawing-vertex-abstractdrawer"]], "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer": [[228, "pypath-visual-igraph-drawing-vertex-abstractvertexdrawer"]], "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer": [[229, "pypath-visual-igraph-drawing-vertex-defaultvertexdrawer"]], "Contents": [[230, "contents"]], "Welcome to pypath!": [[231, "welcome-to-pypath"]], "OmniPath": [[231, "omnipath"]], "Do you need pypath?": [[231, "do-you-need-pypath"]], "Installation": [[231, "installation"]], "Docs": [[231, "docs"]], "Get help": [[231, "get-help"]], "Features": [[231, "features"]], "Integrated databases": [[231, "integrated-databases"]], "Database management": [[231, "database-management"]], "Further modules in pypath": [[231, "further-modules-in-pypath"]], "ID conversion": [[231, "id-conversion"]], "Homology translation": [[231, "homology-translation"], [232, "Homology-translation"]], "FAQ": [[231, "faq"]], "Contact": [[231, "contact"]], "Impressum": [[231, "impressum"]], "History and releases": [[231, "history-and-releases"]], "The pypath book": [[232, "The-pypath-book"]], "Introduction": [[232, "Introduction"]], "Build, load and save databases": [[232, "Build,-load-and-save-databases"]], "The OmniPath app": [[232, "The-OmniPath-app"]], "Built-in database definitions": [[232, "Built-in-database-definitions"]], "Networks": [[232, "Networks"]], "Strictly literature curated network": [[232, "Strictly-literature-curated-network"]], "The OmniPath network with extra activity flow, enzyme-substrate and ligand-receptor interactions": [[232, "The-OmniPath-network-with-extra-activity-flow,-enzyme-substrate-and-ligand-receptor-interactions"]], "Transcriptional regulation network from DoRothEA and other resources": [[232, "Transcriptional-regulation-network-from-DoRothEA-and-other-resources"]], "Literature curated miRNA post-transcriptional regulation network": [[232, "Literature-curated-miRNA-post-transcriptional-regulation-network"]], "Transcriptional regulation of miRNA": [[232, "Transcriptional-regulation-of-miRNA"]], "lncRNA-mRNA interactions": [[232, "lncRNA-mRNA-interactions"]], "Small molecule-protein interactions": [[232, "Small-molecule-protein-interactions"]], "Enzyme-substrate relationships": [[232, "Enzyme-substrate-relationships"]], "Protein complexes": [[232, "Protein-complexes"], [232, "id2"]], "Annotations": [[232, "Annotations"], [232, "id1"], [235, "annotations"]], "Inter-cellular communication roles": [[232, "Inter-cellular-communication-roles"]], "Data directly from the original resources": [[232, "Data-directly-from-the-original-resources"]], "Download management": [[232, "Download-management"]], "Cache management and customization": [[232, "Cache-management-and-customization"]], "Download failures": [[232, "Download-failures"]], "Corrupted cache content": [[232, "Corrupted-cache-content"]], "Network communication issues: look into the curl debug log": [[232, "Network-communication-issues:-look-into-the-curl-debug-log"]], "Timeouts": [[232, "Timeouts"]], "Access and inspect the Curl object": [[232, "Access-and-inspect-the-Curl-object"]], "Is it failing only for you?": [[232, "Is-it-failing-only-for-you?"]], "Read the log": [[232, "Read-the-log"]], "TLS (SSL, HTTPS) errors": [[232, "TLS-(SSL,-HTTPS)-errors"]], "Resources": [[232, "Resources"]], "Licenses": [[232, "Licenses"]], "Resource information": [[232, "Resource-information"]], "Resource definitions for a certain database or dataset": [[232, "Resource-definitions-for-a-certain-database-or-dataset"]], "Building networks": [[232, "Building-networks"]], "Which network datasets are pre-defined in pypath?": [[232, "Which-network-datasets-are-pre-defined-in-pypath?"]], "The Network object": [[232, "The-Network-object"]], "Network in pandas.DataFrame": [[232, "Network-in-pandas.DataFrame"]], "Translating identifiers": [[232, "Translating-identifiers"]], "Pre-defined ID translation tables": [[232, "Pre-defined-ID-translation-tables"]], "Homology translation tables as dictionaries": [[232, "Homology-translation-tables-as-dictionaries"]], "Homology translation data frames": [[232, "Homology-translation-data-frames"]], "Taxonomy": [[232, "Taxonomy"]], "Translating to NCBI Taxonomy, scientific names and common names": [[232, "Translating-to-NCBI-Taxonomy,-scientific-names-and-common-names"]], "Organism from UniProt ID": [[232, "Organism-from-UniProt-ID"]], "UniProt": [[232, "UniProt"]], "The UniProt input module": [[232, "The-UniProt-input-module"]], "All UniProt IDs for one organism": [[232, "All-UniProt-IDs-for-one-organism"]], "UniProt ID format validation": [[232, "UniProt-ID-format-validation"]], "UniProt ID validation": [[232, "UniProt-ID-validation"]], "Single UniProt protein datasheet": [[232, "Single-UniProt-protein-datasheet"]], "History of UniProt records": [[232, "History-of-UniProt-records"]], "UniProt legacy API": [[232, "UniProt-legacy-API"]], "Processed UniProt annotations": [[232, "Processed-UniProt-annotations"]], "The UniProt utils module": [[232, "The-UniProt-utils-module"]], "Datasheets": [[232, "Datasheets"]], "Tables": [[232, "Tables"]], "Sanitizing UniProt IDs": [[232, "Sanitizing-UniProt-IDs"]], "Enzyme-substrate interactions": [[232, "Enzyme-substrate-interactions"], [235, "enzyme-substrate-interactions"]], "Enzyme-substrate objects": [[232, "Enzyme-substrate-objects"]], "Enzyme-substrate data frame": [[232, "Enzyme-substrate-data-frame"]], "Protein sequences": [[232, "Protein-sequences"]], "Load a single annotation resource": [[232, "Load-a-single-annotation-resource"]], "Load the full annotations database by the database manager": [[232, "Load-the-full-annotations-database-by-the-database-manager"]], "Load only selected annotations": [[232, "Load-only-selected-annotations"]], "Data frames of annotations": [[232, "Data-frames-of-annotations"]], "Inter-cellular signaling roles": [[232, "Inter-cellular-signaling-roles"]], "Build an intercellular communication network": [[232, "Build-an-intercellular-communication-network"]], "Quantitative overview of intercell annotations": [[232, "Quantitative-overview-of-intercell-annotations"]], "Intercell database as data frame": [[232, "Intercell-database-as-data-frame"]], "Browse intercell categories": [[232, "Browse-intercell-categories"]], "Gene Ontology": [[232, "Gene-Ontology"]], "Protein complex objects": [[232, "Protein-complex-objects"]], "Protein complex data frame": [[232, "Protein-complex-data-frame"]], "Saving datasets as pickles": [[232, "Saving-datasets-as-pickles"]], "Log messages and sessions": [[232, "Log-messages-and-sessions"]], "Basic info about the session": [[232, "Basic-info-about-the-session"]], "Read the log file": [[232, "Read-the-log-file"]], "Logging to the console": [[232, "Logging-to-the-console"]], "Disable logging": [[232, "Disable-logging"]], "Write to the log": [[232, "Write-to-the-log"]], "Sending a single message": [[232, "Sending-a-single-message"]], "Connect a module or class to the pypath logger": [[232, "Connect-a-module-or-class-to-the-pypath-logger"]], "BEL export": [[232, "BEL-export"]], "CellPhoneDB export": [[232, "CellPhoneDB-export"]], "The legacy igraph-based network object": [[232, "The-legacy-igraph-based-network-object"]], "I just want a network quickly and play around with pypath": [[232, "I-just-want-a-network-quickly-and-play-around-with-pypath"]], "How do I build networks from any data with pypath?": [[232, "How-do-I-build-networks-from-any-data-with-pypath?"]], "Defining input formats": [[232, "Defining-input-formats"]], "Creating PyPath object and loading the 2 test files": [[232, "Creating-PyPath-object-and-loading-the-2-test-files"]], "Structure of the legacy network object": [[232, "Structure-of-the-legacy-network-object"]], "Directions and signs": [[232, "Directions-and-signs"]], "Accessing nodes in the network": [[232, "Accessing-nodes-in-the-network"]], "Querying relationships with our without causality": [[232, "Querying-relationships-with-our-without-causality"]], "Accessing edges by identifiers": [[232, "Accessing-edges-by-identifiers"]], "Literature references": [[232, "Literature-references"]], "Plotting the network with igraph": [[232, "Plotting-the-network-with-igraph"]], "Reference": [[233, "reference"]], "How to navigate the reference?": [[233, "how-to-navigate-the-reference"]], "Release history": [[234, "release-history"]], "0.1.0": [[234, "id1"]], "0.2.0": [[234, "id2"]], "0.3.0": [[234, "id3"]], "0.4.0": [[234, "id4"]], "0.5.0": [[234, "id5"]], "0.5.32": [[234, "id6"]], "0.6.31": [[234, "id7"]], "0.7.0": [[234, "id8"]], "0.7.74": [[234, "id9"]], "0.7.93": [[234, "id10"]], "0.7.110": [[234, "id11"]], "0.8": [[234, "id12"]], "0.9": [[234, "id13"]], "0.10.0": [[234, "id14"]], "0.11.0": [[234, "id15"]], "0.12.0": [[234, "id16"]], "0.13.0": [[234, "id17"]], "0.14.0": [[234, "id18"]], "Upcoming": [[234, "upcoming"]], "Webservice": [[235, "webservice"]], "Query types": [[235, "query-types"]], "Interaction datasets": [[235, "interaction-datasets"]], "Mouse and rat": [[235, "mouse-and-rat"]], "Examples": [[235, "examples"]], "Molecular interaction network": [[235, "molecular-interaction-network"]], "Molecular complexes": [[235, "molecular-complexes"]], "Roles in inter-cellular communication": [[235, "roles-in-inter-cellular-communication"]], "Exploring possible parameters": [[235, "exploring-possible-parameters"]]}, "indexentries": {"module": [[0, "module-pypath"], [1, "module-pypath.core"], [2, "module-pypath.core.attrs"], [4, "module-pypath.core.common"], [6, "module-pypath.data"], [9, "module-pypath.inputs"], [10, "module-pypath.inputs.cell"], [12, "module-pypath.inputs.common"], [19, "module-pypath.inputs.credentials"], [21, "module-pypath.inputs.ebi"], [23, "module-pypath.inputs.embopress"], [26, "module-pypath.inputs.main"], [27, "module-pypath.inputs.mitab"], [30, "module-pypath.inputs.rdata"], [31, "module-pypath.inputs.science"], [33, "module-pypath.internals"], [34, "module-pypath.internals.input_formats"], [46, "module-pypath.internals.license"], [52, "module-pypath.internals.maps"], [53, "module-pypath.internals.resource"], [60, "module-pypath.legacy"], [61, "module-pypath.legacy.db_categories"], [65, "module-pypath.resources"], [66, "module-pypath.resources.controller"], [68, "module-pypath.resources.data"], [70, "module-pypath.resources.licenses"], [72, "module-pypath.share"], [73, "module-pypath.share.cache"], [76, "module-pypath.share.common"], [168, "module-pypath.share.constants"], [169, "module-pypath.share.curl"], [186, "module-pypath.share.log"], [189, "module-pypath.share.progress"], [191, "module-pypath.share.session"], [197, "module-pypath.share.settings"], [202, "module-pypath.utils"], [203, "module-pypath.utils.proteomicsdb"], [205, "module-pypath.utils.residues"], [207, "module-pypath.visual"], [208, "module-pypath.visual.drawing"], [211, "module-pypath.visual.igraph_drawing"], [217, "module-pypath.visual.igraph_drawing.edge"], [224, "module-pypath.visual.igraph_drawing.vertex"]], "pypath": [[0, "module-pypath"]], "pypath.core": [[1, "module-pypath.core"]], "pypath.core.attrs": [[2, "module-pypath.core.attrs"]], "attributehandler (class in pypath.core.attrs)": [[3, "pypath.core.attrs.AttributeHandler"]], "__init__() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.__init__"]], "serialize() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.serialize"]], "update_attrs() (pypath.core.attrs.attributehandler method)": [[3, "pypath.core.attrs.AttributeHandler.update_attrs"]], "pypath.core.common": [[4, "module-pypath.core.common"]], "filter_network_df() (in module pypath.core.common)": [[5, "pypath.core.common.filter_network_df"]], "pypath.data": [[6, "module-pypath.data"]], "disclaimer() (in module pypath)": [[7, "pypath.disclaimer"]], "info() (in module pypath)": [[8, "pypath.info"]], "pypath.inputs": [[9, "module-pypath.inputs"]], "pypath.inputs.cell": [[10, "module-pypath.inputs.cell"]], "cell_supplementary() (in module pypath.inputs.cell)": [[11, "pypath.inputs.cell.cell_supplementary"]], "pypath.inputs.common": [[12, "module-pypath.inputs.common"]], "csv_sep_change() (in module pypath.inputs.common)": [[13, "pypath.inputs.common.csv_sep_change"]], "glom_fields() (in module pypath.inputs.common)": [[14, "pypath.inputs.common.glom_fields"]], "json_extract() (in module pypath.inputs.common)": [[15, "pypath.inputs.common.json_extract"]], "json_read() (in module pypath.inputs.common)": [[16, "pypath.inputs.common.json_read"]], "read_table() (in module pypath.inputs.common)": [[17, "pypath.inputs.common.read_table"]], "read_xls() (in module pypath.inputs.common)": [[18, "pypath.inputs.common.read_xls"]], "pypath.inputs.credentials": [[19, "module-pypath.inputs.credentials"]], "credentials() (in module pypath.inputs.credentials)": [[20, "pypath.inputs.credentials.credentials"]], "pypath.inputs.ebi": [[21, "module-pypath.inputs.ebi"]], "ebi_rest() (in module pypath.inputs.ebi)": [[22, "pypath.inputs.ebi.ebi_rest"]], "pypath.inputs.embopress": [[23, "module-pypath.inputs.embopress"]], "embopress_supplementary() (in module pypath.inputs.embopress)": [[24, "pypath.inputs.embopress.embopress_supplementary"]], "get_method() (in module pypath.inputs)": [[25, "pypath.inputs.get_method"]], "pypath.inputs.main": [[26, "module-pypath.inputs.main"]], "pypath.inputs.mitab": [[27, "module-pypath.inputs.mitab"]], "mitab_field_list() (in module pypath.inputs.mitab)": [[28, "pypath.inputs.mitab.mitab_field_list"]], "mitab_field_uniprot() (in module pypath.inputs.mitab)": [[29, "pypath.inputs.mitab.mitab_field_uniprot"]], "pypath.inputs.rdata": [[30, "module-pypath.inputs.rdata"]], "pypath.inputs.science": [[31, "module-pypath.inputs.science"]], "science_download() (in module pypath.inputs.science)": [[32, "pypath.inputs.science.science_download"]], "pypath.internals": [[33, "module-pypath.internals"]], "pypath.internals.input_formats": [[34, "module-pypath.internals.input_formats"]], "arraymapping (class in pypath.internals.input_formats)": [[35, "pypath.internals.input_formats.ArrayMapping"]], "__init__() (pypath.internals.input_formats.arraymapping method)": [[35, "pypath.internals.input_formats.ArrayMapping.__init__"]], "biomartmapping (class in pypath.internals.input_formats)": [[36, "pypath.internals.input_formats.BiomartMapping"]], "__init__() (pypath.internals.input_formats.biomartmapping method)": [[36, "pypath.internals.input_formats.BiomartMapping.__init__"]], "filemapping (class in pypath.internals.input_formats)": [[37, "pypath.internals.input_formats.FileMapping"]], "__init__() (pypath.internals.input_formats.filemapping method)": [[37, "pypath.internals.input_formats.FileMapping.__init__"]], "mappinginput (class in pypath.internals.input_formats)": [[38, "pypath.internals.input_formats.MappingInput"]], "__init__() (pypath.internals.input_formats.mappinginput method)": [[38, "pypath.internals.input_formats.MappingInput.__init__"]], "networkinput (class in pypath.internals.input_formats)": [[39, "pypath.internals.input_formats.NetworkInput"]], "__init__() (pypath.internals.input_formats.networkinput method)": [[39, "pypath.internals.input_formats.NetworkInput.__init__"]], "picklemapping (class in pypath.internals.input_formats)": [[40, "pypath.internals.input_formats.PickleMapping"]], "__init__() (pypath.internals.input_formats.picklemapping method)": [[40, "pypath.internals.input_formats.PickleMapping.__init__"]], "promapping (class in pypath.internals.input_formats)": [[41, "pypath.internals.input_formats.ProMapping"]], "__init__() (pypath.internals.input_formats.promapping method)": [[41, "pypath.internals.input_formats.ProMapping.__init__"]], "readlist (class in pypath.internals.input_formats)": [[42, "pypath.internals.input_formats.ReadList"]], "__init__() (pypath.internals.input_formats.readlist method)": [[42, "pypath.internals.input_formats.ReadList.__init__"]], "unichemmapping (class in pypath.internals.input_formats)": [[43, "pypath.internals.input_formats.UnichemMapping"]], "__init__() (pypath.internals.input_formats.unichemmapping method)": [[43, "pypath.internals.input_formats.UnichemMapping.__init__"]], "uniprotlistmapping (class in pypath.internals.input_formats)": [[44, "pypath.internals.input_formats.UniprotListMapping"]], "__init__() (pypath.internals.input_formats.uniprotlistmapping method)": [[44, "pypath.internals.input_formats.UniprotListMapping.__init__"]], "uniprotmapping (class in pypath.internals.input_formats)": [[45, "pypath.internals.input_formats.UniprotMapping"]], "__init__() (pypath.internals.input_formats.uniprotmapping method)": [[45, "pypath.internals.input_formats.UniprotMapping.__init__"]], "resource_id_type() (pypath.internals.input_formats.uniprotmapping static method)": [[45, "pypath.internals.input_formats.UniprotMapping.resource_id_type"]], "pypath.internals.license": [[46, "module-pypath.internals.license"]], "license (class in pypath.internals.license)": [[47, "pypath.internals.license.License"]], "__init__() (pypath.internals.license.license method)": [[47, "pypath.internals.license.License.__init__"]], "enables() (pypath.internals.license.license method)": [[47, "pypath.internals.license.License.enables"]], "licenseattrib (class in pypath.internals.license)": [[48, "pypath.internals.license.LicenseAttrib"]], "__init__() (pypath.internals.license.licenseattrib method)": [[48, "pypath.internals.license.LicenseAttrib.__init__"]], "check_level() (pypath.internals.license.licenseattrib class method)": [[48, "pypath.internals.license.LicenseAttrib.check_level"]], "int_to_level() (pypath.internals.license.licenseattrib class method)": [[48, "pypath.internals.license.LicenseAttrib.int_to_level"]], "level_to_int() (pypath.internals.license.licenseattrib class method)": [[48, "pypath.internals.license.LicenseAttrib.level_to_int"]], "to_int() (pypath.internals.license.licenseattrib method)": [[48, "pypath.internals.license.LicenseAttrib.to_int"]], "licensefeature (class in pypath.internals.license)": [[49, "pypath.internals.license.LicenseFeature"]], "__init__() (pypath.internals.license.licensefeature method)": [[49, "pypath.internals.license.LicenseFeature.__init__"]], "check_level() (pypath.internals.license.licensefeature class method)": [[49, "pypath.internals.license.LicenseFeature.check_level"]], "int_to_level() (pypath.internals.license.licensefeature class method)": [[49, "pypath.internals.license.LicenseFeature.int_to_level"]], "level_to_int() (pypath.internals.license.licensefeature class method)": [[49, "pypath.internals.license.LicenseFeature.level_to_int"]], "to_int() (pypath.internals.license.licensefeature method)": [[49, "pypath.internals.license.LicenseFeature.to_int"]], "licensepurpose (class in pypath.internals.license)": [[50, "pypath.internals.license.LicensePurpose"]], "__init__() (pypath.internals.license.licensepurpose method)": [[50, "pypath.internals.license.LicensePurpose.__init__"]], "check_level() (pypath.internals.license.licensepurpose class method)": [[50, "pypath.internals.license.LicensePurpose.check_level"]], "int_to_level() (pypath.internals.license.licensepurpose class method)": [[50, "pypath.internals.license.LicensePurpose.int_to_level"]], "level_to_int() (pypath.internals.license.licensepurpose class method)": [[50, "pypath.internals.license.LicensePurpose.level_to_int"]], "to_int() (pypath.internals.license.licensepurpose method)": [[50, "pypath.internals.license.LicensePurpose.to_int"]], "licensesharing (class in pypath.internals.license)": [[51, "pypath.internals.license.LicenseSharing"]], "__init__() (pypath.internals.license.licensesharing method)": [[51, "pypath.internals.license.LicenseSharing.__init__"]], "check_level() (pypath.internals.license.licensesharing class method)": [[51, "pypath.internals.license.LicenseSharing.check_level"]], "int_to_level() (pypath.internals.license.licensesharing class method)": [[51, "pypath.internals.license.LicenseSharing.int_to_level"]], "level_to_int() (pypath.internals.license.licensesharing class method)": [[51, "pypath.internals.license.LicenseSharing.level_to_int"]], "to_int() (pypath.internals.license.licensesharing method)": [[51, "pypath.internals.license.LicenseSharing.to_int"]], "pypath.internals.maps": [[52, "module-pypath.internals.maps"]], "pypath.internals.resource": [[53, "module-pypath.internals.resource"]], "abstractresource (class in pypath.internals.resource)": [[54, "pypath.internals.resource.AbstractResource"]], "__init__() (pypath.internals.resource.abstractresource method)": [[54, "pypath.internals.resource.AbstractResource.__init__"]], "load_data() (pypath.internals.resource.abstractresource method)": [[54, "pypath.internals.resource.AbstractResource.load_data"]], "process() (pypath.internals.resource.abstractresource method)": [[54, "pypath.internals.resource.AbstractResource.process"]], "set_method() (pypath.internals.resource.abstractresource method)": [[54, "pypath.internals.resource.AbstractResource.set_method"]], "enzymesubstrateresource (class in pypath.internals.resource)": [[55, "pypath.internals.resource.EnzymeSubstrateResource"]], "__init__() (pypath.internals.resource.enzymesubstrateresource method)": [[55, "pypath.internals.resource.EnzymeSubstrateResource.__init__"]], "get_via() (pypath.internals.resource.enzymesubstrateresource method)": [[55, "pypath.internals.resource.EnzymeSubstrateResource.get_via"]], "enzymesubstrateresourcekey (class in pypath.internals.resource)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey"]], "__init__() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey.__init__"]], "count() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey.count"]], "data_type (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey.data_type"]], "index() (pypath.internals.resource.enzymesubstrateresourcekey method)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey.index"]], "name (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey.name"]], "via (pypath.internals.resource.enzymesubstrateresourcekey attribute)": [[56, "pypath.internals.resource.EnzymeSubstrateResourceKey.via"]], "networkresource (class in pypath.internals.resource)": [[57, "pypath.internals.resource.NetworkResource"]], "__init__() (pypath.internals.resource.networkresource method)": [[57, "pypath.internals.resource.NetworkResource.__init__"]], "networkresourcekey (class in pypath.internals.resource)": [[58, "pypath.internals.resource.NetworkResourceKey"]], "__init__() (pypath.internals.resource.networkresourcekey method)": [[58, "pypath.internals.resource.NetworkResourceKey.__init__"]], "count() (pypath.internals.resource.networkresourcekey method)": [[58, "pypath.internals.resource.NetworkResourceKey.count"]], "data_model (pypath.internals.resource.networkresourcekey attribute)": [[58, "pypath.internals.resource.NetworkResourceKey.data_model"]], "data_type (pypath.internals.resource.networkresourcekey attribute)": [[58, "pypath.internals.resource.NetworkResourceKey.data_type"]], "index() (pypath.internals.resource.networkresourcekey method)": [[58, "pypath.internals.resource.NetworkResourceKey.index"]], "interaction_type (pypath.internals.resource.networkresourcekey attribute)": [[58, "pypath.internals.resource.NetworkResourceKey.interaction_type"]], "label (pypath.internals.resource.networkresourcekey property)": [[58, "pypath.internals.resource.NetworkResourceKey.label"]], "last (pypath.internals.resource.networkresourcekey property)": [[58, "pypath.internals.resource.NetworkResourceKey.last"]], "name (pypath.internals.resource.networkresourcekey attribute)": [[58, "pypath.internals.resource.NetworkResourceKey.name"]], "via (pypath.internals.resource.networkresourcekey attribute)": [[58, "pypath.internals.resource.NetworkResourceKey.via"]], "resourceattributes (class in pypath.internals.resource)": [[59, "pypath.internals.resource.ResourceAttributes"]], "__init__() (pypath.internals.resource.resourceattributes method)": [[59, "pypath.internals.resource.ResourceAttributes.__init__"]], "pypath.legacy": [[60, "module-pypath.legacy"]], "pypath.legacy.db_categories": [[61, "module-pypath.legacy.db_categories"]], "get_categories() (in module pypath.legacy.db_categories)": [[62, "pypath.legacy.db_categories.get_categories"]], "get_category() (in module pypath.legacy.db_categories)": [[63, "pypath.legacy.db_categories.get_category"]], "log() (in module pypath)": [[64, "pypath.log"]], "pypath.resources": [[65, "module-pypath.resources"]], "pypath.resources.controller": [[66, "module-pypath.resources.controller"]], "resourcecontroller (class in pypath.resources.controller)": [[67, "pypath.resources.controller.ResourceController"]], "__init__() (pypath.resources.controller.resourcecontroller method)": [[67, "pypath.resources.controller.ResourceController.__init__"]], "update() (pypath.resources.controller.resourcecontroller method)": [[67, "pypath.resources.controller.ResourceController.update"]], "pypath.resources.data": [[68, "module-pypath.resources.data"]], "get_controller() (in module pypath.resources)": [[69, "pypath.resources.get_controller"]], "pypath.resources.licenses": [[70, "module-pypath.resources.licenses"]], "licenses (class in pypath.resources.licenses)": [[71, "pypath.resources.licenses.Licenses"]], "__init__() (pypath.resources.licenses.licenses method)": [[71, "pypath.resources.licenses.Licenses.__init__"]], "pypath.share": [[72, "module-pypath.share"]], "pypath.share.cache": [[73, "module-pypath.share.cache"]], "cache_item() (in module pypath.share.cache)": [[74, "pypath.share.cache.cache_item"]], "get_cachedir() (in module pypath.share.cache)": [[75, "pypath.share.cache.get_cachedir"]], "pypath.share.common": [[76, "module-pypath.share.common"]], "add_to_list() (in module pypath.share.common)": [[77, "pypath.share.common.add_to_list"]], "add_to_set() (in module pypath.share.common)": [[78, "pypath.share.common.add_to_set"]], "at_least_in() (in module pypath.share.common)": [[79, "pypath.share.common.at_least_in"]], "clean_dict() (in module pypath.share.common)": [[80, "pypath.share.common.clean_dict"]], "combine_attrs() (in module pypath.share.common)": [[81, "pypath.share.common.combine_attrs"]], "console() (in module pypath.share.common)": [[82, "pypath.share.common.console"]], "decode() (in module pypath.share.common)": [[83, "pypath.share.common.decode"]], "del_empty() (in module pypath.share.common)": [[84, "pypath.share.common.del_empty"]], "df_memory_usage() (in module pypath.share.common)": [[85, "pypath.share.common.df_memory_usage"]], "dict_collapse_keys() (in module pypath.share.common)": [[86, "pypath.share.common.dict_collapse_keys"]], "dict_counts() (in module pypath.share.common)": [[87, "pypath.share.common.dict_counts"]], "dict_diff() (in module pypath.share.common)": [[88, "pypath.share.common.dict_diff"]], "dict_expand_keys() (in module pypath.share.common)": [[89, "pypath.share.common.dict_expand_keys"]], "dict_percent() (in module pypath.share.common)": [[90, "pypath.share.common.dict_percent"]], "dict_set_path() (in module pypath.share.common)": [[91, "pypath.share.common.dict_set_path"]], "dict_set_percent() (in module pypath.share.common)": [[92, "pypath.share.common.dict_set_percent"]], "dict_str() (in module pypath.share.common)": [[93, "pypath.share.common.dict_str"]], "dict_subtotals() (in module pypath.share.common)": [[94, "pypath.share.common.dict_subtotals"]], "dict_sym_diff() (in module pypath.share.common)": [[95, "pypath.share.common.dict_sym_diff"]], "dict_union() (in module pypath.share.common)": [[96, "pypath.share.common.dict_union"]], "eq() (in module pypath.share.common)": [[97, "pypath.share.common.eq"]], "filtr() (in module pypath.share.common)": [[98, "pypath.share.common.filtr"]], "first() (in module pypath.share.common)": [[99, "pypath.share.common.first"]], "flat_list() (in module pypath.share.common)": [[100, "pypath.share.common.flat_list"]], "float_or_nan() (in module pypath.share.common)": [[101, "pypath.share.common.float_or_nan"]], "gen_session_id() (in module pypath.share.common)": [[102, "pypath.share.common.gen_session_id"]], "get() (in module pypath.share.common)": [[103, "pypath.share.common.get"]], "get_args() (in module pypath.share.common)": [[104, "pypath.share.common.get_args"]], "is_float() (in module pypath.share.common)": [[105, "pypath.share.common.is_float"]], "is_int() (in module pypath.share.common)": [[106, "pypath.share.common.is_int"]], "is_str() (in module pypath.share.common)": [[107, "pypath.share.common.is_str"]], "jaccard_index() (in module pypath.share.common)": [[108, "pypath.share.common.jaccard_index"]], "join_dicts() (in module pypath.share.common)": [[109, "pypath.share.common.join_dicts"]], "latex_table() (in module pypath.share.common)": [[110, "pypath.share.common.latex_table"]], "match() (in module pypath.share.common)": [[111, "pypath.share.common.match"]], "maybe_in_dict() (in module pypath.share.common)": [[112, "pypath.share.common.maybe_in_dict"]], "md5() (in module pypath.share.common)": [[113, "pypath.share.common.md5"]], "merge_dicts() (in module pypath.share.common)": [[114, "pypath.share.common.merge_dicts"]], "n_shared_elements() (in module pypath.share.common)": [[115, "pypath.share.common.n_shared_elements"]], "n_shared_foreach() (in module pypath.share.common)": [[116, "pypath.share.common.n_shared_foreach"]], "n_shared_total() (in module pypath.share.common)": [[117, "pypath.share.common.n_shared_total"]], "n_shared_unique_foreach() (in module pypath.share.common)": [[118, "pypath.share.common.n_shared_unique_foreach"]], "n_unique_elements() (in module pypath.share.common)": [[119, "pypath.share.common.n_unique_elements"]], "n_unique_foreach() (in module pypath.share.common)": [[120, "pypath.share.common.n_unique_foreach"]], "n_unique_total() (in module pypath.share.common)": [[121, "pypath.share.common.n_unique_total"]], "negate() (in module pypath.share.common)": [[122, "pypath.share.common.negate"]], "none_or_len() (in module pypath.share.common)": [[123, "pypath.share.common.none_or_len"]], "paginate() (in module pypath.share.common)": [[124, "pypath.share.common.paginate"]], "prefix() (in module pypath.share.common)": [[125, "pypath.share.common.prefix"]], "print_table() (in module pypath.share.common)": [[126, "pypath.share.common.print_table"]], "re_safe_groups() (in module pypath.share.common)": [[127, "pypath.share.common.re_safe_groups"]], "remove_prefix() (in module pypath.share.common)": [[128, "pypath.share.common.remove_prefix"]], "rotate() (in module pypath.share.common)": [[129, "pypath.share.common.rotate"]], "sets_to_sorted_lists() (in module pypath.share.common)": [[130, "pypath.share.common.sets_to_sorted_lists"]], "sfirst() (in module pypath.share.common)": [[131, "pypath.share.common.sfirst"]], "shared_elements() (in module pypath.share.common)": [[132, "pypath.share.common.shared_elements"]], "shared_foreach() (in module pypath.share.common)": [[133, "pypath.share.common.shared_foreach"]], "shared_total() (in module pypath.share.common)": [[134, "pypath.share.common.shared_total"]], "shared_unique() (in module pypath.share.common)": [[135, "pypath.share.common.shared_unique"]], "shared_unique_foreach() (in module pypath.share.common)": [[136, "pypath.share.common.shared_unique_foreach"]], "shared_unique_total() (in module pypath.share.common)": [[137, "pypath.share.common.shared_unique_total"]], "__init__() (pypath.share.common.silent method)": [[138, "pypath.share.common.silent.__init__"]], "silent (class in pypath.share.common)": [[138, "pypath.share.common.silent"]], "simpson_index() (in module pypath.share.common)": [[139, "pypath.share.common.simpson_index"]], "simpson_index_counts() (in module pypath.share.common)": [[140, "pypath.share.common.simpson_index_counts"]], "something() (in module pypath.share.common)": [[141, "pypath.share.common.something"]], "sorensen_index() (in module pypath.share.common)": [[142, "pypath.share.common.sorensen_index"]], "suffix() (in module pypath.share.common)": [[143, "pypath.share.common.suffix"]], "sum_dicts() (in module pypath.share.common)": [[144, "pypath.share.common.sum_dicts"]], "swap_dict() (in module pypath.share.common)": [[145, "pypath.share.common.swap_dict"]], "swap_dict_simple() (in module pypath.share.common)": [[146, "pypath.share.common.swap_dict_simple"]], "swap_suffix() (in module pypath.share.common)": [[147, "pypath.share.common.swap_suffix"]], "table_add_row_numbers() (in module pypath.share.common)": [[148, "pypath.share.common.table_add_row_numbers"]], "table_format() (in module pypath.share.common)": [[149, "pypath.share.common.table_format"]], "table_textwrap() (in module pypath.share.common)": [[150, "pypath.share.common.table_textwrap"]], "to_list() (in module pypath.share.common)": [[151, "pypath.share.common.to_list"]], "to_set() (in module pypath.share.common)": [[152, "pypath.share.common.to_set"]], "try_bool() (in module pypath.share.common)": [[153, "pypath.share.common.try_bool"]], "try_float() (in module pypath.share.common)": [[154, "pypath.share.common.try_float"]], "tsv_table() (in module pypath.share.common)": [[155, "pypath.share.common.tsv_table"]], "uniq_list() (in module pypath.share.common)": [[156, "pypath.share.common.uniq_list"]], "uniq_list1() (in module pypath.share.common)": [[157, "pypath.share.common.uniq_list1"]], "uniq_list2() (in module pypath.share.common)": [[158, "pypath.share.common.uniq_list2"]], "uniq_ord_list() (in module pypath.share.common)": [[159, "pypath.share.common.uniq_ord_list"]], "unique_elements() (in module pypath.share.common)": [[160, "pypath.share.common.unique_elements"]], "unique_foreach() (in module pypath.share.common)": [[161, "pypath.share.common.unique_foreach"]], "unique_list() (in module pypath.share.common)": [[162, "pypath.share.common.unique_list"]], "unique_total() (in module pypath.share.common)": [[163, "pypath.share.common.unique_total"]], "upper0() (in module pypath.share.common)": [[164, "pypath.share.common.upper0"]], "values() (in module pypath.share.common)": [[165, "pypath.share.common.values"]], "wcl() (in module pypath.share.common)": [[166, "pypath.share.common.wcl"]], "wrap_truncate() (in module pypath.share.common)": [[167, "pypath.share.common.wrap_truncate"]], "pypath.share.constants": [[168, "module-pypath.share.constants"]], "pypath.share.curl": [[169, "module-pypath.share.curl"]], "curl (class in pypath.share.curl)": [[170, "pypath.share.curl.Curl"]], "__init__() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.__init__"]], "close() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.close"]], "construct_binary_data() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.construct_binary_data"]], "extract() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.extract"]], "is_quoted() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.is_quoted"]], "open() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.open"]], "open_tgz() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.open_tgz"]], "replace_forbidden() (pypath.share.curl.curl class method)": [[170, "pypath.share.curl.Curl.replace_forbidden"]], "set_binary_data() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.set_binary_data"]], "url_fix() (pypath.share.curl.curl method)": [[170, "pypath.share.curl.Curl.url_fix"]], "fileopener (class in pypath.share.curl)": [[171, "pypath.share.curl.FileOpener"]], "__init__() (pypath.share.curl.fileopener method)": [[171, "pypath.share.curl.FileOpener.__init__"]], "extract() (pypath.share.curl.fileopener method)": [[171, "pypath.share.curl.FileOpener.extract"]], "open() (pypath.share.curl.fileopener method)": [[171, "pypath.share.curl.FileOpener.open"]], "open_tgz() (pypath.share.curl.fileopener method)": [[171, "pypath.share.curl.FileOpener.open_tgz"]], "remotefile (class in pypath.share.curl)": [[172, "pypath.share.curl.RemoteFile"]], "__init__() (pypath.share.curl.remotefile method)": [[172, "pypath.share.curl.RemoteFile.__init__"]], "__init__() (pypath.share.curl.cache_delete_off method)": [[173, "pypath.share.curl.cache_delete_off.__init__"]], "cache_delete_off (class in pypath.share.curl)": [[173, "pypath.share.curl.cache_delete_off"]], "__init__() (pypath.share.curl.cache_delete_on method)": [[174, "pypath.share.curl.cache_delete_on.__init__"]], "cache_delete_on (class in pypath.share.curl)": [[174, "pypath.share.curl.cache_delete_on"]], "__init__() (pypath.share.curl.cache_off method)": [[175, "pypath.share.curl.cache_off.__init__"]], "cache_off (class in pypath.share.curl)": [[175, "pypath.share.curl.cache_off"]], "__init__() (pypath.share.curl.cache_on method)": [[176, "pypath.share.curl.cache_on.__init__"]], "cache_on (class in pypath.share.curl)": [[176, "pypath.share.curl.cache_on"]], "__init__() (pypath.share.curl.cache_print_off method)": [[177, "pypath.share.curl.cache_print_off.__init__"]], "cache_print_off (class in pypath.share.curl)": [[177, "pypath.share.curl.cache_print_off"]], "__init__() (pypath.share.curl.cache_print_on method)": [[178, "pypath.share.curl.cache_print_on.__init__"]], "cache_print_on (class in pypath.share.curl)": [[178, "pypath.share.curl.cache_print_on"]], "__init__() (pypath.share.curl.debug_off method)": [[179, "pypath.share.curl.debug_off.__init__"]], "debug_off (class in pypath.share.curl)": [[179, "pypath.share.curl.debug_off"]], "__init__() (pypath.share.curl.debug_on method)": [[180, "pypath.share.curl.debug_on.__init__"]], "debug_on (class in pypath.share.curl)": [[180, "pypath.share.curl.debug_on"]], "__init__() (pypath.share.curl.dryrun_off method)": [[181, "pypath.share.curl.dryrun_off.__init__"]], "dryrun_off (class in pypath.share.curl)": [[181, "pypath.share.curl.dryrun_off"]], "__init__() (pypath.share.curl.dryrun_on method)": [[182, "pypath.share.curl.dryrun_on.__init__"]], "dryrun_on (class in pypath.share.curl)": [[182, "pypath.share.curl.dryrun_on"]], "is_url() (in module pypath.share.curl)": [[183, "pypath.share.curl.is_url"]], "__init__() (pypath.share.curl.preserve_off method)": [[184, "pypath.share.curl.preserve_off.__init__"]], "preserve_off (class in pypath.share.curl)": [[184, "pypath.share.curl.preserve_off"]], "__init__() (pypath.share.curl.preserve_on method)": [[185, "pypath.share.curl.preserve_on.__init__"]], "preserve_on (class in pypath.share.curl)": [[185, "pypath.share.curl.preserve_on"]], "pypath.share.log": [[186, "module-pypath.share.log"]], "logger (class in pypath.share.log)": [[187, "pypath.share.log.Logger"]], "__init__() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.__init__"]], "browse() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.browse"]], "close_logfile() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.close_logfile"]], "console() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.console"]], "flush() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.flush"]], "get_logdir() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.get_logdir"]], "label_message() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.label_message"]], "msg() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.msg"]], "open_logfile() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.open_logfile"]], "strftime() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.strftime"]], "timestamp() (pypath.share.log.logger class method)": [[187, "pypath.share.log.Logger.timestamp"]], "timestamp_message() (pypath.share.log.logger method)": [[187, "pypath.share.log.Logger.timestamp_message"]], "new_logger() (in module pypath.share.log)": [[188, "pypath.share.log.new_logger"]], "pypath.share.progress": [[189, "module-pypath.share.progress"]], "progress (class in pypath.share.progress)": [[190, "pypath.share.progress.Progress"]], "__init__() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.__init__"]], "get_desc() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.get_desc"]], "init_tqdm() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.init_tqdm"]], "set_done() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.set_done"]], "set_status() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.set_status"]], "set_total() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.set_total"]], "step() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.step"]], "terminate() (pypath.share.progress.progress method)": [[190, "pypath.share.progress.Progress.terminate"]], "pypath.share.session": [[191, "module-pypath.share.session"]], "logger (class in pypath.share.session)": [[192, "pypath.share.session.Logger"]], "__init__() (pypath.share.session.logger method)": [[192, "pypath.share.session.Logger.__init__"]], "session (class in pypath.share.session)": [[193, "pypath.share.session.Session"]], "__init__() (pypath.share.session.session method)": [[193, "pypath.share.session.Session.__init__"]], "gen_session_id() (pypath.share.session.session static method)": [[193, "pypath.share.session.Session.gen_session_id"]], "start_logger() (pypath.share.session.session method)": [[193, "pypath.share.session.Session.start_logger"]], "get_log() (in module pypath.share.session)": [[194, "pypath.share.session.get_log"]], "get_session() (in module pypath.share.session)": [[195, "pypath.share.session.get_session"]], "new_session() (in module pypath.share.session)": [[196, "pypath.share.session.new_session"]], "pypath.share.settings": [[197, "module-pypath.share.settings"]], "settings (class in pypath.share.settings)": [[198, "pypath.share.settings.Settings"]], "__init__() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.__init__"]], "context() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.context"]], "get() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.get"]], "get_default() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.get_default"]], "reset() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.reset"]], "reset_all() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.reset_all"]], "setup() (pypath.share.settings.settings method)": [[198, "pypath.share.settings.Settings.setup"]], "context() (in module pypath.share.settings)": [[199, "pypath.share.settings.context"]], "get() (in module pypath.share.settings)": [[200, "pypath.share.settings.get"]], "setup() (in module pypath.share.settings)": [[201, "pypath.share.settings.setup"]], "pypath.utils": [[202, "module-pypath.utils"]], "pypath.utils.proteomicsdb": [[203, "module-pypath.utils.proteomicsdb"]], "proteomicsdb (class in pypath.utils.proteomicsdb)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB"]], "__init__() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.__init__"]], "get_expression() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.get_expression"]], "get_pieces() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.get_pieces"]], "get_proteins() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.get_proteins"]], "get_tissues() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.get_tissues"]], "pandas_matrix() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.pandas_matrix"]], "query() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.query"]], "tissues_x_proteins() (pypath.utils.proteomicsdb.proteomicsdb method)": [[204, "pypath.utils.proteomicsdb.ProteomicsDB.tissues_x_proteins"]], "pypath.utils.residues": [[205, "module-pypath.utils.residues"]], "residuemapper (class in pypath.utils.residues)": [[206, "pypath.utils.residues.ResidueMapper"]], "__init__() (pypath.utils.residues.residuemapper method)": [[206, "pypath.utils.residues.ResidueMapper.__init__"]], "clean() (pypath.utils.residues.residuemapper method)": [[206, "pypath.utils.residues.ResidueMapper.clean"]], "pypath.visual": [[207, "module-pypath.visual"]], "pypath.visual.drawing": [[208, "module-pypath.visual.drawing"]], "interset (class in pypath.visual.drawing)": [[209, "pypath.visual.drawing.InterSet"]], "__init__() (pypath.visual.drawing.interset method)": [[209, "pypath.visual.drawing.InterSet.__init__"]], "draw() (pypath.visual.drawing.interset method)": [[209, "pypath.visual.drawing.InterSet.draw"]], "plot (class in pypath.visual.drawing)": [[210, "pypath.visual.drawing.Plot"]], "__init__() (pypath.visual.drawing.plot method)": [[210, "pypath.visual.drawing.Plot.__init__"]], "pypath.visual.igraph_drawing": [[211, "module-pypath.visual.igraph_drawing"]], "abstractcairographdrawer (class in pypath.visual.igraph_drawing)": [[212, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer"]], "__init__() (pypath.visual.igraph_drawing.abstractcairographdrawer method)": [[212, "pypath.visual.igraph_drawing.AbstractCairoGraphDrawer.__init__"]], "arrowedgedrawer (in module pypath.visual.igraph_drawing)": [[213, "pypath.visual.igraph_drawing.ArrowEdgeDrawer"]], "defaultgraphdrawerffsupport (class in pypath.visual.igraph_drawing)": [[214, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport"]], "__init__() (pypath.visual.igraph_drawing.defaultgraphdrawerffsupport method)": [[214, "pypath.visual.igraph_drawing.DefaultGraphDrawerFFsupport.__init__"]], "defaultvertexdrawer (in module pypath.visual.igraph_drawing)": [[215, "pypath.visual.igraph_drawing.DefaultVertexDrawer"]], "textdrawer (in module pypath.visual.igraph_drawing)": [[216, "pypath.visual.igraph_drawing.TextDrawer"]], "pypath.visual.igraph_drawing.edge": [[217, "module-pypath.visual.igraph_drawing.edge"]], "abstractedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[218, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[218, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[218, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[218, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[218, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.abstractedgedrawer method)": [[218, "pypath.visual.igraph_drawing.edge.AbstractEdgeDrawer.get_label_position"]], "alphavaryingedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[219, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[219, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[219, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[219, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[219, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.alphavaryingedgedrawer method)": [[219, "pypath.visual.igraph_drawing.edge.AlphaVaryingEdgeDrawer.get_label_position"]], "arrowedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[220, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[220, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[220, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[220, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[220, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.arrowedgedrawer method)": [[220, "pypath.visual.igraph_drawing.edge.ArrowEdgeDrawer.get_label_position"]], "darktolightedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[221, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[221, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[221, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[221, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[221, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.darktolightedgedrawer method)": [[221, "pypath.visual.igraph_drawing.edge.DarkToLightEdgeDrawer.get_label_position"]], "lighttodarkedgedrawer (class in pypath.visual.igraph_drawing.edge)": [[222, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[222, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[222, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[222, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[222, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.lighttodarkedgedrawer method)": [[222, "pypath.visual.igraph_drawing.edge.LightToDarkEdgeDrawer.get_label_position"]], "taperededgedrawer (class in pypath.visual.igraph_drawing.edge)": [[223, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer"]], "__init__() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[223, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.__init__"]], "draw_directed_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[223, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_directed_edge"]], "draw_loop_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[223, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_loop_edge"]], "draw_undirected_edge() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[223, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.draw_undirected_edge"]], "get_label_position() (pypath.visual.igraph_drawing.edge.taperededgedrawer method)": [[223, "pypath.visual.igraph_drawing.edge.TaperedEdgeDrawer.get_label_position"]], "pypath.visual.igraph_drawing.vertex": [[224, "module-pypath.visual.igraph_drawing.vertex"]], "abstractcairodrawer (class in pypath.visual.igraph_drawing.vertex)": [[225, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairodrawer method)": [[225, "pypath.visual.igraph_drawing.vertex.AbstractCairoDrawer.__init__"]], "abstractcairovertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[226, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[226, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractcairovertexdrawer method)": [[226, "pypath.visual.igraph_drawing.vertex.AbstractCairoVertexDrawer.draw"]], "abstractdrawer (class in pypath.visual.igraph_drawing.vertex)": [[227, "pypath.visual.igraph_drawing.vertex.AbstractDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractdrawer method)": [[227, "pypath.visual.igraph_drawing.vertex.AbstractDrawer.__init__"]], "abstractvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[228, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[228, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.abstractvertexdrawer method)": [[228, "pypath.visual.igraph_drawing.vertex.AbstractVertexDrawer.draw"]], "defaultvertexdrawer (class in pypath.visual.igraph_drawing.vertex)": [[229, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer"]], "__init__() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[229, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.__init__"]], "draw() (pypath.visual.igraph_drawing.vertex.defaultvertexdrawer method)": [[229, "pypath.visual.igraph_drawing.vertex.DefaultVertexDrawer.draw"]]}})